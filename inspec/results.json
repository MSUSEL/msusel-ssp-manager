{"platform":{"name":"ubuntu","release":"24.04","target_id":"d2111083-60e2-528a-8a75-14e2e2460ed3"},"profiles":[{"name":"tests from controls.audit_response_test.rb","sha256":"a44067d9d3ca813eaffb8649ea8ca498605066d8eee72b61d66c98dbae37f62e","title":"tests from controls/audit_response_test.rb","supports":[],"attributes":[],"groups":[{"id":"audit_response_test.rb","controls":["audit-response"]}],"controls":[{"id":"audit-response","title":"Validate Audit Processing Failure Response Controls","desc":"Ensure that the system responds appropriately to audit processing failures (AU-5)","descriptions":[{"label":"default","data":"Ensure that the system responds appropriately to audit processing failures (AU-5)"}],"impact":1.0,"refs":[],"tags":{},"code":"control 'audit-response' do\n  impact 1.0\n  title 'Validate Audit Processing Failure Response Controls'\n  desc 'Ensure that the system responds appropriately to audit processing failures (AU-5)'\n\n  app_url = 'http://localhost:8000'\n  log_file_path = './logs/opa_interactions.log'\n  audit_log_path = './logs/audit.log'\n\n  # Test case 1: Verify audit failure alert configuration\n  describe 'Audit failure alert configuration' do\n    # Get alert configuration information\n    alert_config_response = http(\"#{app_url}/audit_alert_config\",\n                              method: 'GET',\n                              headers: {\n                                'Content-Type' => 'application/json',\n                                'Authorization' => 'Bearer admin_user_token'\n                              })\n\n    alert_config = JSON.parse(alert_config_response.body)\n\n    it 'should have alerts enabled' do\n      unless alert_config['alerts_enabled'] == true\n        fail \"Audit failure alerts are not enabled\"\n      end\n    end\n\n    it 'should have alert recipients configured' do\n      unless alert_config['alert_recipients'] && alert_config['alert_recipients'].length > 0\n        fail \"No alert recipients configured for audit failures\"\n      end\n    end\n\n    it 'should have appropriate notification methods' do\n      unless alert_config['notification_methods'] && alert_config['notification_methods'].length > 0\n        fail \"No notification methods configured for audit failures\"\n      end\n    end\n  end\n\n  # Test case 2: Verify audit failure actions configuration\n  describe 'Audit failure actions configuration' do\n    # Get actions configuration information\n    actions_config_response = http(\"#{app_url}/audit_actions_config\",\n                                method: 'GET',\n                                headers: {\n                                  'Content-Type' => 'application/json',\n                                  'Authorization' => 'Bearer admin_user_token'\n                                })\n\n    actions_config = JSON.parse(actions_config_response.body)\n\n    it 'should have actions enabled' do\n      unless actions_config['actions_enabled'] == true\n        fail \"Audit failure actions are not enabled\"\n      end\n    end\n\n    it 'should have appropriate actions configured' do\n      unless actions_config['actions'] && actions_config['actions'].length > 0\n        fail \"No actions configured for audit failures\"\n      end\n    end\n\n    it 'should include system shutdown for critical failures' do\n      has_shutdown = false\n      if actions_config['actions']\n        actions_config['actions'].each do |action|\n          if action['type'] == 'shutdown' && action['trigger'] == 'critical_failure'\n            has_shutdown = true\n            break\n          end\n        end\n      end\n\n      unless has_shutdown\n        fail \"System shutdown not configured for critical audit failures\"\n      end\n    end\n  end\n\n  # Test case 3: Verify audit capacity protection\n  describe 'Audit capacity protection' do\n    # Get capacity protection information\n    capacity_config_response = http(\"#{app_url}/audit_capacity_protection\",\n                                  method: 'GET',\n                                  headers: {\n                                    'Content-Type' => 'application/json',\n                                    'Authorization' => 'Bearer admin_user_token'\n                                  })\n\n    capacity_config = JSON.parse(capacity_config_response.body)\n\n    it 'should have capacity protection enabled' do\n      unless capacity_config['capacity_protection_enabled'] == true\n        fail \"Audit capacity protection is not enabled\"\n      end\n    end\n\n    it 'should have appropriate capacity threshold' do\n      unless capacity_config['capacity_threshold_percent'] <= 90\n        fail \"Capacity threshold too high: #{capacity_config['capacity_threshold_percent']}% (should be <= 90%)\"\n      end\n    end\n\n    it 'should have appropriate actions for capacity threshold breaches' do\n      unless capacity_config['capacity_actions'] && capacity_config['capacity_actions'].length > 0\n        fail \"No actions configured for capacity threshold breaches\"\n      end\n    end\n  end\n\n  # Test case 4: Verify real-time monitoring\n  describe 'Real-time audit monitoring' do\n    # Get monitoring configuration information\n    monitoring_config_response = http(\"#{app_url}/audit_monitoring_config\",\n                                    method: 'GET',\n                                    headers: {\n                                      'Content-Type' => 'application/json',\n                                      'Authorization' => 'Bearer admin_user_token'\n                                    })\n\n    monitoring_config = JSON.parse(monitoring_config_response.body)\n\n    it 'should have real-time monitoring enabled' do\n      unless monitoring_config['real_time_monitoring_enabled'] == true\n        fail \"Real-time audit monitoring is not enabled\"\n      end\n    end\n\n    it 'should have appropriate monitoring interval' do\n      unless monitoring_config['monitoring_interval_seconds'] <= 300\n        fail \"Monitoring interval too long: #{monitoring_config['monitoring_interval_seconds']} seconds (should be <= 300)\"\n      end\n    end\n  end\n\n  # Test case 5: Verify OPA policy validation\n  describe 'OPA policy validation for audit response' do\n    # Check OPA logs for audit response validation\n    opa_log_content = file(log_file_path).content\n\n    it 'should contain audit response validation in OPA logs' do\n      keywords = %w[audit_alerts_configured audit_actions_configured audit_capacity_protection_configured real_time_monitoring_configured audit_failure_handled]\n      missing_keywords = keywords.reject { |keyword| opa_log_content.include?(keyword) }\n\n      unless missing_keywords.empty?\n        fail \"OPA logs do not contain audit response validation keywords: #{missing_keywords.join(', ')}\"\n      end\n    end\n  end\n\n  # Test case 6: Simulate audit failure and verify response\n  describe 'System response to audit failure' do\n    # Simulate audit failure\n    simulate_response = http(\"#{app_url}/simulate_audit_failure\",\n                            method: 'POST',\n                            headers: {\n                              'Content-Type' => 'application/json',\n                              'Authorization' => 'Bearer admin_user_token'\n                            },\n                            data: { failure_type: 'storage_error' }.to_json)\n\n    simulate_result = JSON.parse(simulate_response.body)\n\n    it 'should detect audit failure' do\n      unless simulate_result['failure_detected'] == true\n        fail \"System did not detect audit failure\"\n      end\n    end\n\n    it 'should generate alert for audit failure' do\n      unless simulate_result['alert_generated'] == true\n        fail \"Alert not generated for audit failure\"\n      end\n    end\n\n    it 'should take appropriate actions for audit failure' do\n      unless simulate_result['actions_taken'] && simulate_result['actions_taken'].length > 0\n        fail \"No actions taken for audit failure\"\n      end\n    end\n  end\n\n  # Test case 7: Simulate critical audit failure and verify response\n  describe 'System response to critical audit failure' do\n    # Simulate critical audit failure\n    simulate_response = http(\"#{app_url}/simulate_audit_failure\",\n                            method: 'POST',\n                            headers: {\n                              'Content-Type' => 'application/json',\n                              'Authorization' => 'Bearer admin_user_token'\n                            },\n                            data: { failure_type: 'critical_failure' }.to_json)\n\n    simulate_result = JSON.parse(simulate_response.body)\n\n    it 'should detect critical audit failure' do\n      unless simulate_result['failure_detected'] == true && simulate_result['failure_severity'] == 'critical'\n        fail \"System did not detect critical audit failure\"\n      end\n    end\n\n    it 'should generate critical alert' do\n      unless simulate_result['alert_generated'] == true && simulate_result['alert_level'] == 'critical'\n        fail \"Critical alert not generated for critical audit failure\"\n      end\n    end\n\n    it 'should initiate system shutdown or override' do\n      unless simulate_result['actions_taken'] && simulate_result['actions_taken'].any? { |action| action['type'] == 'shutdown' || action['type'] == 'override' }\n        fail \"System shutdown or override not initiated for critical audit failure\"\n      end\n    end\n  end\nend\n","source_location":{"line":1,"ref":"controls/audit_response_test.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"Audit failure alert configuration should have alerts enabled","run_time":0.000745848,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit failure alert configuration"},{"status":"passed","code_desc":"Audit failure alert configuration should have alert recipients configured","run_time":6.3379e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit failure alert configuration"},{"status":"passed","code_desc":"Audit failure alert configuration should have appropriate notification methods","run_time":4.4704e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit failure alert configuration"},{"status":"passed","code_desc":"Audit failure actions configuration should have actions enabled","run_time":5.4553e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit failure actions configuration"},{"status":"passed","code_desc":"Audit failure actions configuration should have appropriate actions configured","run_time":4.3842e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit failure actions configuration"},{"status":"passed","code_desc":"Audit failure actions configuration should include system shutdown for critical failures","run_time":4.6578e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit failure actions configuration"},{"status":"passed","code_desc":"Audit capacity protection should have capacity protection enabled","run_time":5.1326e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit capacity protection"},{"status":"passed","code_desc":"Audit capacity protection should have appropriate capacity threshold","run_time":4.4414e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit capacity protection"},{"status":"passed","code_desc":"Audit capacity protection should have appropriate actions for capacity threshold breaches","run_time":4.2149e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Audit capacity protection"},{"status":"passed","code_desc":"Real-time audit monitoring should have real-time monitoring enabled","run_time":5.1356e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Real-time audit monitoring"},{"status":"passed","code_desc":"Real-time audit monitoring should have appropriate monitoring interval","run_time":4.3011e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Real-time audit monitoring"},{"status":"passed","code_desc":"OPA policy validation for audit response should contain audit response validation in OPA logs","run_time":0.002701423,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"OPA policy validation for audit response"},{"status":"passed","code_desc":"System response to audit failure should detect audit failure","run_time":0.00219286,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"System response to audit failure"},{"status":"passed","code_desc":"System response to audit failure should generate alert for audit failure","run_time":0.000124914,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"System response to audit failure"},{"status":"passed","code_desc":"System response to audit failure should take appropriate actions for audit failure","run_time":7.7265e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"System response to audit failure"},{"status":"passed","code_desc":"System response to critical audit failure should detect critical audit failure","run_time":0.000341129,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"System response to critical audit failure"},{"status":"passed","code_desc":"System response to critical audit failure should generate critical alert","run_time":0.000156604,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"System response to critical audit failure"},{"status":"passed","code_desc":"System response to critical audit failure should initiate system shutdown or override","run_time":6.4721e-05,"start_time":"2025-05-04T21:59:25-06:00","resource_class":"Object","resource_params":"[]","resource_id":"System response to critical audit failure"}]}],"status":"loaded","status_message":""}],"statistics":{"duration":0.016079884},"version":"6.8.11"}