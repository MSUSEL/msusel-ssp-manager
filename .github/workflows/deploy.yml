name: Minikube CI/CD

on:
  push:
    branches:
      - minikube

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      
      - name: Build and push Docker images
        run: |
          docker build -t ghcr.io/${{ github.actor }}/app:latest -f app/Dockerfile ./app
          docker push ghcr.io/${{ github.actor }}/app:latest
          docker build -t ghcr.io/${{ github.actor }}/db:latest -f db/Dockerfile ./db
          docker push ghcr.io/${{ github.actor }}/db:latest
          docker build -t ghcr.io/${{ github.actor }}/flask:latest -f flask/Dockerfile ./flask
          docker push ghcr.io/${{ github.actor }}/flask:latest
          docker build -t ghcr.io/${{ github.actor }}/opa:latest -f opa/Dockerfile ./opa
          docker push ghcr.io/${{ github.actor }}/opa:latest
          docker build -t ghcr.io/${{ github.actor }}/react-app:latest -f react-app/Dockerfile ./react-app
          docker push ghcr.io/${{ github.actor }}/react-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Set up Kubectl for AKS
        run: |
          echo "${{ secrets.KUBECONFIG_SECRET }}" | base64 -d > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Authenticate to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Deploy to AKS
        run: |
          kubectl apply -f manifests/
          kubectl rollout restart deployment app -n default
          kubectl rollout restart deployment db -n default
          kubectl rollout restart deployment flask -n default
          kubectl rollout restart deployment opa -n default
          kubectl rollout restart deployment react-app -n default
