{"platform":{"name":"ubuntu","release":"24.04","target_id":"d2111083-60e2-528a-8a75-14e2e2460ed3"},"profiles":[{"name":"tests from .home.ernesto.Documents.msusel-ssp-manager.inspec.access_control_test.rb","sha256":"21f93a0e98681be46e4ab229d458688431f5f863a91e6123ee1313d2af91cca4","title":"tests from /home/ernesto/Documents/msusel-ssp-manager/inspec/access_control_test.rb","supports":[],"attributes":[],"groups":[{"id":"access_control_test.rb","controls":["access-control-policy"]}],"controls":[{"id":"access-control-policy","title":"Validate Role-Based Access Control (RBAC)","desc":"Ensure that role-based access control is properly enforced (AC-2, AC-3)","descriptions":[{"label":"default","data":"Ensure that role-based access control is properly enforced (AC-2, AC-3)"}],"impact":1.0,"refs":[],"tags":{},"code":"control 'access-control-policy' do\n  impact 1.0\n  title 'Validate Role-Based Access Control (RBAC)'\n  desc 'Ensure that role-based access control is properly enforced (AC-2, AC-3)'\n\n  app_url = 'http://localhost:8000'\n  log_file_path = './logs/opa_interactions.log'\n\n  # Test case 1: Regular user accessing allowed resource\n  describe 'Regular user accessing user profile' do\n    # Simulate login as regular user\n    login_response = http(\"#{app_url}/login\",\n                          method: 'POST',\n                          headers: { 'Content-Type' => 'application/json' },\n                          data: { username: 'regular_user', password: 'SecurePassword123' }.to_json)\n\n    token = JSON.parse(login_response.body)['access_token']\n\n    # Try to access user profile (should be allowed)\n    profile_response = http(\"#{app_url}/user_profile\",\n                            method: 'GET',\n                            headers: { 'Authorization' => \"Bearer #{token}\" })\n\n    it 'should allow access to user profile' do\n      expect(profile_response.status).to eq(200)\n      expect(JSON.parse(profile_response.body)['allowed']).to eq(true)\n    end\n  end\n\n  # Test case 2: Regular user accessing admin resource\n  describe 'Regular user accessing admin panel' do\n    # Simulate login as regular user\n    login_response = http(\"#{app_url}/login\",\n                          method: 'POST',\n                          headers: { 'Content-Type' => 'application/json' },\n                          data: { username: 'regular_user', password: 'SecurePassword123' }.to_json)\n\n    token = JSON.parse(login_response.body)['access_token']\n\n    # Try to access admin panel (should be denied)\n    admin_response = http(\"#{app_url}/admin_panel\",\n                          method: 'GET',\n                          headers: { 'Authorization' => \"Bearer #{token}\" })\n\n    it 'should deny access to admin panel' do\n      expect(admin_response.status).to eq(403)\n      expect(JSON.parse(admin_response.body)['allowed']).to eq(false)\n    end\n  end\n\n  # Test case 3: Admin user accessing admin resource\n  describe 'Admin user accessing admin panel' do\n    # Simulate login as admin user\n    login_response = http(\"#{app_url}/login\",\n                          method: 'POST',\n                          headers: { 'Content-Type' => 'application/json' },\n                          data: { username: 'admin_user', password: 'AdminSecurePass456' }.to_json)\n\n    token = JSON.parse(login_response.body)['access_token']\n\n    # Try to access admin panel (should be allowed)\n    admin_response = http(\"#{app_url}/admin_panel\",\n                          method: 'GET',\n                          headers: { 'Authorization' => \"Bearer #{token}\" })\n\n    it 'should allow admin access to admin panel' do\n      expect(admin_response.status).to eq(200)\n      expect(JSON.parse(admin_response.body)['allowed']).to eq(true)\n    end\n  end\n\n  # Test case 4: Access outside business hours\n  describe 'Regular user accessing resources outside business hours' do\n    # Simulate login as regular user\n    login_response = http(\"#{app_url}/login\",\n                          method: 'POST',\n                          headers: { 'Content-Type' => 'application/json' },\n                          data: { username: 'regular_user', password: 'SecurePassword123' }.to_json)\n\n    token = JSON.parse(login_response.body)['access_token']\n\n    # Try to access resource outside business hours (should be denied)\n    # Note: This test assumes the server can simulate different times or the test is run outside business hours\n    after_hours_response = http(\"#{app_url}/user_profile?simulate_time=20:00:00\",\n                                method: 'GET',\n                                headers: { 'Authorization' => \"Bearer #{token}\" })\n\n    it 'should deny access outside business hours for regular users' do\n      expect(after_hours_response.status).to eq(403)\n      expect(JSON.parse(after_hours_response.body)['allowed']).to eq(false)\n      expect(JSON.parse(after_hours_response.body)['reason']).to include('outside business hours')\n    end\n  end\n\n  # Validate OPA logs for access control decisions\n  describe file(log_file_path) do\n    its('content') { should include 'access_control' }\n    its('content') { should include 'allow_access' }\n    its('content') { should include 'deny_access' }\n  end\nend\n","source_location":{"line":1,"ref":"/home/ernesto/Documents/msusel-ssp-manager/inspec/access_control_test.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"Regular user accessing user profile should allow access to user profile","run_time":0.01084486,"start_time":"2025-04-24T12:36:14-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Regular user accessing user profile"},{"status":"passed","code_desc":"Regular user accessing admin panel should deny access to admin panel","run_time":0.006544624,"start_time":"2025-04-24T12:36:14-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Regular user accessing admin panel"},{"status":"passed","code_desc":"Admin user accessing admin panel should allow admin access to admin panel","run_time":0.004533673,"start_time":"2025-04-24T12:36:14-06:00","resource_class":"Object","resource_params":"[]","resource_id":"Admin user accessing admin panel"},{"status":"failed","code_desc":"Regular user accessing resources outside business hours should deny access outside business hours for regular users","run_time":0.044705427,"start_time":"2025-04-24T12:36:14-06:00","message":"\nexpected: 403\n     got: 200\n\n(compared using ==)\n","resource_class":"Object","resource_params":"[]","resource_id":"Regular user accessing resources outside business hours"},{"status":"passed","code_desc":"File ./logs/opa_interactions.log content is expected to include \"access_control\"","run_time":0.008859137,"start_time":"2025-04-24T12:36:14-06:00","resource_class":"file","resource_params":"[\"./logs/opa_interactions.log\"]","resource_id":"./logs/opa_interactions.log"},{"status":"passed","code_desc":"File ./logs/opa_interactions.log content is expected to include \"allow_access\"","run_time":0.000509497,"start_time":"2025-04-24T12:36:14-06:00","resource_class":"file","resource_params":"[\"./logs/opa_interactions.log\"]","resource_id":"./logs/opa_interactions.log"},{"status":"passed","code_desc":"File ./logs/opa_interactions.log content is expected to include \"deny_access\"","run_time":0.00010234,"start_time":"2025-04-24T12:36:14-06:00","resource_class":"file","resource_params":"[\"./logs/opa_interactions.log\"]","resource_id":"./logs/opa_interactions.log"}]}],"status":"loaded","status_message":""}],"statistics":{"duration":0.086974679},"version":"6.8.11"}