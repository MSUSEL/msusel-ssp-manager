[{"_key":"CWE-1004","_id":"cwe/CWE-1004","_rev":"_jHZO_-e---","original_id":"1004","datatype":"cwe","name":"Sensitive Cookie Without 'HttpOnly' Flag","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"If the HttpOnly flag is not set, then sensitive information stored in the cookie may be exposed to unintended parties.","Scope":"Confidentiality"},{"Impact":"Gain Privileges or Assume Identity","Note":"If the cookie in question is an authentication cookie, then not setting the HttpOnly flag may allow an adversary to steal authentication data (e.g., a session ID) and assume the identity of the user.","Scope":"Integrity"}],"description":"The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS.","likeliehood_of_exploit":"Medium","short_description":"The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag."}},{"_key":"CWE-1007","_id":"cwe/CWE-1007","_rev":"_jHZO_-e--_","original_id":"1007","datatype":"cwe","name":"Insufficient Visual Distinction of Homoglyphs Presented to User","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"An attacker may ultimately redirect a user to a malicious website, by deceiving the user into believing the URL they are accessing is a trusted domain. However, the attack can also be used to forge log entries by using homoglyphs in usernames. Homoglyph manipulations are often the first step towards executing advanced attacks such as stealing a user's credentials, Cross-Site Scripting (XSS), or log forgery. If an attacker redirects a user to a malicious site, the attacker can mimic a trusted domain to steal account credentials and perform actions on behalf of the user, without the user's knowledge. Similarly, an attacker could create a username for a website that contains homoglyph characters, making it difficult for an admin to review logs and determine which users performed which actions.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action."}},{"_key":"CWE-102","_id":"cwe/CWE-102","_rev":"_jHZO_-e--A","original_id":"102","datatype":"cwe","name":"Struts: Duplicate Validation Forms","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"If two validation forms have the same name, the Struts Validator arbitrarily chooses one of the forms to use for input validation and discards the other. This decision might not correspond to the programmer's expectations, possibly leading to resultant weaknesses. Moreover, it indicates that the validation logic is not up-to-date, and can indicate that other, more subtle validation errors are present.","likeliehood_of_exploit":"","short_description":"The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect."}},{"_key":"CWE-1021","_id":"cwe/CWE-1021","_rev":"_jHZO_-e--B","original_id":"1021","datatype":"cwe","name":"Improper Restriction of Rendered UI Layers or Frames","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker can trick a user into performing actions that are masked and hidden from the user's view. The impact varies widely, depending on the functionality of the underlying application. For example, in a social media application, clickjacking could be used to trik the user into changing privacy settings.","Scope":"Access Control"}],"description":"A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to.","likeliehood_of_exploit":"","short_description":"The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with."}},{"_key":"CWE-1022","_id":"cwe/CWE-1022","_rev":"_jHZO_-e--C","original_id":"1022","datatype":"cwe","name":"Use of Web Link to Untrusted Target with window.opener Access","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"The user may be redirected to an untrusted page that contains undesired content or malicious script code.","Scope":"Confidentiality"}],"description":"When a user clicks a link to an external site (\"target\"), the target=\"_blank\" attribute causes the target site's contents to be opened in a new window or tab, which runs in the same process as the original page. The window.opener object records information about the original page that offered the link.  If an attacker can run script on the target page, then they could read or modify certain properties of the window.opener object, including the location property - even if the original and target site are not the same origin.  An attacker can modify the location property to automatically redirect the user to a malicious site, e.g. as part of a phishing attack. Since this redirect happens in the original window/tab - which is not necessarily visible, since the browser is focusing the display on the new target page - the user might not notice any suspicious redirection.","likeliehood_of_exploit":"Medium","short_description":"The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying  security-critical properties of the window.opener object, such as the location property."}},{"_key":"CWE-1023","_id":"cwe/CWE-1023","_rev":"_jHZO_-e--D","original_id":"1023","datatype":"cwe","name":"Incomplete Comparison with Missing Factors","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\tAn incomplete comparison can lead to resultant weaknesses, e.g., by operating on the wrong object or making a security decision without considering a required factor.\n      ","likeliehood_of_exploit":"","short_description":"The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors."}},{"_key":"CWE-1024","_id":"cwe/CWE-1024","_rev":"_jHZO_-e--E","original_id":"1024","datatype":"cwe","name":"Comparison of Incompatible Types","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"In languages that are strictly typed but support casting/conversion, such as C or C++, the programmer might assume that casting one entity to the same type as another entity will ensure that the comparison will be performed correctly, but this cannot be guaranteed.  In languages that are not strictly typed, such as PHP or JavaScript, there may be implicit casting/conversion to a type that the programmer is unaware of, causing unexpected results; for example, the string \"123\" might be converted to a number type.  See examples.","likeliehood_of_exploit":"","short_description":"The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared."}},{"_key":"CWE-1025","_id":"cwe/CWE-1025","_rev":"_jHZO_-e--F","original_id":"1025","datatype":"cwe","name":"Comparison Using Wrong Factors","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"This can lead to incorrect results and resultant weaknesses.  For example, the code might inadvertently compare references to objects, instead of the relevant contents of those objects, causing two \"equal\" objects to be considered unequal.","likeliehood_of_exploit":"","short_description":"The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses."}},{"_key":"CWE-103","_id":"cwe/CWE-103","_rev":"_jHZO_-e--G","original_id":"103","datatype":"cwe","name":"Struts: Incomplete validate() Method Definition","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"Disabling the validation framework for a form exposes the product to numerous types of attacks. Unchecked input is the root cause of vulnerabilities like cross-site scripting, process control, and SQL injection.","Scope":"Other"},{"Impact":"Other","Note":"Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.","Scope":"Other"}],"description":"If the code does not call super.validate(), the Validation Framework cannot check the contents of the form against a validation form. In other words, the validation framework will be disabled for the given form.","likeliehood_of_exploit":"","short_description":"The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate()."}},{"_key":"CWE-1037","_id":"cwe/CWE-1037","_rev":"_jHZO_-e--H","original_id":"1037","datatype":"cwe","name":"Processor Optimization Removal or Modification of Security-critical Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Likelihood":"High","Note":"A successful exploitation of this weakness will change the order of an application's execution and will likely be used to bypass specific protection mechanisms. This bypass can be exploited further to potentially read data that should otherwise be unaccessible.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"Low","short_description":"The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified."}},{"_key":"CWE-1038","_id":"cwe/CWE-1038","_rev":"_jHZO_-e--I","original_id":"1038","datatype":"cwe","name":"Insecure Automated Optimizations","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"The optimizations alter the order of execution resulting in side effects that were not intended by the original developer.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"Low","short_description":"The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption."}},{"_key":"CWE-1039","_id":"cwe/CWE-1039","_rev":"_jHZO_-e--J","original_id":"1039","datatype":"cwe","name":"Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"When the automated recognition is used in a protection mechanism, an attacker may be able to craft inputs that are misinterpreted in a way that grants excess privileges.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept."}},{"_key":"CWE-104","_id":"cwe/CWE-104","_rev":"_jHZO_-e--K","original_id":"104","datatype":"cwe","name":"Struts: Form Bean Does Not Extend Validation Class","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"Bypassing the validation framework for a form exposes the application to numerous types of attacks. Unchecked input is an important component of vulnerabilities like cross-site scripting, process control, and SQL injection.","Scope":"Other"},{"Impact":"Other","Note":"Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation."}},{"_key":"CWE-1041","_id":"cwe/CWE-1041","_rev":"_jHZO_-e--L","original_id":"1041","datatype":"cwe","name":"Use of Redundant Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product has multiple functions, methods, procedures, macros, etc. that\n\t\t\t\t\tcontain the same code."}},{"_key":"CWE-1042","_id":"cwe/CWE-1042","_rev":"_jHZO_-e--M","original_id":"1042","datatype":"cwe","name":"Static Member Data Element outside of a Singleton Class Element","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains a member element that is declared as static (but not final), in which\n\t\t\t\t\tits parent class element \n\t\t\t\t\tis not a singleton class - that is, a class element that can be used only once in\n\t\t\t\t\tthe 'to' association of a Create action."}},{"_key":"CWE-1043","_id":"cwe/CWE-1043","_rev":"_jHZO_-e--N","original_id":"1043","datatype":"cwe","name":"Data Element Aggregating an Excessively Large Number of Non-Primitive Elements","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses a data element that has an excessively large\n\t\t\t\t\tnumber of sub-elements with non-primitive data types such as structures or aggregated objects."}},{"_key":"CWE-1044","_id":"cwe/CWE-1044","_rev":"_jHZO_-e--O","original_id":"1044","datatype":"cwe","name":"Architecture with Number of Horizontal Layers Outside of Expected Range","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product's architecture contains too many - or too few -\n\t\t\t\t\thorizontal layers."}},{"_key":"CWE-1045","_id":"cwe/CWE-1045","_rev":"_jHZO_-e--P","original_id":"1045","datatype":"cwe","name":"Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor."}},{"_key":"CWE-1046","_id":"cwe/CWE-1046","_rev":"_jHZO_-e--Q","original_id":"1046","datatype":"cwe","name":"Creation of Immutable Text Using String Concatenation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product creates an immutable text string using string concatenation operations."}},{"_key":"CWE-1047","_id":"cwe/CWE-1047","_rev":"_jHZO_-e--R","original_id":"1047","datatype":"cwe","name":"Modules with Circular Dependencies","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies."}},{"_key":"CWE-1048","_id":"cwe/CWE-1048","_rev":"_jHZO_-e--S","original_id":"1048","datatype":"cwe","name":"Invokable Control Element with Large Number of Outward Calls","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains callable control elements that\n         contain an excessively large number of references to other\n         application objects external to the context of the callable,\n         i.e. a Fan-Out value that is excessively large."}},{"_key":"CWE-1049","_id":"cwe/CWE-1049","_rev":"_jHZO_-e--T","original_id":"1049","datatype":"cwe","name":"Excessive Data Query Operations in a Large Data Table","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product performs a data query with a large number of joins\n\t\t\t\t\tand sub-queries on a large data table."}},{"_key":"CWE-105","_id":"cwe/CWE-105","_rev":"_jHZO_-e--U","original_id":"105","datatype":"cwe","name":"Struts: Form Field Without Validator","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"If unused fields are not validated, shared business logic in an action may allow attackers to bypass the validation checks that are performed for other uses of the form.","Scope":"Integrity"}],"description":"Omitting validation for even a single input field may give attackers the leeway they need to compromise the product. Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.","likeliehood_of_exploit":"","short_description":"The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation."}},{"_key":"CWE-1050","_id":"cwe/CWE-1050","_rev":"_jHZO_-e--V","original_id":"1050","datatype":"cwe","name":"Excessive Platform Resource Consumption within a Loop","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product has a loop body or loop condition that contains a control element that directly or\n\t\t\t\t\tindirectly consumes platform resources, e.g. messaging, sessions, locks, or file\n\t\t\t\t\tdescriptors."}},{"_key":"CWE-1051","_id":"cwe/CWE-1051","_rev":"_jHZO_-e--W","original_id":"1051","datatype":"cwe","name":"Initialization with Hard-Coded Network Resource Configuration Data","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product initializes data using hard-coded values that act as network resource identifiers."}},{"_key":"CWE-1052","_id":"cwe/CWE-1052","_rev":"_jHZO_-e--X","original_id":"1052","datatype":"cwe","name":"Excessive Use of Hard-Coded Literals in Initialization","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product initializes a data element using a hard-coded\n\t\t\t\t\tliteral that is not a simple integer or static constant element."}},{"_key":"CWE-1053","_id":"cwe/CWE-1053","_rev":"_jHZO_-e--Y","original_id":"1053","datatype":"cwe","name":"Missing Documentation for Design","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The product does not have documentation that represents how it is designed."}},{"_key":"CWE-1054","_id":"cwe/CWE-1054","_rev":"_jHZO_-e--Z","original_id":"1054","datatype":"cwe","name":"Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code at one architectural layer invokes code that resides\n\t\t\t\t\tat a deeper layer than the adjacent layer, i.e., the invocation skips at least one\n\t\t\t\t\tlayer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal layer."}},{"_key":"CWE-1055","_id":"cwe/CWE-1055","_rev":"_jHZO_-e--a","original_id":"1055","datatype":"cwe","name":"Multiple Inheritance from Concrete Classes","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains a class with inheritance from more than\n\t\t\t\t\tone concrete class."}},{"_key":"CWE-1056","_id":"cwe/CWE-1056","_rev":"_jHZO_-e--b","original_id":"1056","datatype":"cwe","name":"Invokable Control Element with Variadic Parameters","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A named-callable or method control element has a signature that\n\t\t\t\t\tsupports a variable (variadic) number of parameters or arguments."}},{"_key":"CWE-1057","_id":"cwe/CWE-1057","_rev":"_jHZO_-e--c","original_id":"1057","datatype":"cwe","name":"Data Access Operations Outside of Expected Data Manager Component","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager."}},{"_key":"CWE-1058","_id":"cwe/CWE-1058","_rev":"_jHZO_-e--d","original_id":"1058","datatype":"cwe","name":"Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains a function or method that\n\t\t operates in a multi-threaded environment but owns an unsafe non-final\n\t\t                     static storable or member data element."}},{"_key":"CWE-1059","_id":"cwe/CWE-1059","_rev":"_jHZO_-e--e","original_id":"1059","datatype":"cwe","name":"Insufficient Technical Documentation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Maintainability","Note":"Without a method of verification, one cannot be sure that everything only functions as expected.","Scope":"Other"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product does not contain sufficient\n         technical or engineering documentation (whether on paper or\n         in electronic form) that contains descriptions of all the\n         relevant software/hardware elements of the product, such as\n         its usage, structure, architectural components, interfaces, design, implementation,\n         configuration, operation, etc."}},{"_key":"CWE-106","_id":"cwe/CWE-106","_rev":"_jHZO_-e--f","original_id":"106","datatype":"cwe","name":"Struts: Plug-in Framework not in Use","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation."}},{"_key":"CWE-1060","_id":"cwe/CWE-1060","_rev":"_jHZO_-e--g","original_id":"1060","datatype":"cwe","name":"Excessive Number of Inefficient Server-Side Data Accesses","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product performs too many data queries without using efficient data processing functionality such as stored procedures."}},{"_key":"CWE-1061","_id":"cwe/CWE-1061","_rev":"_jHZO_-e--h","original_id":"1061","datatype":"cwe","name":"Insufficient Encapsulation","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that the programmer did not intend."}},{"_key":"CWE-1062","_id":"cwe/CWE-1062","_rev":"_jHZO_-e--i","original_id":"1062","datatype":"cwe","name":"Parent Class with References to Child Class","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code has a parent class that contains references to a child class, its methods, or its members."}},{"_key":"CWE-1063","_id":"cwe/CWE-1063","_rev":"_jHZO_-e--j","original_id":"1063","datatype":"cwe","name":"Creation of Class Instance within a Static Code Block","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A static code block creates an instance of a class."}},{"_key":"CWE-1064","_id":"cwe/CWE-1064","_rev":"_jHZO_-e--k","original_id":"1064","datatype":"cwe","name":"Invokable Control Element with Signature Containing an Excessive Number of Parameters","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains a function, subroutine, or method whose signature has an unnecessarily large number of\n\t\t\t\t\tparameters/arguments."}},{"_key":"CWE-1065","_id":"cwe/CWE-1065","_rev":"_jHZO_-e--l","original_id":"1065","datatype":"cwe","name":"Runtime Resource Management Control Element in a Component Built to Run on Application Servers","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server."}},{"_key":"CWE-1066","_id":"cwe/CWE-1066","_rev":"_jHZO_-e--m","original_id":"1066","datatype":"cwe","name":"Missing Serialization Control Element","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains a serializable data element that does not\n\t\t\t\t\thave an associated serialization method."}},{"_key":"CWE-1067","_id":"cwe/CWE-1067","_rev":"_jHZO_-e--n","original_id":"1067","datatype":"cwe","name":"Excessive Execution of Sequential Searches of Data Resource","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains a data query against an SQL table or view\n\t\t\t\t\tthat is configured in a way that does not utilize an index and may cause\n\t\t\t\t\tsequential searches to be performed."}},{"_key":"CWE-1068","_id":"cwe/CWE-1068","_rev":"_jHZO_-e--o","original_id":"1068","datatype":"cwe","name":"Inconsistency Between Implementation and Documented Design","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The implementation of the product is not consistent with the\n\t\t\t\t\tdesign as described within the relevant documentation."}},{"_key":"CWE-1069","_id":"cwe/CWE-1069","_rev":"_jHZO_-e--p","original_id":"1069","datatype":"cwe","name":"Empty Exception Block","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"An invokable code block contains an exception handling block that does not contain any code, i.e. is empty."}},{"_key":"CWE-107","_id":"cwe/CWE-107","_rev":"_jHZO_-e--q","original_id":"107","datatype":"cwe","name":"Struts: Unused Validation Form","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"It is easy for developers to forget to update validation logic when they remove or rename action form mappings. One indication that validation logic is not being properly maintained is the presence of an unused validation form.","likeliehood_of_exploit":"","short_description":"An unused validation form indicates that validation logic is not up-to-date."}},{"_key":"CWE-1070","_id":"cwe/CWE-1070","_rev":"_jHZO_-e--r","original_id":"1070","datatype":"cwe","name":"Serializable Data Element Containing non-Serializable Item Elements","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains a serializable, storable data element such as a field or member,\n\t\t\t\t\tbut the data element contains member elements that are not\n\t\t\t\t\tserializable."}},{"_key":"CWE-1071","_id":"cwe/CWE-1071","_rev":"_jHZO_-e--s","original_id":"1071","datatype":"cwe","name":"Empty Code Block","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The source code contains a block that does not contain any code, i.e., the block is empty."}},{"_key":"CWE-1072","_id":"cwe/CWE-1072","_rev":"_jHZO_-e--t","original_id":"1072","datatype":"cwe","name":"Data Resource Access without Use of Connection Pooling","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product accesses a data resource through a database without using a\n\t\t\t\t\tconnection pooling capability."}},{"_key":"CWE-1073","_id":"cwe/CWE-1073","_rev":"_jHZO_-e--u","original_id":"1073","datatype":"cwe","name":"Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities."}},{"_key":"CWE-1074","_id":"cwe/CWE-1074","_rev":"_jHZO_-e--v","original_id":"1074","datatype":"cwe","name":"Class with Excessively Deep Inheritance","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A class has an inheritance level that is too high, i.e., it\n\t\t\t\t\thas a large number of parent classes."}},{"_key":"CWE-1075","_id":"cwe/CWE-1075","_rev":"_jHZO_-e--w","original_id":"1075","datatype":"cwe","name":"Unconditional Control Flow Transfer outside of Switch Block","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product performs unconditional control transfer (such as a\n\t\t\t\t\t\"goto\") in code outside of a branching structure such as a switch\n\t\t\t\t\tblock."}},{"_key":"CWE-1076","_id":"cwe/CWE-1076","_rev":"_jHZO_-e--x","original_id":"1076","datatype":"cwe","name":"Insufficient Adherence to Expected Conventions","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product's architecture, source code, design, documentation,\n\t\t\t\t\tor other artifact does not follow required conventions."}},{"_key":"CWE-1077","_id":"cwe/CWE-1077","_rev":"_jHZO_-e--y","original_id":"1077","datatype":"cwe","name":"Floating Point Comparison with Incorrect Operator","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The code performs a comparison such as an\n        equality test between two float (floating point) values, but\n        it uses comparison operators that do not account for the\n        possibility of loss of precision."}},{"_key":"CWE-1078","_id":"cwe/CWE-1078","_rev":"_jHZO_-e--z","original_id":"1078","datatype":"cwe","name":"Inappropriate Source Code Style or Formatting","metadata":{"applicable_platform":[],"common_consequences":[],"description":"","likeliehood_of_exploit":"","short_description":"The source code does not follow\n\t\t\t\tdesired style or formatting for indentation, white\n\t\t\t\tspace, comments, etc."}},{"_key":"CWE-1079","_id":"cwe/CWE-1079","_rev":"_jHZO_-e--0","original_id":"1079","datatype":"cwe","name":"Parent Class without Virtual Destructor Method","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A parent class contains one or more child classes, but the parent class does not have a virtual destructor method."}},{"_key":"CWE-108","_id":"cwe/CWE-108","_rev":"_jHZO_-e--1","original_id":"108","datatype":"cwe","name":"Struts: Unvalidated Action Form","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"If an action form mapping does not have a validation form defined, it may be vulnerable to a number of attacks that rely on unchecked input. Unchecked input is the root cause of some of today's worst and most common software security problems. Cross-site scripting, SQL injection, and process control vulnerabilities all stem from incomplete or absent input validation.","Scope":"Other"},{"Impact":"Other","Note":"Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code that does not perform array bounds checking, an attacker may be able to use an input validation mistake in the J2EE application to launch a buffer overflow attack.","Scope":"Other"}],"description":"If a Struts Action Form Mapping specifies a form, it must have a validation form defined under the Struts Validator.","likeliehood_of_exploit":"","short_description":"Every Action Form must have a corresponding validation form."}},{"_key":"CWE-1080","_id":"cwe/CWE-1080","_rev":"_jHZO_-i---","original_id":"1080","datatype":"cwe","name":"Source Code File with Excessive Number of Lines of Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A source code file has too many lines of\n\t\t\t\t\tcode."}},{"_key":"CWE-1082","_id":"cwe/CWE-1082","_rev":"_jHZO_-i--_","original_id":"1082","datatype":"cwe","name":"Class Instance Self Destruction Control Element","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains a class instance that calls the method or function to delete or destroy itself."}},{"_key":"CWE-1083","_id":"cwe/CWE-1083","_rev":"_jHZO_-i--A","original_id":"1083","datatype":"cwe","name":"Data Access from Outside Expected Data Manager Component","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component."}},{"_key":"CWE-1084","_id":"cwe/CWE-1084","_rev":"_jHZO_-i--B","original_id":"1084","datatype":"cwe","name":"Invokable Control Element with Excessive File or Data Access Operations","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A function or method contains too many\n\t\t\t\t\toperations that utilize a data manager or file resource."}},{"_key":"CWE-1085","_id":"cwe/CWE-1085","_rev":"_jHZO_-i--C","original_id":"1085","datatype":"cwe","name":"Invokable Control Element with Excessive Volume of Commented-out Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A function, method, procedure, etc. contains an excessive amount of code that has been\n\t\t\t\t\tcommented out within its body."}},{"_key":"CWE-1086","_id":"cwe/CWE-1086","_rev":"_jHZO_-i--D","original_id":"1086","datatype":"cwe","name":"Class with Excessive Number of Child Classes","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A class contains an unnecessarily large number of\n\t\t\t\t\tchildren."}},{"_key":"CWE-1087","_id":"cwe/CWE-1087","_rev":"_jHZO_-i--E","original_id":"1087","datatype":"cwe","name":"Class with Virtual Method without a Virtual Destructor","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A class contains a virtual method, but the method does not have an associated virtual destructor."}},{"_key":"CWE-1088","_id":"cwe/CWE-1088","_rev":"_jHZO_-i--F","original_id":"1088","datatype":"cwe","name":"Synchronous Access of Remote Resource without Timeout","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite."}},{"_key":"CWE-1089","_id":"cwe/CWE-1089","_rev":"_jHZO_-i--G","original_id":"1089","datatype":"cwe","name":"Large Data Table with Excessive Number of Indices","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses a large data table that contains an excessively large number of\n\t\t\t\t\tindices."}},{"_key":"CWE-109","_id":"cwe/CWE-109","_rev":"_jHZO_-i--H","original_id":"109","datatype":"cwe","name":"Struts: Validator Turned Off","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation."}},{"_key":"CWE-1090","_id":"cwe/CWE-1090","_rev":"_jHZO_-i--I","original_id":"1090","datatype":"cwe","name":"Method Containing Access of a Member Element from Another Class","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"A method for a class performs an operation that directly\n\t\t\t\t\taccesses a member element from another class."}},{"_key":"CWE-1091","_id":"cwe/CWE-1091","_rev":"_jHZO_-i--J","original_id":"1091","datatype":"cwe","name":"Use of Object without Invoking Destructor Method","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains a method that accesses an object but does not later invoke\n\t\t\t\t\tthe element's associated finalize/destructor method."}},{"_key":"CWE-1092","_id":"cwe/CWE-1092","_rev":"_jHZO_-i--K","original_id":"1092","datatype":"cwe","name":"Use of Same Invokable Control Element in Multiple Architectural Layers","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses the same control element across multiple\n\t\t\t\t\tarchitectural layers."}},{"_key":"CWE-1093","_id":"cwe/CWE-1093","_rev":"_jHZO_-i--L","original_id":"1093","datatype":"cwe","name":"Excessively Complex Data Representation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"},{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures."}},{"_key":"CWE-1094","_id":"cwe/CWE-1094","_rev":"_jHZO_-i--M","original_id":"1094","datatype":"cwe","name":"Excessive Index Range Scan for a Data Resource","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains an index range scan for a large data table,\n\t\t\t\t\tbut the scan can cover a large number of rows."}},{"_key":"CWE-1095","_id":"cwe/CWE-1095","_rev":"_jHZO_-i--N","original_id":"1095","datatype":"cwe","name":"Loop Condition Value Update within the Loop","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses a loop with a control flow condition based on\n\t\t\t\t\ta value that is updated within the body of the loop."}},{"_key":"CWE-1096","_id":"cwe/CWE-1096","_rev":"_jHZO_-i--O","original_id":"1096","datatype":"cwe","name":"Singleton Class Instance Creation without Proper Locking or Synchronization","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once."}},{"_key":"CWE-1097","_id":"cwe/CWE-1097","_rev":"_jHZO_-i--P","original_id":"1097","datatype":"cwe","name":"Persistent Storable Data Element without Associated Comparison Control Element","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses a storable data element that does not have\n\t\t\t\t\tall of the associated functions or methods that are necessary to support\n\t\t\t\t\tcomparison."}},{"_key":"CWE-1098","_id":"cwe/CWE-1098","_rev":"_jHZO_-i--Q","original_id":"1098","datatype":"cwe","name":"Data Element containing Pointer Item without Proper Copy Control Element","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains a data element with a pointer that does not have an associated copy or constructor method."}},{"_key":"CWE-1099","_id":"cwe/CWE-1099","_rev":"_jHZO_-i--R","original_id":"1099","datatype":"cwe","name":"Inconsistent Naming Conventions for Identifiers","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The product's code, documentation, or other artifacts do not\n\t\t\t\t\tconsistently use the same naming conventions for variables, callables, groups of\n\t\t\t\t\trelated callables, I/O capabilities, data types, file names, or similar types of\n\t\t\t\t\telements."}},{"_key":"CWE-11","_id":"cwe/CWE-11","_rev":"_jHZO_-i--S","original_id":"11","datatype":"cwe","name":"ASP.NET Misconfiguration: Creating Debug Binary","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"Attackers can leverage the additional information they gain from debugging output to mount attacks targeted on the framework, database, or other resources used by the application.","Scope":"Confidentiality"}],"description":"ASP .NET applications can be configured to produce debug binaries. These binaries give detailed debugging messages and should not be used in production environments. Debug binaries are meant to be used in a development or testing environment and can pose a security risk if they are deployed to production.","likeliehood_of_exploit":"","short_description":"Debugging messages help attackers learn about the system and plan a form of attack."}},{"_key":"CWE-110","_id":"cwe/CWE-110","_rev":"_jHZO_-i--T","original_id":"110","datatype":"cwe","name":"Struts: Validator Without Form Field","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"It is critically important that validation logic be maintained and kept in sync with the rest of the application. Unchecked input is the root cause of some of today's worst and most common software security problems. Cross-site scripting, SQL injection, and process control vulnerabilities all stem from incomplete or absent input validation.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date."}},{"_key":"CWE-1100","_id":"cwe/CWE-1100","_rev":"_jHZO_-i--U","original_id":"1100","datatype":"cwe","name":"Insufficient Isolation of System-Dependent Functions","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product or code does not isolate system-dependent\n\t\t\t\t\tfunctionality into separate standalone modules."}},{"_key":"CWE-1101","_id":"cwe/CWE-1101","_rev":"_jHZO_-i--V","original_id":"1101","datatype":"cwe","name":"Reliance on Runtime Component in Generated Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses automatically-generated code that cannot be\n\t\t\t\t\texecuted without a specific runtime support component."}},{"_key":"CWE-1102","_id":"cwe/CWE-1102","_rev":"_jHZO_-i--W","original_id":"1102","datatype":"cwe","name":"Reliance on Machine-Dependent Data Representation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code uses a data representation that relies on low-level\n\t\t\t\t\tdata representation or constructs that may vary across different processors,\n\t\t\t\t\tphysical machines, OSes, or other physical components."}},{"_key":"CWE-1103","_id":"cwe/CWE-1103","_rev":"_jHZO_-i--X","original_id":"1103","datatype":"cwe","name":"Use of Platform-Dependent Third Party Components","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product relies on third-party components that do\n\t\t\t\t\tnot provide equivalent functionality across all desirable\n\t\t\t\t\tplatforms."}},{"_key":"CWE-1104","_id":"cwe/CWE-1104","_rev":"_jHZO_-i--Y","original_id":"1104","datatype":"cwe","name":"Use of Unmaintained Third Party Components","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product relies on third-party components that are not\n\t\t\t\t\tactively supported or maintained by the original developer or a trusted proxy\n\t\t\t\t\tfor the original developer."}},{"_key":"CWE-1105","_id":"cwe/CWE-1105","_rev":"_jHZO_-i--Z","original_id":"1105","datatype":"cwe","name":"Insufficient Encapsulation of Machine-Dependent Functionality","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product or code uses machine-dependent functionality, but\n\t\t\t\t\tit does not sufficiently encapsulate or isolate this functionality from\n\t\t\t\t\tthe rest of the code."}},{"_key":"CWE-1106","_id":"cwe/CWE-1106","_rev":"_jHZO_-i--a","original_id":"1106","datatype":"cwe","name":"Insufficient Use of Symbolic Constants","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The source code uses literal constants that may need to change\n\t\t\t\t\tor evolve over time, instead of using symbolic constants."}},{"_key":"CWE-1107","_id":"cwe/CWE-1107","_rev":"_jHZO_-i--b","original_id":"1107","datatype":"cwe","name":"Insufficient Isolation of Symbolic Constant Definitions","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The source code uses symbolic constants, but it does not\n\t\t\t\t\tsufficiently place the definitions of these constants into a more centralized or\n\t\t\t\t\tisolated location."}},{"_key":"CWE-1108","_id":"cwe/CWE-1108","_rev":"_jHZO_-i--c","original_id":"1108","datatype":"cwe","name":"Excessive Reliance on Global Variables","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code is structured in a way that relies too much on using\n\t\t\t\t\tor setting global variables throughout various points in the code, instead of\n\t\t\t\t\tpreserving the associated information in a narrower, more local\n\t\t\t\t\tcontext."}},{"_key":"CWE-1109","_id":"cwe/CWE-1109","_rev":"_jHZO_-i--d","original_id":"1109","datatype":"cwe","name":"Use of Same Variable for Multiple Purposes","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains a callable, block, or other code element in\n\t\t\t\t\twhich the same variable is used to control more than one unique task or store\n\t\t\t\t\tmore than one instance of data."}},{"_key":"CWE-111","_id":"cwe/CWE-111","_rev":"_jHZO_-i--e","original_id":"111","datatype":"cwe","name":"Direct Use of Unsafe JNI","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"Many safety features that programmers may take for granted do not apply for native code, so you must carefully review all such code for potential problems. The languages used to implement native code may be more susceptible to buffer overflows and other attacks. Native code is unprotected by the security features enforced by the runtime environment, such as strong typing and array bounds checking.","likeliehood_of_exploit":"","short_description":"When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java."}},{"_key":"CWE-1110","_id":"cwe/CWE-1110","_rev":"_jHZO_-i--f","original_id":"1110","datatype":"cwe","name":"Incomplete Design Documentation","metadata":{"applicable_platform":[],"common_consequences":[],"description":"","likeliehood_of_exploit":"","short_description":"The product's design documentation does not adequately describe\n\t\t\t\t\tcontrol flow, data flow, system initialization, relationships between tasks,\n\t\t\t\t\tcomponents, rationales, or other important aspects of the\n\t\t\t\t\tdesign."}},{"_key":"CWE-1111","_id":"cwe/CWE-1111","_rev":"_jHZO_-i--g","original_id":"1111","datatype":"cwe","name":"Incomplete I/O Documentation","metadata":{"applicable_platform":[],"common_consequences":[],"description":"","likeliehood_of_exploit":"","short_description":"The product's documentation does not adequately define inputs,\n\t\t\t\t\toutputs, or system/software interfaces."}},{"_key":"CWE-1112","_id":"cwe/CWE-1112","_rev":"_jHZO_-i--h","original_id":"1112","datatype":"cwe","name":"Incomplete Documentation of Program Execution","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The document does not fully define all mechanisms that are used\n\t\t\t\t\tto control or influence how product-specific programs are\n\t\t\t\t\texecuted."}},{"_key":"CWE-1113","_id":"cwe/CWE-1113","_rev":"_jHZO_-i--i","original_id":"1113","datatype":"cwe","name":"Inappropriate Comment Style","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The source code uses comment styles or formats that are\n\t\t\t\t\tinconsistent or do not follow expected standards for the\n\t\t\t\t\tproduct."}},{"_key":"CWE-1114","_id":"cwe/CWE-1114","_rev":"_jHZO_-i--j","original_id":"1114","datatype":"cwe","name":"Inappropriate Whitespace Style","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The source code contains whitespace that is inconsistent across\n\t\t\t\t\tthe code or does not follow expected standards for the\n\t\t\t\t\tproduct."}},{"_key":"CWE-1115","_id":"cwe/CWE-1115","_rev":"_jHZO_-i--k","original_id":"1115","datatype":"cwe","name":"Source Code Element without Standard Prologue","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The source code contains elements such as source files \n\t\t\t\t\tthat do not consistently provide a prologue or header that has been\n\t\t\t\t\tstandardized for the project."}},{"_key":"CWE-1116","_id":"cwe/CWE-1116","_rev":"_jHZO_-i--l","original_id":"1116","datatype":"cwe","name":"Inaccurate Comments","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The source code contains comments that do not accurately\n\t\t\t\t\tdescribe or explain aspects of the portion of the code with which the comment is\n\t\t\t\t\tassociated."}},{"_key":"CWE-1117","_id":"cwe/CWE-1117","_rev":"_jHZO_-i--m","original_id":"1117","datatype":"cwe","name":"Callable with Insufficient Behavioral Summary","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains a function or method whose signature and/or associated\n\t\t\t\t\tinline documentation does not sufficiently describe the callable's inputs, outputs,\n\t\t\t\t\tside effects, assumptions, or return codes."}},{"_key":"CWE-1118","_id":"cwe/CWE-1118","_rev":"_jHZO_-i--n","original_id":"1118","datatype":"cwe","name":"Insufficient Documentation of Error Handling Techniques","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The documentation does not sufficiently describe the techniques\n\t\t\t\t\tthat are used for error handling, exception processing, or similar\n\t\t\t\t\tmechanisms."}},{"_key":"CWE-1119","_id":"cwe/CWE-1119","_rev":"_jHZO_-i--o","original_id":"1119","datatype":"cwe","name":"Excessive Use of Unconditional Branching","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code uses too many unconditional branches (such as\n\t\t\t\t\t\"goto\")."}},{"_key":"CWE-112","_id":"cwe/CWE-112","_rev":"_jHZO_-i--p","original_id":"112","datatype":"cwe","name":"Missing XML Validation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"Most successful attacks begin with a violation of the programmer's assumptions. By accepting an XML document without validating it against a DTD or XML schema, the programmer leaves a door open for attackers to provide unexpected, unreasonable, or malicious input.","likeliehood_of_exploit":"","short_description":"The product accepts XML from an untrusted source but does not validate the XML against the proper schema."}},{"_key":"CWE-1120","_id":"cwe/CWE-1120","_rev":"_jHZO_-i--q","original_id":"1120","datatype":"cwe","name":"Excessive Code Complexity","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"},{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code is too complex, as calculated using a well-defined,\n\t\t\t\t\tquantitative measure."}},{"_key":"CWE-1121","_id":"cwe/CWE-1121","_rev":"_jHZO_-i--r","original_id":"1121","datatype":"cwe","name":"Excessive McCabe Cyclomatic Complexity","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains McCabe cyclomatic complexity that exceeds a\n\tdesirable maximum."}},{"_key":"CWE-1122","_id":"cwe/CWE-1122","_rev":"_jHZO_-i--s","original_id":"1122","datatype":"cwe","name":"Excessive Halstead Complexity","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code is structured in a way that a Halstead complexity\n\t\t\t\t\tmeasure exceeds a desirable maximum."}},{"_key":"CWE-1123","_id":"cwe/CWE-1123","_rev":"_jHZO_-i--t","original_id":"1123","datatype":"cwe","name":"Excessive Use of Self-Modifying Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses too much self-modifying\n\t\t\t\t\tcode."}},{"_key":"CWE-1124","_id":"cwe/CWE-1124","_rev":"_jHZO_-i--u","original_id":"1124","datatype":"cwe","name":"Excessively Deep Nesting","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code contains a callable or other code grouping in which\n\t\t\t\t\tthe nesting / branching is too deep."}},{"_key":"CWE-1125","_id":"cwe/CWE-1125","_rev":"_jHZO_-i--v","original_id":"1125","datatype":"cwe","name":"Excessive Attack Surface","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The product has an attack surface whose quantitative\n\t\t\t\t\tmeasurement exceeds a desirable maximum."}},{"_key":"CWE-1126","_id":"cwe/CWE-1126","_rev":"_jHZO_-i--w","original_id":"1126","datatype":"cwe","name":"Declaration of Variable with Unnecessarily Wide Scope","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The source code declares a variable in one scope, but the\n\t\t\t\t\tvariable is only used within a narrower scope."}},{"_key":"CWE-1127","_id":"cwe/CWE-1127","_rev":"_jHZO_-i--x","original_id":"1127","datatype":"cwe","name":"Compilation with Insufficient Warnings or Errors","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The code is compiled without sufficient warnings enabled, which\n\t\t\t\t\tmay prevent the detection of subtle bugs or quality\n\t\t\t\t\tissues."}},{"_key":"CWE-113","_id":"cwe/CWE-113","_rev":"_jHZO_-i--y","original_id":"113","datatype":"cwe","name":"Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"CR and LF characters in an HTTP header may give attackers control of the remaining headers and body of the message that the application intends to send/receive, as well as allowing them to create additional messages entirely under their control.","Scope":"Access Control"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers."}},{"_key":"CWE-114","_id":"cwe/CWE-114","_rev":"_jHZO_-i--z","original_id":"114","datatype":"cwe","name":"Process Control","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"Process control vulnerabilities take two forms:\n\t ","likeliehood_of_exploit":"","short_description":"Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker."}},{"_key":"CWE-115","_id":"cwe/CWE-115","_rev":"_jHZO_-i--0","original_id":"115","datatype":"cwe","name":"Misinterpretation of Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product misinterprets an input, whether from an attacker or another product, in a security-relevant fashion."}},{"_key":"CWE-116","_id":"cwe/CWE-116","_rev":"_jHZO_-i--1","original_id":"116","datatype":"cwe","name":"Improper Encoding or Escaping of Output","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"The communications between components can be modified in unexpected ways. Unexpected commands can be executed, bypassing other security mechanisms. Incoming data can be misinterpreted.","Scope":"Integrity"},{"Impact":"Execute Unauthorized Code or Commands","Note":"The communications between components can be modified in unexpected ways. Unexpected commands can be executed, bypassing other security mechanisms. Incoming data can be misinterpreted.","Scope":"Access Control"},{"Impact":"Bypass Protection Mechanism","Note":"The communications between components can be modified in unexpected ways. Unexpected commands can be executed, bypassing other security mechanisms. Incoming data can be misinterpreted.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."}},{"_key":"CWE-1164","_id":"cwe/CWE-1164","_rev":"_jHZO_-i--2","original_id":"1164","datatype":"cwe","name":"Irrelevant Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Other"},{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product contains code that is not essential for execution,\n\t     i.e. makes no state changes and has no side effects that alter\n\t     data or control flow, such that removal of the code would have no impact\n\t     to functionality or correctness."}},{"_key":"CWE-117","_id":"cwe/CWE-117","_rev":"_jHZO_-i--3","original_id":"117","datatype":"cwe","name":"Improper Output Neutralization for Logs","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Interpretation of the log files may be hindered or misdirected if an attacker can supply data to the application that is subsequently logged verbatim. In the most benign case, an attacker may be able to insert false entries into the log file by providing the application with input that includes appropriate characters. Forged or otherwise corrupted log files can be used to cover an attacker's tracks, possibly by skewing statistics, or even to implicate another party in the commission of a malicious act. If the log file is processed automatically, the attacker can render the file unusable by corrupting the format of the file or injecting unexpected characters. An attacker may inject code or other commands into the log file and take advantage of a vulnerability in the log processing utility.","Scope":"Non-Repudiation"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product does not neutralize or incorrectly neutralizes output that is written to logs."}},{"_key":"CWE-1173","_id":"cwe/CWE-1173","_rev":"_jHZO_-i--4","original_id":"1173","datatype":"cwe","name":"Improper Use of Validation Framework","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Note":"Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.","Scope":"Integrity"}],"description":"Many modern coding languages provide developers with input validation frameworks to make the task of input validation easier and less error-prone. These frameworks will automatically check all input against specified criteria and direct execution to error handlers when invalid input is received. The improper use (i.e., an incorrect implementation or missing altogether) of these frameworks is not directly exploitable, but can lead to an exploitable condition if proper input validation is not performed later in the product. Not using provided input validation frameworks can also hurt the maintainability of code as future developers may not recognize the downstream input validation being used in the place of the validation framework.","likeliehood_of_exploit":"","short_description":"The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library."}},{"_key":"CWE-1174","_id":"cwe/CWE-1174","_rev":"_jHZO_-i--5","original_id":"1174","datatype":"cwe","name":"ASP.NET Misconfiguration: Improper Model Validation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The ASP.NET application does not use, or incorrectly uses, the model validation framework."}},{"_key":"CWE-1176","_id":"cwe/CWE-1176","_rev":"_jHZO_-i--6","original_id":"1176","datatype":"cwe","name":"Inefficient CPU Computation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Scope":"Availability"},{"Impact":"Reduce Performance","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product performs CPU computations using\n         algorithms that are not as efficient as they could be for the\n         needs of the developer, i.e., the computations can be\n         optimized further."}},{"_key":"CWE-1177","_id":"cwe/CWE-1177","_rev":"_jHZO_-i--7","original_id":"1177","datatype":"cwe","name":"Use of Prohibited Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product uses a function, library, or third party component\n\t     that has been explicitly prohibited, whether by the developer or\n\t     the customer."}},{"_key":"CWE-118","_id":"cwe/CWE-118","_rev":"_jHZO_-i--8","original_id":"118","datatype":"cwe","name":"Incorrect Access of Indexable Resource ('Range Error')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not restrict or incorrectly restricts operations within the boundaries of a resource that is accessed using an index or pointer, such as memory or files."}},{"_key":"CWE-1188","_id":"cwe/CWE-1188","_rev":"_jHZO_-i--9","original_id":"1188","datatype":"cwe","name":"Initialization of a Resource with an Insecure Default","metadata":{"applicable_platform":[],"common_consequences":[],"description":null,"likeliehood_of_exploit":"","short_description":"The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure."}},{"_key":"CWE-1189","_id":"cwe/CWE-1189","_rev":"_jHZO_-i-_-","original_id":"1189","datatype":"cwe","name":"Improper Isolation of Shared Resources on System-on-a-Chip (SoC)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"If resources being used by a trusted user are shared with an untrusted user, the untrusted user may be able to modify the functionality of the shared resource of the trusted user.","Scope":"Access Control"},{"Impact":"Quality Degradation","Note":"The functionality of the shared resource may be intentionally degraded.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents."}},{"_key":"CWE-119","_id":"cwe/CWE-119","_rev":"_jHZO_-i-__","original_id":"119","datatype":"cwe","name":"Improper Restriction of Operations within the Bounds of a Memory Buffer","metadata":{"applicable_platform":["Assembly"],"common_consequences":[{"Impact":"Modify Memory","Note":"If the memory accessible by the attacker can be effectively controlled, it may be possible to execute arbitrary code, as with a standard buffer overflow. If the attacker can overwrite a pointer's worth of memory (usually 32 or 64 bits), they can alter the intended control flow by redirecting a function pointer to their own malicious code. Even when the attacker can only modify a single byte arbitrary code execution can be possible. Sometimes this is because the same problem can be exploited repeatedly to the same effect. Other times it is because the attacker can overwrite security-critical application-specific data -- such as a flag indicating whether the user is an administrator.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (Memory)","Note":"Out of bounds memory access will very likely result in the corruption of relevant memory, and perhaps instructions, possibly leading to a crash. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.","Scope":"Confidentiality"},{"Impact":"Read Memory","Note":"In the case of an out-of-bounds read, the attacker may have access to sensitive information. If the sensitive information contains system details, such as the current buffer's position in memory, this knowledge can be used to craft further attacks, possibly with more severe consequences.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data."}},{"_key":"CWE-1190","_id":"cwe/CWE-1190","_rev":"_jHZO_-i-_A","original_id":"1190","datatype":"cwe","name":"DMA Device Enabled Too Early in Boot Phase","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Likelihood":"High","Note":"DMA devices have direct write access to main memory and\n                 due to time of attack will be able to bypass OS or Bootloader\n                 access control.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product."}},{"_key":"CWE-1191","_id":"cwe/CWE-1191","_rev":"_jHZO_-i-_B","original_id":"1191","datatype":"cwe","name":"On-Chip Debug and Test Interface With Improper Access Control","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Likelihood":"High","Scope":"Confidentiality"},{"Impact":"Read Memory","Likelihood":"High","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Likelihood":"High","Scope":"Authorization"},{"Impact":"Modify Memory","Likelihood":"High","Scope":"Integrity"},{"Impact":"Modify Application Data","Likelihood":"High","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Likelihood":"High","Scope":"Access Control"}],"description":"\n      ","likeliehood_of_exploit":"","short_description":"The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface."}},{"_key":"CWE-1192","_id":"cwe/CWE-1192","_rev":"_jHZO_-i-_C","original_id":"1192","datatype":"cwe","name":"Improper Identifier for IP Block used in System-On-Chip (SOC)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Likelihood":"High","Scope":"Access Control"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components."}},{"_key":"CWE-1193","_id":"cwe/CWE-1193","_rev":"_jHZO_-i-_D","original_id":"1193","datatype":"cwe","name":"Power-On of Untrusted Execution Core Before Enabling Fabric Access Control","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Likelihood":"High","Note":"An untrusted component can master transactions on the HW bus and target memory or other assets to compromise the SoC boot firmware.","Scope":"Access Control"}],"description":"\n\t  ","likeliehood_of_exploit":"","short_description":"The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled."}},{"_key":"CWE-12","_id":"cwe/CWE-12","_rev":"_jHZO_-i-_E","original_id":"12","datatype":"cwe","name":"ASP.NET Misconfiguration: Missing Custom Error Page","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"Default error pages gives detailed information about the error that occurred, and should not be used in production environments. Attackers can leverage the additional information provided by a default error page to mount attacks targeted on the framework, database, or other resources used by the application.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"An ASP .NET application must enable custom error pages in order to prevent attackers from mining information from the framework's built-in responses."}},{"_key":"CWE-120","_id":"cwe/CWE-120","_rev":"_jHZO_-i-_F","original_id":"120","datatype":"cwe","name":"Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')","metadata":{"applicable_platform":["Assembly"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Buffer overflows often can be used to execute arbitrary code, which is usually outside the scope of the product's implicit security policy. This can often be used to subvert any other security service.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (CPU)","Note":"Buffer overflows generally lead to crashes. Other attacks leading to lack of availability are possible, including putting the product into an infinite loop.","Scope":"Availability"}],"description":"A buffer overflow condition exists when a product attempts to put more data in a buffer than it can hold, or when it attempts to put data in a memory area outside of the boundaries of a buffer. The simplest type of error, and the most common cause of buffer overflows, is the \"classic\" case in which the product copies the buffer without restricting how much is copied. Other variants exist, but the existence of a classic overflow strongly suggests that the programmer is not considering even the most basic of security protections.","likeliehood_of_exploit":"High","short_description":"The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow."}},{"_key":"CWE-1204","_id":"cwe/CWE-1204","_rev":"_jHZO_-i-_G","original_id":"1204","datatype":"cwe","name":"Generation of Weak Initialization Vector (IV)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"If the IV is not properly initialized, data that is encrypted can be compromised and information about the data can be leaked. See [REF-1179].","Scope":"Confidentiality"}],"description":"\n\t\t\t  By design, some cryptographic primitives\n\t\t\t  (such as block ciphers) require that IVs\n\t\t\t  must have certain properties for the\n\t\t\t  uniqueness and/or unpredictability of an\n\t\t\t  IV. Primitives may vary in how important\n\t\t\t  these properties are. If these properties\n\t\t\t  are not maintained, e.g. by a bug in the\n\t\t\t  code, then the cryptography may be weakened\n\t\t\t  or broken by attacking the IVs themselves.\n\t\t\t","likeliehood_of_exploit":"","short_description":"The product uses a cryptographic primitive that uses an Initialization\n\t\t\tVector (IV), but the product does not generate IVs that are\n\t\t\tsufficiently unpredictable or unique according to the expected\n\t\t\tcryptographic requirements for that primitive.\n\t\t\t"}},{"_key":"CWE-1209","_id":"cwe/CWE-1209","_rev":"_jHZO_-i-_H","original_id":"1209","datatype":"cwe","name":"Failure to Disable Reserved Bits","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"This type of weakness all depends on the capabilities of the logic being controlled or configured by the reserved bits.","Scope":"Non-Repudiation"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design.   However, designers might covertly use these bits to debug or further develop new capabilities in production hardware. Adversaries with access to these bits will write to them in hopes of compromising hardware state."}},{"_key":"CWE-121","_id":"cwe/CWE-121","_rev":"_jHZO_-i-_I","original_id":"121","datatype":"cwe","name":"Stack-based Buffer Overflow","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"Buffer overflows generally lead to crashes. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.","Scope":"Availability"},{"Impact":"Bypass Protection Mechanism","Note":"Buffer overflows often can be used to execute arbitrary code, which is usually outside the scope of a program's implicit security policy.","Scope":"Access Control"},{"Impact":"Other","Note":"When the consequence is arbitrary code execution, this can often be used to subvert any other security service.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function)."}},{"_key":"CWE-122","_id":"cwe/CWE-122","_rev":"_jHZO_-i-_J","original_id":"122","datatype":"cwe","name":"Heap-based Buffer Overflow","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"Buffer overflows generally lead to crashes. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"Buffer overflows often can be used to execute arbitrary code, which is usually outside the scope of a program's implicit security policy. Besides important user data, heap-based overflows can be used to overwrite function pointers that may be living in memory, pointing it to the attacker's code. Even in applications that do not explicitly use function pointers, the run-time will usually leave many in memory. For example, object methods in C++ are generally implemented using function pointers. Even in C programs, there is often a global offset table used by the underlying runtime.","Scope":"Access Control"},{"Impact":"Other","Note":"When the consequence is arbitrary code execution, this can often be used to subvert any other security service.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc()."}},{"_key":"CWE-1220","_id":"cwe/CWE-1220","_rev":"_jHZO_-i-_K","original_id":"1220","datatype":"cwe","name":"Insufficient Granularity of Access Control","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Likelihood":"High","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets."}},{"_key":"CWE-1221","_id":"cwe/CWE-1221","_rev":"_jHZO_-i-_L","original_id":"1221","datatype":"cwe","name":"Incorrect Register Defaults or Module Parameters","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Note":"Degradation of system functionality, or loss of access control enforcement can occur.","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"Hardware description language code incorrectly defines register defaults or hardware Intellectual Property (IP) parameters to insecure values."}},{"_key":"CWE-1222","_id":"cwe/CWE-1222","_rev":"_jHZO_-i-_M","original_id":"1222","datatype":"cwe","name":"Insufficient Granularity of Address Regions Protected by Register Locks","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"System security configuration cannot be defined in a way that does not conflict with functional requirements of device.","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process."}},{"_key":"CWE-1223","_id":"cwe/CWE-1223","_rev":"_jHZO_-i-_N","original_id":"1223","datatype":"cwe","name":"Race Condition for Write-Once Attributes","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"System configuration cannot be programmed in a secure way.","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue."}},{"_key":"CWE-1224","_id":"cwe/CWE-1224","_rev":"_jHZO_-i-_O","original_id":"1224","datatype":"cwe","name":"Improper Restriction of Write-Once Bit Fields","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Note":"System configuration cannot be programmed in a secure way.","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The hardware design control register \"sticky bits\" or write-once bit fields are improperly implemented, such that they can be reprogrammed by software."}},{"_key":"CWE-1229","_id":"cwe/CWE-1229","_rev":"_jHZO_-i-_P","original_id":"1229","datatype":"cwe","name":"Creation of Emergent Resource","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy."}},{"_key":"CWE-123","_id":"cwe/CWE-123","_rev":"_jHZO_-i-_Q","original_id":"123","datatype":"cwe","name":"Write-what-where Condition","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Clearly, write-what-where conditions can be used to write data to areas of memory outside the scope of a policy. Also, they almost invariably can be used to execute arbitrary code, which is usually outside the scope of a program's implicit security policy. If the attacker can overwrite a pointer's worth of memory (usually 32 or 64 bits), they can redirect a function pointer to their own malicious code. Even when the attacker can only modify a single byte arbitrary code execution can be possible. Sometimes this is because the same problem can be exploited repeatedly to the same effect. Other times it is because the attacker can overwrite security-critical application-specific data -- such as a flag indicating whether the user is an administrator.","Scope":"Access Control"},{"Impact":"Modify Memory","Note":"Many memory accesses can lead to program termination, such as when writing to addresses that are invalid for the current process.","Scope":"Availability"},{"Impact":"Other","Note":"When the consequence is arbitrary code execution, this can often be used to subvert any other security service.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow."}},{"_key":"CWE-1230","_id":"cwe/CWE-1230","_rev":"_jHZO_-i-_R","original_id":"1230","datatype":"cwe","name":"Exposure of Sensitive Information Through Metadata","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information."}},{"_key":"CWE-1231","_id":"cwe/CWE-1231","_rev":"_jHZO_-i-_S","original_id":"1231","datatype":"cwe","name":"Improper Prevention of Lock Bit Modification","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Likelihood":"High","Note":"Registers protected by lock bit can be modified even when lock is set.","Scope":"Access Control"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set."}},{"_key":"CWE-1232","_id":"cwe/CWE-1232","_rev":"_jHZO_-i-_T","original_id":"1232","datatype":"cwe","name":"Improper Lock Behavior After Power State Transition","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Likelihood":"High","Scope":"Access Control"}],"description":"\n        ","likeliehood_of_exploit":"","short_description":"Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable."}},{"_key":"CWE-1233","_id":"cwe/CWE-1233","_rev":"_jHZO_-i-_U","original_id":"1233","datatype":"cwe","name":"Security-Sensitive Hardware Controls with Missing Lock Bit Protection","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Note":"System Configuration protected by the lock bit can be modified even when the lock is set.","Scope":"Access Control"}],"description":"\n         \t","likeliehood_of_exploit":"","short_description":"The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration."}},{"_key":"CWE-1234","_id":"cwe/CWE-1234","_rev":"_jHZO_-i-_V","original_id":"1234","datatype":"cwe","name":"Hardware Internal or Debug Modes Allow Override of Locks","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Likelihood":"High","Note":"Bypass of lock bit allows access and modification of system configuration even when the lock bit is set.","Scope":"Access Control"}],"description":"\n     \t","likeliehood_of_exploit":"","short_description":"System configuration protection may be bypassed during debug mode."}},{"_key":"CWE-1235","_id":"cwe/CWE-1235","_rev":"_jHZO_-i-_W","original_id":"1235","datatype":"cwe","name":"Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Performance","Likelihood":"Low","Note":"Incorrect autoboxing/unboxing would result in reduced performance, which sometimes can lead to resource consumption issues.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations."}},{"_key":"CWE-1236","_id":"cwe/CWE-1236","_rev":"_jHZO_-i-_X","original_id":"1236","datatype":"cwe","name":"Improper Neutralization of Formula Elements in a CSV File","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Likelihood":"Low","Note":"Current versions of Excel warn users of untrusted content.","Scope":"Confidentiality"}],"description":"User-provided data is often saved to traditional databases.  This data can be exported to a CSV file, which allows users to read the data using spreadsheet software such as Excel, Numbers, or Calc.  This software interprets entries beginning with '=' as formulas, which are then executed by the spreadsheet software.  The software's formula language often allows methods to access hyperlinks or the local command line, and frequently allows enough characters to invoke an entire script. Attackers can populate data fields which, when saved to a CSV file, may attempt information exfiltration or other malicious activity when automatically executed by the spreadsheet software.","likeliehood_of_exploit":"","short_description":"The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product."}},{"_key":"CWE-1239","_id":"cwe/CWE-1239","_rev":"_jHZO_-i-_Y","original_id":"1239","datatype":"cwe","name":"Improper Zeroization of Hardware Register","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"The consequences will depend on the information disclosed due to the vulnerability.","Scope":"Confidentiality"}],"description":"Hardware logic operates on data stored in registers local to the hardware block. Most hardware IPs, including cryptographic accelerators, rely on registers to buffer I/O, store intermediate values, and interface with software. The result of this is that sensitive information, such as passwords or encryption keys, can exist in locations not transparent to the user of the hardware logic. When a different entity obtains access to the IP due to a change in operating mode or conditions, the new entity can extract information belonging to the previous user if no mechanisms are in place to clear register contents. It is important to clear information stored in the hardware if a physical attack on the product is detected, or if the user of the hardware block changes. The process of clearing register contents in a hardware IP is referred to as zeroization in standards for cryptographic hardware modules such as FIPS-140-2 [REF-267].","likeliehood_of_exploit":"","short_description":"The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes."}},{"_key":"CWE-124","_id":"cwe/CWE-124","_rev":"_jHZO_-i-_Z","original_id":"124","datatype":"cwe","name":"Buffer Underwrite ('Buffer Underflow')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"Out of bounds memory access will very likely result in the corruption of relevant memory, and perhaps instructions, possibly leading to a crash.","Scope":"Availability"},{"Impact":"Other","Note":"If the corrupted memory can be effectively controlled, it may be possible to execute arbitrary code. If the corrupted memory is data rather than instructions, the system will continue to function with improper changes, possibly in violation of an implicit or explicit policy. The consequences would only be limited by how the affected data is used, such as an adjacent memory location that is used to specify whether the user has special privileges.","Scope":"Other"},{"Impact":"Other","Note":"When the consequence is arbitrary code execution, this can often be used to subvert any other security service.","Scope":"Other"}],"description":"This typically occurs when a pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used.","likeliehood_of_exploit":"Medium","short_description":"The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer."}},{"_key":"CWE-1240","_id":"cwe/CWE-1240","_rev":"_jHZO_-i-_a","original_id":"1240","datatype":"cwe","name":"Use of a Cryptographic Primitive with a Risky Implementation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Likelihood":"High","Note":"Incorrect usage of crypto primitives could render the supposedly encrypted data as unencrypted plaintext in the worst case.","Scope":"Confidentiality"}],"description":"\n\t      ","likeliehood_of_exploit":"","short_description":"To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation."}},{"_key":"CWE-1241","_id":"cwe/CWE-1241","_rev":"_jHZO_-i-_b","original_id":"1241","datatype":"cwe","name":"Use of Predictable Algorithm in Random Number Generator","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Likelihood":"High","Scope":"Confidentiality"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The device uses an algorithm that is predictable and generates a pseudo-random number."}},{"_key":"CWE-1242","_id":"cwe/CWE-1242","_rev":"_jHZO_-i-_c","original_id":"1242","datatype":"cwe","name":"Inclusion of Undocumented Features or Chicken Bits","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The device includes chicken bits or undocumented features that can create entry points for unauthorized actors."}},{"_key":"CWE-1243","_id":"cwe/CWE-1243","_rev":"_jHZO_-i-_d","original_id":"1243","datatype":"cwe","name":"Sensitive Non-Volatile Information Not Protected During Debug","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"Access to security-sensitive information stored in fuses is not limited during debug."}},{"_key":"CWE-1244","_id":"cwe/CWE-1244","_rev":"_jHZO_-i-_e","original_id":"1244","datatype":"cwe","name":"Internal Asset Exposed to Unsafe Debug Access Level or State","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Scope":"Confidentiality"},{"Impact":"Modify Memory","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t  ","likeliehood_of_exploit":"","short_description":"The product uses physical debug or test\n        interfaces with support for multiple access levels, but it\n        assigns the wrong debug access level to an internal asset,\n        providing unintended access to the asset from untrusted debug\n        agents."}},{"_key":"CWE-1245","_id":"cwe/CWE-1245","_rev":"_jHZO_-i-_f","original_id":"1245","datatype":"cwe","name":"Improper Finite State Machines (FSMs) in Hardware Logic","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system."}},{"_key":"CWE-1246","_id":"cwe/CWE-1246","_rev":"_jHZO_-i-_g","original_id":"1246","datatype":"cwe","name":"Improper Write Handling in Limited-write Non-Volatile Memories","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Instability","Scope":"Availability"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories."}},{"_key":"CWE-1247","_id":"cwe/CWE-1247","_rev":"_jHZO_-i-_h","original_id":"1247","datatype":"cwe","name":"Improper Protection Against Voltage and Clock Glitches","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Access Control"}],"description":"\n        ","likeliehood_of_exploit":"","short_description":"The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device."}},{"_key":"CWE-1248","_id":"cwe/CWE-1248","_rev":"_jHZO_-i-_i","original_id":"1248","datatype":"cwe","name":"Semiconductor Defects in Hardware Logic with Security-Sensitive Implications","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Instability","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The security-sensitive hardware module contains semiconductor defects."}},{"_key":"CWE-1249","_id":"cwe/CWE-1249","_rev":"_jHZO_-i-_j","original_id":"1249","datatype":"cwe","name":"Application-Level Admin Tool with Inconsistent View of Underlying Operating System","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Access Control"},{"Impact":"Hide Activities","Scope":"Accountability"},{"Impact":"Unexpected State","Scope":"Other"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of the OS's state is inconsistent with the OS's actual state."}},{"_key":"CWE-125","_id":"cwe/CWE-125","_rev":"_jHZO_-i-_k","original_id":"125","datatype":"cwe","name":"Out-of-bounds Read","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"An attacker could get secret values such as cryptographic keys, PII, memory addresses, or other information that could be used in additional attacks.","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"Out-of-bounds memory could contain memory addresses or other information that can be used to bypass ASLR and other protection mechanisms in order to improve the reliability of exploiting a separate weakness for code execution.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"An attacker could cause a segmentation fault or crash by causing memory to be read outside of the bounds of the buffer. This is especially likely when the code reads a variable amount of data and assumes that a sentinel exists to stop the read operation, such as a NUL in a string.","Scope":"Availability"},{"Impact":"Varies by Context","Note":"The read operation could produce other undefined or unexpected results.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product reads data past the end, or before the beginning, of the intended buffer."}},{"_key":"CWE-1250","_id":"cwe/CWE-1250","_rev":"_jHZO_-i-_l","original_id":"1250","datatype":"cwe","name":"Improper Preservation of Consistency Between Independent Representations of Shared State","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other."}},{"_key":"CWE-1251","_id":"cwe/CWE-1251","_rev":"_jHZO_-i-_m","original_id":"1251","datatype":"cwe","name":"Mirrored Regions with Different Values","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Non-Repudiation"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product's architecture mirrors regions without ensuring that their contents always stay in sync."}},{"_key":"CWE-1252","_id":"cwe/CWE-1252","_rev":"_jHZO_-i-_n","original_id":"1252","datatype":"cwe","name":"CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory."}},{"_key":"CWE-1253","_id":"cwe/CWE-1253","_rev":"_jHZO_-i-_o","original_id":"1253","datatype":"cwe","name":"Incorrect Selection of Fuse Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Authorization"},{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"},{"Impact":"Read Memory","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"}],"description":"\n      ","likeliehood_of_exploit":"","short_description":"The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse."}},{"_key":"CWE-1254","_id":"cwe/CWE-1254","_rev":"_jHZO_-i-_p","original_id":"1254","datatype":"cwe","name":"Incorrect Comparison Logic Granularity","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Authorization"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes."}},{"_key":"CWE-1255","_id":"cwe/CWE-1255","_rev":"_jHZO_-i-_q","original_id":"1255","datatype":"cwe","name":"Comparison Logic is Vulnerable to Power Side-Channel Attacks","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Note":"As compromising a security token may result in complete system control, the impacts are relatively universal.","Scope":"Non-Repudiation"}],"description":"\n        ","likeliehood_of_exploit":"","short_description":"A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token."}},{"_key":"CWE-1256","_id":"cwe/CWE-1256","_rev":"_jHZO_-i-_r","original_id":"1256","datatype":"cwe","name":"Improper Restriction of Software Interfaces to Hardware Features","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Integrity"}],"description":"\n              ","likeliehood_of_exploit":"","short_description":"The product provides software-controllable\n\t\t\tdevice functionality for capabilities such as power and\n\t\t\tclock management, but it does not properly limit\n\t\t\tfunctionality that can lead to modification of\n\t\t\thardware memory or register bits, or the ability to\n\t\t\tobserve physical side channels."}},{"_key":"CWE-1257","_id":"cwe/CWE-1257","_rev":"_jHZO_-i-_s","original_id":"1257","datatype":"cwe","name":"Improper Access Control Applied to Mirrored or Aliased Memory Regions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Likelihood":"High","Scope":"Confidentiality"},{"Impact":"Modify Memory","Likelihood":"High","Scope":"Integrity"},{"Impact":"DoS: Instability","Likelihood":"High","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.\n\t\t\t"}},{"_key":"CWE-1258","_id":"cwe/CWE-1258","_rev":"_jHZO_-i-_t","original_id":"1258","datatype":"cwe","name":"Exposure of Sensitive System Information Due to Uncleared Debug Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered."}},{"_key":"CWE-1259","_id":"cwe/CWE-1259","_rev":"_jHZO_-i-_u","original_id":"1259","datatype":"cwe","name":"Improper Restriction of Security Token Assignment","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Likelihood":"High","Scope":"Access Control"}],"description":"Systems-On-A-Chip (Integrated circuits and hardware engines) implement Security Tokens to differentiate and identify which actions originated from which agent. These actions may be one of the directives: 'read', 'write', 'program', 'reset', 'fetch', 'compute', etc. Security Tokens are assigned to every agent in the System that is capable of generating an action or receiving an action from another agent. Multiple Security Tokens may be assigned to an agent and may be unique based on the agent's trust level or allowed privileges. Since the Security Tokens are integral for the maintenance of security in an SoC, they need to be protected properly. A common weakness afflicting Security Tokens is improperly restricting the assignment to trusted components. Consequently, an improperly protected Security Token may be able to be programmed by a malicious agent (i.e., the Security Token is mutable) to spoof the action as if it originated from a trusted agent.\n\t\t\t","likeliehood_of_exploit":"","short_description":"The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected."}},{"_key":"CWE-126","_id":"cwe/CWE-126","_rev":"_jHZO_-i-_v","original_id":"126","datatype":"cwe","name":"Buffer Over-read","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"By reading out-of-bounds memory, an attacker might be able to get secret values, such as memory addresses, which can be bypass protection mechanisms such as ASLR in order to improve the reliability and likelihood of exploiting a separate weakness to achieve code execution instead of just denial of service.","Scope":"Confidentiality"}],"description":"This typically occurs when the pointer or its index is incremented to a position beyond the bounds of the buffer or when pointer arithmetic results in a position outside of the valid memory location to name a few. This may result in exposure of sensitive information or possibly a crash.","likeliehood_of_exploit":"","short_description":"The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer."}},{"_key":"CWE-1260","_id":"cwe/CWE-1260","_rev":"_jHZO_-i-_w","original_id":"1260","datatype":"cwe","name":"Improper Handling of Overlap Between Protected Memory Ranges","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Instability","Likelihood":"High","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product allows address regions to overlap, which can result in the bypassing of intended memory protection."}},{"_key":"CWE-1261","_id":"cwe/CWE-1261","_rev":"_jHZO_-i-_x","original_id":"1261","datatype":"cwe","name":"Improper Handling of Single Event Upsets","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The hardware logic does not effectively handle when single-event upsets (SEUs) occur."}},{"_key":"CWE-1262","_id":"cwe/CWE-1262","_rev":"_jHZO_-i-_y","original_id":"1262","datatype":"cwe","name":"Improper Access Control for Register Interface","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"Confidentiality of hardware assets may be violated if the protected information can be read out by software through the register interface. Registers storing security state, settings, other security-critical data may be corruptible by software without correctly implemented protections.","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers."}},{"_key":"CWE-1263","_id":"cwe/CWE-1263","_rev":"_jHZO_-i-_z","original_id":"1263","datatype":"cwe","name":"Improper Physical Access Control","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Access Control"}],"description":"Sections of a product intended to have restricted access may be inadvertently or intentionally rendered accessible when the implemented physical protections are insufficient. The specific requirements around how robust the design of the physical protection mechanism needs to be depends on the type of product being protected. Selecting the correct physical protection mechanism and properly enforcing it through implementation and manufacturing are critical to the overall physical security of the product.\n\t\t\t","likeliehood_of_exploit":"","short_description":"The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas."}},{"_key":"CWE-1264","_id":"cwe/CWE-1264","_rev":"_jHZO_-i-_0","original_id":"1264","datatype":"cwe","name":"Hardware Logic with Insecure De-Synchronization between Control and Data Channels","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete."}},{"_key":"CWE-1265","_id":"cwe/CWE-1265","_rev":"_jHZO_-i-_1","original_id":"1265","datatype":"cwe","name":"Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Likelihood":"Unknown","Note":"Exploitation of this weakness can leave the application in an unexpected state and cause variables to be reassigned before the first invocation has completed. This may eventually result in memory corruption or unexpected code execution.","Scope":"Integrity"}],"description":"In a complex product, a single function call may lead to many different possible code paths, some of which may involve deeply nested calls. It may be difficult to foresee all possible code paths that could emanate from a given function call. In some systems, an external actor can manipulate inputs to the system and thereby achieve a wide range of possible control flows. This is frequently a concern in products that execute scripts from untrusted sources. Examples of such products are web browsers and PDF readers. A weakness is present when one of the possible code paths resulting from a function call alters program state that the original caller assumes to be unchanged during the call.","likeliehood_of_exploit":"","short_description":"During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code."}},{"_key":"CWE-1266","_id":"cwe/CWE-1266","_rev":"_jHZO_-i-_2","original_id":"1266","datatype":"cwe","name":"Improper Scrubbing of Sensitive Data from Decommissioned Device","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned.  A scrubbing capability could be missing, insufficient, or incorrect."}},{"_key":"CWE-1267","_id":"cwe/CWE-1267","_rev":"_jHZO_-i-_3","original_id":"1267","datatype":"cwe","name":"Policy Uses Obsolete Encoding","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Reliability","Likelihood":"High","Scope":"Access Control"}],"description":"\n    ","likeliehood_of_exploit":"","short_description":"The product uses an obsolete encoding mechanism to implement access controls."}},{"_key":"CWE-1268","_id":"cwe/CWE-1268","_rev":"_jHZO_-i-_4","original_id":"1268","datatype":"cwe","name":"Policy Privileges are not Assigned Consistently Between Control and Data Agents","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Reliability","Likelihood":"High","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.\n\t\t\t   "}},{"_key":"CWE-1269","_id":"cwe/CWE-1269","_rev":"_jHZO_-i-_5","original_id":"1269","datatype":"cwe","name":"Product Released in Non-Release Configuration","metadata":{"applicable_platform":["Compiled"],"common_consequences":[{"Impact":"Other","Likelihood":"High","Scope":"Non-Repudiation"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product released to market is released in pre-production or manufacturing configuration."}},{"_key":"CWE-127","_id":"cwe/CWE-127","_rev":"_jHZO_-i-_6","original_id":"127","datatype":"cwe","name":"Buffer Under-read","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"By reading out-of-bounds memory, an attacker might be able to get secret values, such as memory addresses, which can be bypass protection mechanisms such as ASLR in order to improve the reliability and likelihood of exploiting a separate weakness to achieve code execution instead of just denial of service.","Scope":"Confidentiality"}],"description":"This typically occurs when the pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used. This may result in exposure of sensitive information or possibly a crash.","likeliehood_of_exploit":"","short_description":"The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations prior to the targeted buffer."}},{"_key":"CWE-1270","_id":"cwe/CWE-1270","_rev":"_jHZO_-i-_7","original_id":"1270","datatype":"cwe","name":"Generation of Incorrect Security Tokens","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Likelihood":"High","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect."}},{"_key":"CWE-1271","_id":"cwe/CWE-1271","_rev":"_jHZO_-i-_8","original_id":"1271","datatype":"cwe","name":"Uninitialized Value on Reset for Registers Holding Security Settings","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Authorization"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Security-critical logic is not set to a known value on reset."}},{"_key":"CWE-1272","_id":"cwe/CWE-1272","_rev":"_jHZO_-i-_9","original_id":"1272","datatype":"cwe","name":"Sensitive Information Uncleared Before Debug/Power State Transition","metadata":{"applicable_platform":["Hardware Description Language"],"common_consequences":[{"Impact":"Read Application Data","Likelihood":"High","Note":"Sensitive information may be used to unlock additional capabilities of the device and take advantage of hidden functionalities which could be used to compromise device security.","Scope":"Non-Repudiation"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions."}},{"_key":"CWE-1273","_id":"cwe/CWE-1273","_rev":"_jHZO_-i-A-","original_id":"1273","datatype":"cwe","name":"Device Unlock Credential Sharing","metadata":{"applicable_platform":["Compiled"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Once unlock credentials are compromised, an attacker can use the credentials to unlock the device and gain unauthorized access to the hidden functionalities protected by those credentials.","Scope":"Non-Repudiation"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information."}},{"_key":"CWE-1274","_id":"cwe/CWE-1274","_rev":"_jHZO_-i-A_","original_id":"1274","datatype":"cwe","name":"Improper Access Control for Volatile Memory Containing Boot Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Likelihood":"High","Scope":"Integrity"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory."}},{"_key":"CWE-1275","_id":"cwe/CWE-1275","_rev":"_jHZO_-i-AA","original_id":"1275","datatype":"cwe","name":"Sensitive Cookie with Improper SameSite Attribute","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Likelihood":"Low","Note":"If the website does not impose additional defense against CSRF attacks, failing to use the 'Lax' or 'Strict' values could increase the risk of exposure to CSRF attacks. The likelihood of the integrity breach is Low because a successful attack does not only depend on an insecure SameSite attribute. In order to perform a CSRF attack there are many conditions that must be met, such as the lack of CSRF tokens, no confirmations for sensitive actions on the website, a \"simple\" \"Content-Type\" header in the HTTP request and many more.","Scope":"Access Control"}],"description":"The SameSite attribute controls how cookies are sent for cross-domain requests. This attribute may have three values: 'Lax', 'Strict', or 'None'. If the 'None' value is used, a website may create a cross-domain POST HTTP request to another website, and the browser automatically adds cookies to this request. This may lead to Cross-Site-Request-Forgery (CSRF) attacks if there are no additional protections in place (such as Anti-CSRF tokens).","likeliehood_of_exploit":"Medium","short_description":"The SameSite attribute for sensitive cookies is not set, or an insecure value is used."}},{"_key":"CWE-1276","_id":"cwe/CWE-1276","_rev":"_jHZO_-i-AB","original_id":"1276","datatype":"cwe","name":"Hardware Child Block Incorrectly Connected to Parent System","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Signals between a hardware IP and the parent system design are incorrectly connected causing security risks."}},{"_key":"CWE-1277","_id":"cwe/CWE-1277","_rev":"_jHZO_-i-AC","original_id":"1277","datatype":"cwe","name":"Firmware Not Updateable","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Likelihood":"Medium","Note":"If an attacker can identify an exploitable vulnerability in one device that has no means of patching, the attack may be used against an entire class of devices.","Scope":"Authorization"}],"description":"Without the ability to\n\t\t\tpatch or update firmware, consumers will be\n\t\t\tleft vulnerable to exploitation of any known\n\t\t\tvulnerabilities, or any vulnerabilities that\n\t\t\tare discovered in the future. This can expose\n\t\t\tconsumers to permanent risk throughout the\n\t\t\tentire lifetime of the device, which could be\n\t\t\tyears or decades. Some external protective\n\t\t\tmeasures and mitigations might be employed to\n\t\t\taid in preventing or reducing the risk of\n\t\t\tmalicious attack, but the root weakness cannot\n\t\t\tbe corrected.","likeliehood_of_exploit":"","short_description":"The product does not provide its\n\t\t\tusers with the ability to update or patch its\n\t\t\tfirmware to address any vulnerabilities or\n\t\t\tweaknesses that may be present."}},{"_key":"CWE-1278","_id":"cwe/CWE-1278","_rev":"_jHZO_-i-AD","original_id":"1278","datatype":"cwe","name":"Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"A common goal of malicious actors who reverse engineer ICs is to produce and sell counterfeit versions of the IC.","Scope":"Confidentiality"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy."}},{"_key":"CWE-1279","_id":"cwe/CWE-1279","_rev":"_jHZO_-i-AE","original_id":"1279","datatype":"cwe","name":"Cryptographic Operations are run Before Supporting Units are Ready","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Non-Repudiation"}],"description":"Many cryptographic hardware units depend upon other hardware units to supply information to them to produce a securely encrypted result. For example, a cryptographic unit that depends on an external random-number-generator (RNG) unit for entropy must wait until the RNG unit is producing random numbers. If a cryptographic unit retrieves a private encryption key from a fuse unit, the fuse unit must be up and running before a key may be supplied.\n\t\t\t","likeliehood_of_exploit":"","short_description":"Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result."}},{"_key":"CWE-128","_id":"cwe/CWE-128","_rev":"_jHZO_-i-AF","original_id":"128","datatype":"cwe","name":"Wrap-around Error","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Instability","Note":"This weakness will generally lead to undefined behavior and therefore crashes. In the case of overflows involving loop index variables, the likelihood of infinite loops is also high.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If the value in question is important to data (as opposed to flow), simple data corruption has occurred. Also, if the wrap around results in other conditions such as buffer overflows, further memory corruption may occur.","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"This weakness can sometimes trigger buffer overflows which can be used to execute arbitrary code. This is usually outside the scope of a program's implicit security policy.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"Wrap around errors occur whenever a value is incremented past the maximum value for its type and therefore \"wraps around\" to a very small, negative, or undefined value."}},{"_key":"CWE-1280","_id":"cwe/CWE-1280","_rev":"_jHZO_-i-AG","original_id":"1280","datatype":"cwe","name":"Access Control Check Implemented After Asset is Accessed","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"A product's hardware-based access control check occurs after the asset has been accessed."}},{"_key":"CWE-1281","_id":"cwe/CWE-1281","_rev":"_jHZO_-i-AH","original_id":"1281","datatype":"cwe","name":"Sequence of Processor Instructions Leads to Unexpected Behavior","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed."}},{"_key":"CWE-1282","_id":"cwe/CWE-1282","_rev":"_jHZO_-i-AI","original_id":"1282","datatype":"cwe","name":"Assumed-Immutable Data is Stored in Writable Memory","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Immutable data, such as a first-stage bootloader, device identifiers, and \"write-once\" configuration settings are stored in writable memory that can be re-programmed or updated in the field."}},{"_key":"CWE-1283","_id":"cwe/CWE-1283","_rev":"_jHZO_-i-AJ","original_id":"1283","datatype":"cwe","name":"Mutable Attestation or Measurement Reporting Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary."}},{"_key":"CWE-1284","_id":"cwe/CWE-1284","_rev":"_jHZO_-i-AK","original_id":"1284","datatype":"cwe","name":"Improper Validation of Specified Quantity in Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"Since quantities are used so often to affect resource allocation or process financial data, they are often present in many places in the code.","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties."}},{"_key":"CWE-1285","_id":"cwe/CWE-1285","_rev":"_jHZO_-i-AL","original_id":"1285","datatype":"cwe","name":"Improper Validation of Specified Index, Position, or Offset in Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties."}},{"_key":"CWE-1286","_id":"cwe/CWE-1286","_rev":"_jHZO_-i-AM","original_id":"1286","datatype":"cwe","name":"Improper Validation of Syntactic Correctness of Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax."}},{"_key":"CWE-1287","_id":"cwe/CWE-1287","_rev":"_jHZO_-i-AN","original_id":"1287","datatype":"cwe","name":"Improper Validation of Specified Type of Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type."}},{"_key":"CWE-1288","_id":"cwe/CWE-1288","_rev":"_jHZO_-i-AO","original_id":"1288","datatype":"cwe","name":"Improper Validation of Consistency within Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent."}},{"_key":"CWE-1289","_id":"cwe/CWE-1289","_rev":"_jHZO_-i-AP","original_id":"1289","datatype":"cwe","name":"Improper Validation of Unsafe Equivalence in Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value."}},{"_key":"CWE-129","_id":"cwe/CWE-129","_rev":"_jHZO_-i-AQ","original_id":"129","datatype":"cwe","name":"Improper Validation of Array Index","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"Use of an index that is outside the bounds of an array will very likely result in the corruption of relevant memory and perhaps instructions, leading to a crash, if the values are outside of the valid memory area.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If the memory corrupted is data, rather than instructions, the system will continue to function with improper values.","Scope":"Integrity"},{"Impact":"Read Memory","Note":"Use of an index that is outside the bounds of an array can also trigger out-of-bounds read or write operations, or operations on the wrong objects; i.e., \"buffer overflows\" are not always the result. This may result in the exposure or modification of sensitive data.","Scope":"Integrity"},{"Impact":"Execute Unauthorized Code or Commands","Note":"If the memory accessible by the attacker can be effectively controlled, it may be possible to execute arbitrary code, as with a standard buffer overflow and possibly without the use of large inputs if a precise index can be controlled.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"A single fault could allow either an overflow (CWE-788) or underflow (CWE-786) of the array index. What happens next will depend on the type of operation being performed out of bounds, but can expose sensitive information, cause a system crash, or possibly lead to arbitrary code execution.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array."}},{"_key":"CWE-1290","_id":"cwe/CWE-1290","_rev":"_jHZO_-i-AR","original_id":"1290","datatype":"cwe","name":"Incorrect Decoding of Security Identifiers ","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Likelihood":"High","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset."}},{"_key":"CWE-1291","_id":"cwe/CWE-1291","_rev":"_jHZO_-i-AS","original_id":"1291","datatype":"cwe","name":"Public Key Re-Use for Signing both Debug and Production Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Likelihood":"High","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The same public key is used for signing both debug and production code."}},{"_key":"CWE-1292","_id":"cwe/CWE-1292","_rev":"_jHZO_-i-AT","original_id":"1292","datatype":"cwe","name":"Incorrect Conversion of Security Identifiers","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Likelihood":"High","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset."}},{"_key":"CWE-1293","_id":"cwe/CWE-1293","_rev":"_jHZO_-i-AU","original_id":"1293","datatype":"cwe","name":"Missing Source Correlation of Multiple Independent Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker that may be able to execute a single Person-in-the-Middle attack can subvert a check of an external oracle (e.g. the ACME protocol check for a file on a website), and thus inject an arbitrary reply to the single perspective request to the external oracle.","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source."}},{"_key":"CWE-1294","_id":"cwe/CWE-1294","_rev":"_jHZO_-i-AV","original_id":"1294","datatype":"cwe","name":"Insecure Security Identifier Mechanism","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Likelihood":"High","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented."}},{"_key":"CWE-1295","_id":"cwe/CWE-1295","_rev":"_jHZO_-i-AW","original_id":"1295","datatype":"cwe","name":"Debug Messages Revealing Unnecessary Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Likelihood":"Medium","Scope":"Non-Repudiation"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages."}},{"_key":"CWE-1296","_id":"cwe/CWE-1296","_rev":"_jHZO_-i-AX","original_id":"1296","datatype":"cwe","name":"Incorrect Chaining or Granularity of Debug Components","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Likelihood":"Medium","Note":"Depending on the access to debug component(s) erroneously granted, an attacker could use the debug component to gain additional understanding about the system to further an attack and/or execute other commands. This could compromise any security property, including the ones listed above.","Scope":"Accountability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product's debug components contain incorrect chaining or granularity of debug components."}},{"_key":"CWE-1297","_id":"cwe/CWE-1297","_rev":"_jHZO_-i-AY","original_id":"1297","datatype":"cwe","name":"Unprotected Confidential Information on Device is Accessible by OSAT Vendors","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Likelihood":"Medium","Note":"The impact depends on the confidential information itself and who is inadvertently granted access. For example, if the confidential information is a key that can unlock all the parts of a generation, the impact could be severe.","Scope":"Non-Repudiation"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors."}},{"_key":"CWE-1298","_id":"cwe/CWE-1298","_rev":"_jHZO_-i-AZ","original_id":"1298","datatype":"cwe","name":"Hardware Logic Contains Race Conditions","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"A race condition in the hardware logic results in undermining security guarantees of the system."}},{"_key":"CWE-1299","_id":"cwe/CWE-1299","_rev":"_jHZO_-i-Aa","original_id":"1299","datatype":"cwe","name":"Missing Protection Mechanism for Alternate Hardware Interface","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Likelihood":"High","Scope":"Access Control"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The lack of protections on alternate paths to access\n                control-protected assets (such as unprotected shadow registers\n                and other external facing unguarded interfaces) allows an\n                attacker to bypass existing protections to the asset that are\n\t\tonly performed against the primary path."}},{"_key":"CWE-13","_id":"cwe/CWE-13","_rev":"_jHZO_-m---","original_id":"13","datatype":"cwe","name":"ASP.NET Misconfiguration: Password in Configuration File","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers."}},{"_key":"CWE-130","_id":"cwe/CWE-130","_rev":"_jHZO_-m--_","original_id":"130","datatype":"cwe","name":"Improper Handling of Length Parameter Inconsistency","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Integrity"}],"description":"If an attacker can manipulate the length parameter associated with an input such that it is inconsistent with the actual length of the input, this can be leveraged to cause the target application to behave in unexpected, and possibly, malicious ways. One of the possible motives for doing so is to pass in arbitrarily large input to the application. Another possible motivation is the modification of application state by including invalid data for subsequent properties of the application. Such weaknesses commonly lead to attacks such as buffer overflows and execution of arbitrary code.","likeliehood_of_exploit":"","short_description":"The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data."}},{"_key":"CWE-1300","_id":"cwe/CWE-1300","_rev":"_jHZO_-m--A","original_id":"1300","datatype":"cwe","name":"Improper Protection of Physical Side Channels","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n\t  ","likeliehood_of_exploit":"","short_description":"The device does not contain sufficient protection\n\tmechanisms to prevent physical side channels from exposing\n\tsensitive information due to patterns in physically observable\n\tphenomena such as variations in power consumption,\n\telectromagnetic emissions (EME), or acoustic emissions."}},{"_key":"CWE-1301","_id":"cwe/CWE-1301","_rev":"_jHZO_-m--B","original_id":"1301","datatype":"cwe","name":"Insufficient or Incomplete Data Removal within Hardware Component","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product's data removal process does not completely delete all data and potentially sensitive information within hardware components."}},{"_key":"CWE-1302","_id":"cwe/CWE-1302","_rev":"_jHZO_-m--C","original_id":"1302","datatype":"cwe","name":"Missing Source Identifier in Entity Transactions on a System-On-Chip (SOC)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Likelihood":"High","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier."}},{"_key":"CWE-1303","_id":"cwe/CWE-1303","_rev":"_jHZO_-m--D","original_id":"1303","datatype":"cwe","name":"Non-Transparent Sharing of Microarchitectural Resources","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Note":"Microarchitectural side-channels have been used to leak specific information such as cryptographic keys, and Address Space Layout Randomization (ALSR) offsets as well as arbitrary memory.","Scope":"Confidentiality"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts."}},{"_key":"CWE-1304","_id":"cwe/CWE-1304","_rev":"_jHZO_-m--E","original_id":"1304","datatype":"cwe","name":"Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Reliability","Likelihood":"High","Scope":"Integrity"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"The product performs a power save/restore\n            operation, but it does not ensure that the integrity of\n            the configuration state is maintained and/or verified between\n\t    the beginning and ending of the operation."}},{"_key":"CWE-131","_id":"cwe/CWE-131","_rev":"_jHZO_-m--F","original_id":"131","datatype":"cwe","name":"Incorrect Calculation of Buffer Size","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"If the incorrect calculation is used in the context of memory allocation, then the software may create a buffer that is smaller or larger than expected. If the allocated buffer is smaller than expected, this could lead to an out-of-bounds read or write (CWE-119), possibly causing a crash, allowing arbitrary code execution, or exposing sensitive data.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow."}},{"_key":"CWE-1310","_id":"cwe/CWE-1310","_rev":"_jHZO_-m--G","original_id":"1310","datatype":"cwe","name":"Missing Ability to Patch ROM Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Maintainability","Likelihood":"High","Note":"When the system is unable to be patched, it can be left in a vulnerable state.","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state."}},{"_key":"CWE-1311","_id":"cwe/CWE-1311","_rev":"_jHZO_-m--H","original_id":"1311","datatype":"cwe","name":"Improper Translation of Security Attributes by Fabric Bridge","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another."}},{"_key":"CWE-1312","_id":"cwe/CWE-1312","_rev":"_jHZO_-m--I","original_id":"1312","datatype":"cwe","name":"Missing Protection for Mirrored Regions in On-Chip Fabric Firewall","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions."}},{"_key":"CWE-1313","_id":"cwe/CWE-1313","_rev":"_jHZO_-m--J","original_id":"1313","datatype":"cwe","name":"Hardware Allows Activation of Test or Debug Logic at Runtime","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Reliability","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary."}},{"_key":"CWE-1314","_id":"cwe/CWE-1314","_rev":"_jHZO_-m--K","original_id":"1314","datatype":"cwe","name":"Missing Write Protection for Parametric Data Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Likelihood":"High","Note":"Sensor value manipulation, particularly thermal or power, may allow physical damage to occur or disabling of the device by a false fault shutdown causing a Denial-Of-Service.","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure."}},{"_key":"CWE-1315","_id":"cwe/CWE-1315","_rev":"_jHZO_-m--L","original_id":"1315","datatype":"cwe","name":"Improper Setting of Bus Controlling Capability in Fabric End-point","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric."}},{"_key":"CWE-1316","_id":"cwe/CWE-1316","_rev":"_jHZO_-m--M","original_id":"1316","datatype":"cwe","name":"Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Likelihood":"Medium","Scope":"Authorization"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region."}},{"_key":"CWE-1317","_id":"cwe/CWE-1317","_rev":"_jHZO_-m--N","original_id":"1317","datatype":"cwe","name":"Improper Access Control in Fabric Bridge","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Likelihood":"Medium","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks."}},{"_key":"CWE-1318","_id":"cwe/CWE-1318","_rev":"_jHZO_-m--O","original_id":"1318","datatype":"cwe","name":"Missing Support for Security Features in On-chip Fabrics or Buses","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Likelihood":"Medium","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":" On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control. "}},{"_key":"CWE-1319","_id":"cwe/CWE-1319","_rev":"_jHZO_-m--P","original_id":"1319","datatype":"cwe","name":"Improper Protection against Electromagnetic Fault Injection (EM-FI)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed."}},{"_key":"CWE-1320","_id":"cwe/CWE-1320","_rev":"_jHZO_-m--Q","original_id":"1320","datatype":"cwe","name":"Improper Protection for Outbound Error Messages and Alert Signals","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Likelihood":"High","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.\n\t\t\t"}},{"_key":"CWE-1321","_id":"cwe/CWE-1321","_rev":"_jHZO_-m--R","original_id":"1321","datatype":"cwe","name":"Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Likelihood":"High","Note":"An attacker can inject attributes that are used in other components.","Scope":"Integrity"},{"Impact":"DoS: Crash, Exit, or Restart","Likelihood":"High","Note":"An attacker can override existing attributes with ones that have incompatible type, which may lead to a crash.","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype."}},{"_key":"CWE-1322","_id":"cwe/CWE-1322","_rev":"_jHZO_-m--S","original_id":"1322","datatype":"cwe","name":"Use of Blocking Code in Single-threaded, Non-blocking Context","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Note":"An unexpected call to blocking code can trigger an infinite loop, or a large loop that causes the software to pause and wait indefinitely.","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product uses a non-blocking model that relies on a single threaded process\n\t\t\tfor features such as scalability, but it contains code that can block when it is invoked."}},{"_key":"CWE-1323","_id":"cwe/CWE-1323","_rev":"_jHZO_-m--T","original_id":"1323","datatype":"cwe","name":"Improper Management of Sensitive Trace Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Note":"An adversary can read secret values if they are captured in debug traces and stored unsafely.","Scope":"Confidentiality"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"Trace data collected from several sources on the\n                System-on-Chip (SoC) is stored in unprotected locations or\n                transported to untrusted agents."}},{"_key":"CWE-1325","_id":"cwe/CWE-1325","_rev":"_jHZO_-m--U","original_id":"1325","datatype":"cwe","name":"Improperly Controlled Sequential Memory Allocation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumption of a large amount of memory on the system.","Scope":"Availability"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects."}},{"_key":"CWE-1326","_id":"cwe/CWE-1326","_rev":"_jHZO_-m--V","original_id":"1326","datatype":"cwe","name":"Missing Immutable Root of Trust in Hardware","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Memory","Likelihood":"High","Scope":"Authorization"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code."}},{"_key":"CWE-1327","_id":"cwe/CWE-1327","_rev":"_jHZO_-m--W","original_id":"1327","datatype":"cwe","name":"Binding to an Unrestricted IP Address","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Amplification","Likelihood":"High","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely."}},{"_key":"CWE-1328","_id":"cwe/CWE-1328","_rev":"_jHZO_-m--X","original_id":"1328","datatype":"cwe","name":"Security Version Number Mutable to Older Versions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Likelihood":"High","Note":"Impact includes roll-back or downgrade to a vulnerable version of the firmware or DoS (prevent upgrades).","Scope":"Authorization"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions."}},{"_key":"CWE-1329","_id":"cwe/CWE-1329","_rev":"_jHZO_-m--Y","original_id":"1329","datatype":"cwe","name":"Reliance on Component That is Not Updateable","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Reduce Maintainability","Note":"If an attacker can identify an exploitable vulnerability in one product that has no means of patching, the attack may be used against all affected versions of that product.","Scope":"Other"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs."}},{"_key":"CWE-1330","_id":"cwe/CWE-1330","_rev":"_jHZO_-m--Z","original_id":"1330","datatype":"cwe","name":"Remanent Data Readable after Memory Erase","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Note":"Confidential data are readable to untrusted agent.","Scope":"Confidentiality"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Confidential information stored in memory circuits is readable or recoverable after being cleared or erased."}},{"_key":"CWE-1331","_id":"cwe/CWE-1331","_rev":"_jHZO_-m--a","original_id":"1331","datatype":"cwe","name":"Improper Isolation of Shared Resources in Network On Chip (NoC)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Likelihood":"Medium","Note":"Attackers may infer data that belongs to a trusted agent. The methods used to perform this attack may result in noticeably increased resource consumption.","Scope":"Availability"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels."}},{"_key":"CWE-1332","_id":"cwe/CWE-1332","_rev":"_jHZO_-m--b","original_id":"1332","datatype":"cwe","name":"Improper Handling of Faults that Lead to Instruction Skips","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Likelihood":"High","Note":"Depending on the context, instruction skipping can\n                        have a broad range of consequences related to the\n                        generic bypassing of security critical code.","Scope":"Authentication"}],"description":"\n              ","likeliehood_of_exploit":"","short_description":"The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur."}},{"_key":"CWE-1333","_id":"cwe/CWE-1333","_rev":"_jHZO_-m--c","original_id":"1333","datatype":"cwe","name":"Inefficient Regular Expression Complexity","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Likelihood":"High","Scope":"Availability"}],"description":"Some regular expression engines have a feature called \"backtracking\". If the token cannot match, the engine \"backtracks\" to a position that may result in a different token that can match.","likeliehood_of_exploit":"High","short_description":"The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles."}},{"_key":"CWE-1334","_id":"cwe/CWE-1334","_rev":"_jHZO_-m--d","original_id":"1334","datatype":"cwe","name":"Unauthorized Error Injection Can Degrade Hardware Redundancy","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode."}},{"_key":"CWE-1335","_id":"cwe/CWE-1335","_rev":"_jHZO_-m--e","original_id":"1335","datatype":"cwe","name":"Incorrect Bitwise Shift of Integer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result."}},{"_key":"CWE-1336","_id":"cwe/CWE-1336","_rev":"_jHZO_-m--f","original_id":"1336","datatype":"cwe","name":"Improper Neutralization of Special Elements Used in a Template Engine","metadata":{"applicable_platform":["Interpreted"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine."}},{"_key":"CWE-1338","_id":"cwe/CWE-1338","_rev":"_jHZO_-m--g","original_id":"1338","datatype":"cwe","name":"Improper Protections Against Hardware Overheating","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Likelihood":"High","Scope":"Availability"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"A hardware device is missing or has inadequate protection features to prevent overheating."}},{"_key":"CWE-1339","_id":"cwe/CWE-1339","_rev":"_jHZO_-m--h","original_id":"1339","datatype":"cwe","name":"Insufficient Precision or Accuracy of a Real Number","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"This weakness will generally lead to undefined results and therefore crashes. In some implementations the program will halt if the weakness causes an overflow during a calculation.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"The results of the math are not as expected. This could cause issues where a value would not be properly calculated and provide an incorrect answer.","Scope":"Integrity"},{"Impact":"Modify Application Data","Note":"This weakness can sometimes trigger buffer overflows which can be used to execute arbitrary code. This is usually outside the scope of a product's implicit security policy.","Scope":"Access Control"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result."}},{"_key":"CWE-134","_id":"cwe/CWE-134","_rev":"_jHZO_-m--i","original_id":"134","datatype":"cwe","name":"Use of Externally-Controlled Format String","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"Format string problems allow for information disclosure which can severely simplify exploitation of the program.","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Format string problems can result in the execution of arbitrary code.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product uses a function that accepts a format string as an argument, but the format string originates from an external source."}},{"_key":"CWE-1341","_id":"cwe/CWE-1341","_rev":"_jHZO_-m--j","original_id":"1341","datatype":"cwe","name":"Multiple Releases of Same Resource or Handle","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Likelihood":"Medium","Scope":"Integrity"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product attempts to close or release a resource or handle more than once, without any successful open between the close operations."}},{"_key":"CWE-1342","_id":"cwe/CWE-1342","_rev":"_jHZO_-m--k","original_id":"1342","datatype":"cwe","name":"Information Exposure through Microarchitectural State after Transient Execution","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Likelihood":"Medium","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution."}},{"_key":"CWE-135","_id":"cwe/CWE-135","_rev":"_jHZO_-m--l","original_id":"135","datatype":"cwe","name":"Incorrect Calculation of Multi-Byte String Length","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"This weakness may lead to a buffer overflow. Buffer overflows often can be used to execute arbitrary code, which is usually outside the scope of a program's implicit security policy. This can often be used to subvert any other security service.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (Memory)","Note":"Out of bounds memory access will very likely result in the corruption of relevant memory, and perhaps instructions, possibly leading to a crash. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.","Scope":"Confidentiality"},{"Impact":"Read Memory","Note":"In the case of an out-of-bounds read, the attacker may have access to sensitive information. If the sensitive information contains system details, such as the current buffer's position in memory, this knowledge can be used to craft further attacks, possibly with more severe consequences.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not correctly calculate the length of strings that can contain wide or multi-byte characters."}},{"_key":"CWE-1351","_id":"cwe/CWE-1351","_rev":"_jHZO_-m--m","original_id":"1351","datatype":"cwe","name":"Improper Handling of Hardware Behavior in Exceptionally Cold Environments","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Likelihood":"Low","Note":"Consequences of this weakness are highly contextual.","Scope":"Authentication"}],"description":"\n                ","likeliehood_of_exploit":"","short_description":"A hardware device, or the firmware running on it, is\n                missing or has incorrect protection features to maintain\n                goals of security primitives when the device is cooled below\n                standard operating temperatures."}},{"_key":"CWE-1357","_id":"cwe/CWE-1357","_rev":"_jHZO_-m--n","original_id":"1357","datatype":"cwe","name":"Reliance on Insufficiently Trustworthy Component","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":"\n\t\t","likeliehood_of_exploit":"","short_description":"The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability."}},{"_key":"CWE-138","_id":"cwe/CWE-138","_rev":"_jHZO_-m--o","original_id":"138","datatype":"cwe","name":"Improper Neutralization of Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Other"}],"description":"Most languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special elements, the control flow of the program may be altered from what was intended. For example, both Unix and Windows interpret the symbol < (\"less than\") as meaning \"read input from a file\".","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component."}},{"_key":"CWE-1384","_id":"cwe/CWE-1384","_rev":"_jHZO_-m--p","original_id":"1384","datatype":"cwe","name":"Improper Handling of Physical or Environmental Conditions","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"Consequences of this weakness are highly dependent on the role of affected components within the larger product.","Scope":"Availability"}],"description":"\n      ","likeliehood_of_exploit":"","short_description":"The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced."}},{"_key":"CWE-1385","_id":"cwe/CWE-1385","_rev":"_jHZO_-m--q","original_id":"1385","datatype":"cwe","name":"Missing Origin Validation in WebSockets","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"The consequences will vary depending on the nature of the functionality that is vulnerable to CSRF. An attacker could effectively perform any operations as the victim. If the victim is an administrator or privileged user, the consequences may include obtaining complete control over the web application - deleting or stealing data, uninstalling the product, or using it to launch other attacks against all of the product's users. Because the attacker has the identity of the victim, the scope of the CSRF is limited only by the victim's privileges.","Scope":"Access Control"}],"description":"\n\t","likeliehood_of_exploit":"","short_description":"The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid."}},{"_key":"CWE-1386","_id":"cwe/CWE-1386","_rev":"_jHZO_-m--r","original_id":"1386","datatype":"cwe","name":"Insecure Operation on Windows Junction / Mount Point","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"Read arbitrary files by replacing a user-controlled folder with a mount point and additional hard links.","Scope":"Confidentiality"},{"Impact":"Modify Files or Directories","Note":"Modify an arbitrary file by replacing the rollback files in installer directories, as they can have the installer execute those rollbacks.","Scope":"Integrity"},{"Impact":"Modify Files or Directories","Note":"Even if there is no control of contents, an arbitrary file delete or overwrite (when running as SYSTEM or admin) can be used for a permanent system denial-of-service, e.g. by deleting a startup configuration file that prevents the service from starting.","Scope":"Availability"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere."}},{"_key":"CWE-1389","_id":"cwe/CWE-1389","_rev":"_jHZO_-m--s","original_id":"1389","datatype":"cwe","name":"Incorrect Parsing of Numbers with Different Radices","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Likelihood":"Unknown","Note":"An attacker may use an unexpected numerical base to access private application resources.","Scope":"Confidentiality"},{"Impact":"Alter Execution Logic","Likelihood":"Unknown","Note":"An attacker may use an unexpected numerical base to bypass or manipulate access control mechanisms.","Scope":"Integrity"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix)."}},{"_key":"CWE-1390","_id":"cwe/CWE-1390","_rev":"_jHZO_-m--t","original_id":"1390","datatype":"cwe","name":"Weak Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"This weakness can lead to the exposure of resources or functionality to unintended actors, possibly providing attackers with sensitive information or even execute arbitrary code.","Scope":"Access Control"}],"description":"\n\t","likeliehood_of_exploit":"","short_description":"The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct."}},{"_key":"CWE-1391","_id":"cwe/CWE-1391","_rev":"_jHZO_-m--u","original_id":"1391","datatype":"cwe","name":"Use of Weak Credentials","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[],"description":"\n\t","likeliehood_of_exploit":"","short_description":"The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker."}},{"_key":"CWE-1392","_id":"cwe/CWE-1392","_rev":"_jHZO_-m--v","original_id":"1392","datatype":"cwe","name":"Use of Default Credentials","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Authentication"}],"description":"\n\tIt is common practice for products to be designed to use\n\tdefault keys, passwords, or other mechanisms for\n\tauthentication.  The rationale is to simplify the\n\tmanufacturing process or the system administrator's task of\n\tinstallation and deployment into an enterprise. However, if\n\tadmins do not change the defaults, it is easier for attackers\n\tto bypass authentication quickly across multiple\n\torganizations.\n      ","likeliehood_of_exploit":"","short_description":"The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality."}},{"_key":"CWE-1393","_id":"cwe/CWE-1393","_rev":"_jHZO_-m--w","original_id":"1393","datatype":"cwe","name":"Use of Default Password","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Authentication"}],"description":"\n\tIt is common practice for products to be designed to use\n\tdefault passwords for authentication.  The rationale is to\n\tsimplify the manufacturing process or the system\n\tadministrator's task of installation and deployment into an\n\tenterprise. However, if admins do not change the defaults,\n\tthen it makes it easier for attackers to quickly bypass\n\tauthentication across multiple organizations. There are many\n\tlists of default passwords and default-password scanning tools\n\tthat are easily available from the World Wide Web.\n      ","likeliehood_of_exploit":"","short_description":"The product uses default passwords for potentially critical functionality."}},{"_key":"CWE-1394","_id":"cwe/CWE-1394","_rev":"_jHZO_-m--x","original_id":"1394","datatype":"cwe","name":"Use of Default Cryptographic Key","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Authentication"}],"description":"\n\tIt is common practice for products to be designed to use\n\tdefault keys.  The rationale is to simplify the manufacturing\n\tprocess or the system administrator's task of installation and\n\tdeployment into an enterprise. However, if admins do not\n\tchange the defaults, it is easier for attackers to bypass\n\tauthentication quickly across multiple organizations.\n      ","likeliehood_of_exploit":"","short_description":"The product uses a default cryptographic key for potentially critical functionality."}},{"_key":"CWE-1395","_id":"cwe/CWE-1395","_rev":"_jHZO_-m--y","original_id":"1395","datatype":"cwe","name":"Dependency on Vulnerable Third-Party Component","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"The consequences vary widely, depending on the vulnerabilities that exist in the component; how those vulnerabilities can be \"reached\" by adversaries, as the exploitation paths and attack surface will vary depending on how the component is used; and the criticality of the privilege levels and features for which the product relies on the component.","Scope":"Availability"}],"description":"\n\t      ","likeliehood_of_exploit":"","short_description":"The product has a dependency on a third-party component that contains one or more known vulnerabilities."}},{"_key":"CWE-14","_id":"cwe/CWE-14","_rev":"_jHZO_-m--z","original_id":"14","datatype":"cwe","name":"Compiler Removal of Code to Clear Buffers","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"This weakness will allow data that has not been cleared from memory to be read. If this data contains sensitive password information, then an attacker can read the password and use the information to bypass protection mechanisms.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"Sensitive memory is cleared according to the source code, but compiler optimizations leave the memory untouched when it is not read from again, aka \"dead store removal.\""}},{"_key":"CWE-140","_id":"cwe/CWE-140","_rev":"_jHZO_-m--0","original_id":"140","datatype":"cwe","name":"Improper Neutralization of Delimiters","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not neutralize or incorrectly neutralizes delimiters."}},{"_key":"CWE-141","_id":"cwe/CWE-141","_rev":"_jHZO_-m--1","original_id":"141","datatype":"cwe","name":"Improper Neutralization of Parameter/Argument Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as parameter or argument delimiters when they are sent to a downstream component."}},{"_key":"CWE-1419","_id":"cwe/CWE-1419","_rev":"_jHZO_-m--2","original_id":"1419","datatype":"cwe","name":"Incorrect Initialization of Resource","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Likelihood":"Unknown","Scope":"Confidentiality"},{"Impact":"Gain Privileges or Assume Identity","Scope":"Integrity"},{"Impact":"Varies by Context","Note":"The technical impact can vary widely based on how the resource is used in the product, and whether its contents affect security decisions.","Scope":"Other"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"The product attempts to initialize a resource but does not correctly do so, which might leave the resource in an unexpected, incorrect, or insecure state when it is accessed."}},{"_key":"CWE-142","_id":"cwe/CWE-142","_rev":"_jHZO_-m--3","original_id":"142","datatype":"cwe","name":"Improper Neutralization of Value Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as value delimiters when they are sent to a downstream component."}},{"_key":"CWE-1420","_id":"cwe/CWE-1420","_rev":"_jHZO_-m--4","original_id":"1420","datatype":"cwe","name":"Exposure of Sensitive Information during Transient Execution","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Likelihood":"Medium","Scope":"Confidentiality"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"A processor event or prediction may allow incorrect operations (or correct operations with incorrect data) to execute transiently, potentially exposing data over a covert channel."}},{"_key":"CWE-1421","_id":"cwe/CWE-1421","_rev":"_jHZO_-m--5","original_id":"1421","datatype":"cwe","name":"Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Likelihood":"Medium","Note":null,"Scope":"Confidentiality"}],"description":"\n\t\t\t","likeliehood_of_exploit":"","short_description":"\n\t\t\tA processor event may allow transient operations to access\n\t\t\tarchitecturally restricted data (for example, in another address\n\t\t\tspace) in a shared microarchitectural structure (for example, a CPU\n\t\t\tcache), potentially exposing the data over a covert channel.\n\t\t  "}},{"_key":"CWE-1422","_id":"cwe/CWE-1422","_rev":"_jHZO_-m--6","original_id":"1422","datatype":"cwe","name":"Exposure of Sensitive Information caused by Incorrect Data Forwarding during Transient Execution","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Likelihood":"Medium","Scope":"Confidentiality"}],"description":"\n\t\t\t","likeliehood_of_exploit":"","short_description":"A processor event or prediction may allow incorrect or stale data to\n\t\t  be forwarded to transient operations, potentially exposing data over a\n\t\t  covert channel."}},{"_key":"CWE-1423","_id":"cwe/CWE-1423","_rev":"_jHZO_-m--7","original_id":"1423","datatype":"cwe","name":"Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Likelihood":"Medium","Scope":"Confidentiality"}],"description":"\n\t\t\t\t","likeliehood_of_exploit":"","short_description":"Shared microarchitectural predictor state may allow code to influence\n\t\t\t\ttransient execution across a hardware boundary, potentially exposing\n\t\t\t\tdata that is accessible beyond the boundary over a covert channel.\n\t\t\t"}},{"_key":"CWE-1426","_id":"cwe/CWE-1426","_rev":"_jHZO_-m--8","original_id":"1426","datatype":"cwe","name":"Improper Validation of Generative AI Output","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":null,"Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product invokes a generative AI/ML\n\t\t\tcomponent whose behaviors and outputs cannot be directly\n\t\t\tcontrolled, but the product does not validate or\n\t\t\tinsufficiently validates the outputs to ensure that they\n\t\t\talign with the intended security, content, or privacy\n\t\t\tpolicy."}},{"_key":"CWE-1427","_id":"cwe/CWE-1427","_rev":"_jHZO_-m--9","original_id":"1427","datatype":"cwe","name":"Improper Neutralization of Input Used for LLM Prompting","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":null,"Scope":"Availability"},{"Impact":"Read Application Data","Note":null,"Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Note":null,"Scope":"Integrity"},{"Impact":"Gain Privileges or Assume Identity","Note":null,"Scope":"Access Control"}],"description":"\n\t\t\t  ","likeliehood_of_exploit":"","short_description":"The product uses externally-provided data to build prompts provided to\nlarge language models (LLMs), but the way these prompts are constructed\ncauses the LLM to fail to distinguish between user-supplied inputs and\ndeveloper provided system directives."}},{"_key":"CWE-143","_id":"cwe/CWE-143","_rev":"_jHZO_-m-_-","original_id":"143","datatype":"cwe","name":"Improper Neutralization of Record Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as record delimiters when they are sent to a downstream component."}},{"_key":"CWE-144","_id":"cwe/CWE-144","_rev":"_jHZO_-m-__","original_id":"144","datatype":"cwe","name":"Improper Neutralization of Line Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as line delimiters when they are sent to a downstream component."}},{"_key":"CWE-145","_id":"cwe/CWE-145","_rev":"_jHZO_-m-_A","original_id":"145","datatype":"cwe","name":"Improper Neutralization of Section Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as section delimiters when they are sent to a downstream component."}},{"_key":"CWE-146","_id":"cwe/CWE-146","_rev":"_jHZO_-m-_B","original_id":"146","datatype":"cwe","name":"Improper Neutralization of Expression/Command Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component."}},{"_key":"CWE-147","_id":"cwe/CWE-147","_rev":"_jHZO_-m-_C","original_id":"147","datatype":"cwe","name":"Improper Neutralization of Input Terminators","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"For example, a \".\" in SMTP signifies the end of mail message data, whereas a null character can be used for the end of a string.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component."}},{"_key":"CWE-148","_id":"cwe/CWE-148","_rev":"_jHZO_-m-_D","original_id":"148","datatype":"cwe","name":"Improper Neutralization of Input Leaders","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when a leading character or sequence (\"leader\") is missing or malformed, or if multiple leaders are used when only one should be allowed."}},{"_key":"CWE-149","_id":"cwe/CWE-149","_rev":"_jHZO_-m-_E","original_id":"149","datatype":"cwe","name":"Improper Neutralization of Quoting Syntax","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"Quotes injected into a product can be used to compromise a system. As data are parsed, an injected/absent/duplicate/malformed use of quotes may cause the process to take unexpected actions."}},{"_key":"CWE-15","_id":"cwe/CWE-15","_rev":"_jHZO_-m-_F","original_id":"15","datatype":"cwe","name":"External Control of System or Configuration Setting","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"Allowing external control of system settings can disrupt service or cause an application to behave in unexpected, and potentially malicious ways.","likeliehood_of_exploit":"","short_description":"One or more system settings or configuration elements can be externally controlled by a user."}},{"_key":"CWE-150","_id":"cwe/CWE-150","_rev":"_jHZO_-m-_G","original_id":"150","datatype":"cwe","name":"Improper Neutralization of Escape, Meta, or Control Sequences","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component."}},{"_key":"CWE-151","_id":"cwe/CWE-151","_rev":"_jHZO_-m-_H","original_id":"151","datatype":"cwe","name":"Improper Neutralization of Comment Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as comment delimiters when they are sent to a downstream component."}},{"_key":"CWE-152","_id":"cwe/CWE-152","_rev":"_jHZO_-m-_I","original_id":"152","datatype":"cwe","name":"Improper Neutralization of Macro Symbols","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as macro symbols when they are sent to a downstream component."}},{"_key":"CWE-153","_id":"cwe/CWE-153","_rev":"_jHZO_-m-_J","original_id":"153","datatype":"cwe","name":"Improper Neutralization of Substitution Characters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component."}},{"_key":"CWE-154","_id":"cwe/CWE-154","_rev":"_jHZO_-m-_K","original_id":"154","datatype":"cwe","name":"Improper Neutralization of Variable Name Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected delimiter may cause the process to take unexpected actions that result in an attack. Example: \"$\" for an environment variable.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as variable name delimiters when they are sent to a downstream component."}},{"_key":"CWE-155","_id":"cwe/CWE-155","_rev":"_jHZO_-m-_L","original_id":"155","datatype":"cwe","name":"Improper Neutralization of Wildcards or Matching Symbols","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected element may cause the process to take unexpected actions.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as wildcards or matching symbols when they are sent to a downstream component."}},{"_key":"CWE-156","_id":"cwe/CWE-156","_rev":"_jHZO_-m-_M","original_id":"156","datatype":"cwe","name":"Improper Neutralization of Whitespace","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"This can include space, tab, etc.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component."}},{"_key":"CWE-157","_id":"cwe/CWE-157","_rev":"_jHZO_-m-_N","original_id":"157","datatype":"cwe","name":"Failure to Sanitize Paired Delimiters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not properly handle the characters that are used to mark the beginning and ending of a group of entities, such as parentheses, brackets, and braces."}},{"_key":"CWE-158","_id":"cwe/CWE-158","_rev":"_jHZO_-m-_O","original_id":"158","datatype":"cwe","name":"Improper Neutralization of Null Byte or NUL Character","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, an injected NUL character or null byte may cause the product to believe the input is terminated earlier than it actually is, or otherwise cause the input to be misinterpreted. This could then be used to inject potentially dangerous input that occurs after the null byte or otherwise bypass validation routines and other protection mechanisms.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes NUL characters or null bytes when they are sent to a downstream component."}},{"_key":"CWE-159","_id":"cwe/CWE-159","_rev":"_jHZO_-m-_P","original_id":"159","datatype":"cwe","name":"Improper Handling of Invalid Use of Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly filter, remove, quote, or otherwise manage the invalid use of special elements in user-controlled input, which could cause adverse effect on its behavior and integrity."}},{"_key":"CWE-160","_id":"cwe/CWE-160","_rev":"_jHZO_-m-_Q","original_id":"160","datatype":"cwe","name":"Improper Neutralization of Leading Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, improperly handled leading special elements may cause the process to take unexpected actions that result in an attack.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component."}},{"_key":"CWE-161","_id":"cwe/CWE-161","_rev":"_jHZO_-m-_R","original_id":"161","datatype":"cwe","name":"Improper Neutralization of Multiple Leading Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, improperly handled multiple leading special elements may cause the process to take unexpected actions that result in an attack.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component."}},{"_key":"CWE-162","_id":"cwe/CWE-162","_rev":"_jHZO_-m-_S","original_id":"162","datatype":"cwe","name":"Improper Neutralization of Trailing Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, improperly handled trailing special elements may cause the process to take unexpected actions that result in an attack.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component."}},{"_key":"CWE-163","_id":"cwe/CWE-163","_rev":"_jHZO_-m-_T","original_id":"163","datatype":"cwe","name":"Improper Neutralization of Multiple Trailing Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, improperly handled multiple trailing special elements may cause the process to take unexpected actions that result in an attack.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component."}},{"_key":"CWE-164","_id":"cwe/CWE-164","_rev":"_jHZO_-m-_U","original_id":"164","datatype":"cwe","name":"Improper Neutralization of Internal Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, improperly handled internal special elements may cause the process to take unexpected actions that result in an attack.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component."}},{"_key":"CWE-165","_id":"cwe/CWE-165","_rev":"_jHZO_-m-_V","original_id":"165","datatype":"cwe","name":"Improper Neutralization of Multiple Internal Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"As data is parsed, improperly handled multiple internal special elements may cause the process to take unexpected actions that result in an attack.","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component."}},{"_key":"CWE-166","_id":"cwe/CWE-166","_rev":"_jHZO_-m-_W","original_id":"166","datatype":"cwe","name":"Improper Handling of Missing Special Element","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not handle or incorrectly handles when an expected special element is missing."}},{"_key":"CWE-167","_id":"cwe/CWE-167","_rev":"_jHZO_-m-_X","original_id":"167","datatype":"cwe","name":"Improper Handling of Additional Special Element","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not handle or incorrectly handles when an additional unexpected special element is provided."}},{"_key":"CWE-168","_id":"cwe/CWE-168","_rev":"_jHZO_-m-_Y","original_id":"168","datatype":"cwe","name":"Improper Handling of Inconsistent Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Scope":"Non-Repudiation"}],"description":"An example of this problem would be if paired characters appear in the wrong order, or if the special characters are not properly nested.","likeliehood_of_exploit":"","short_description":"The product does not properly handle input in which an inconsistency exists between two or more special characters or reserved words."}},{"_key":"CWE-170","_id":"cwe/CWE-170","_rev":"_jHZO_-m-_Z","original_id":"170","datatype":"cwe","name":"Improper Null Termination","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"The case of an omitted null character is the most dangerous of the possible issues. This will almost certainly result in information disclosure, and possibly a buffer overflow condition, which may be exploited to execute arbitrary code.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (Memory)","Note":"If a null character is omitted from a string, then most string-copying functions will read data until they locate a null character, even outside of the intended boundaries of the string. This could: cause a crash due to a segmentation fault cause sensitive adjacent memory to be copied and sent to an outsider trigger a buffer overflow when the copy is being written to a fixed-size buffer.","Scope":"Availability"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Misplaced null characters may result in any number of security problems. The biggest issue is a subset of buffer overflow, and write-what-where conditions, where data corruption occurs from the writing of a null character over valid data, or even instructions. A randomly placed null character may put the system into an undefined state, and therefore make it prone to crashing. A misplaced null character may corrupt other data in memory.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Should the null character corrupt the process flow, or affect a flag controlling access, it may lead to logical errors which allow for the execution of arbitrary code.","Scope":"Other"}],"description":"Null termination errors frequently occur in two different ways. An off-by-one error could cause a null to be written out of bounds, leading to an overflow. Or, a program could use a strncpy() function call incorrectly, which prevents a null terminator from being added at all. Other scenarios are possible.","likeliehood_of_exploit":"Medium","short_description":"The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator."}},{"_key":"CWE-172","_id":"cwe/CWE-172","_rev":"_jHZO_-m-_a","original_id":"172","datatype":"cwe","name":"Encoding Error","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly encode or decode the data, resulting in unexpected values."}},{"_key":"CWE-173","_id":"cwe/CWE-173","_rev":"_jHZO_-m-_b","original_id":"173","datatype":"cwe","name":"Improper Handling of Alternate Encoding","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent."}},{"_key":"CWE-174","_id":"cwe/CWE-174","_rev":"_jHZO_-m-_c","original_id":"174","datatype":"cwe","name":"Double Decoding of the Same Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations."}},{"_key":"CWE-175","_id":"cwe/CWE-175","_rev":"_jHZO_-m-_d","original_id":"175","datatype":"cwe","name":"Improper Handling of Mixed Encoding","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when the same input uses several different (mixed) encodings."}},{"_key":"CWE-176","_id":"cwe/CWE-176","_rev":"_jHZO_-m-_e","original_id":"176","datatype":"cwe","name":"Improper Handling of Unicode Encoding","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when an input contains Unicode encoding."}},{"_key":"CWE-177","_id":"cwe/CWE-177","_rev":"_jHZO_-m-_f","original_id":"177","datatype":"cwe","name":"Improper Handling of URL Encoding (Hex Encoding)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when all or part of an input has been URL encoded."}},{"_key":"CWE-178","_id":"cwe/CWE-178","_rev":"_jHZO_-m-_g","original_id":"178","datatype":"cwe","name":"Improper Handling of Case Sensitivity","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results."}},{"_key":"CWE-179","_id":"cwe/CWE-179","_rev":"_jHZO_-m-_h","original_id":"179","datatype":"cwe","name":"Incorrect Behavior Order: Early Validation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could include dangerous input that bypasses validation protection mechanisms which can be used to launch various attacks including injection attacks, execute arbitrary code or cause other unintended behavior.","Scope":"Integrity"}],"description":"Product needs to validate data at the proper time, after data has been canonicalized and cleansed. Early validation is susceptible to various manipulations that result in dangerous inputs that are produced by canonicalization and cleansing.","likeliehood_of_exploit":"","short_description":"The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the modification."}},{"_key":"CWE-180","_id":"cwe/CWE-180","_rev":"_jHZO_-m-_i","original_id":"180","datatype":"cwe","name":"Incorrect Behavior Order: Validate Before Canonicalize","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"This can be used by an attacker to bypass the validation and launch attacks that expose weaknesses that would otherwise be prevented, such as injection.","likeliehood_of_exploit":"","short_description":"The product validates input before it is canonicalized, which prevents the product from detecting data that becomes invalid after the canonicalization step."}},{"_key":"CWE-181","_id":"cwe/CWE-181","_rev":"_jHZO_-m-_j","original_id":"181","datatype":"cwe","name":"Incorrect Behavior Order: Validate Before Filter","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"This can be used by an attacker to bypass the validation and launch attacks that expose weaknesses that would otherwise be prevented, such as injection.","likeliehood_of_exploit":"","short_description":"The product validates data before it has been filtered, which prevents the product from detecting data that becomes invalid after the filtering step."}},{"_key":"CWE-182","_id":"cwe/CWE-182","_rev":"_jHZO_-m-_k","original_id":"182","datatype":"cwe","name":"Collapse of Data into Unsafe Value","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product filters data in a way that causes it to be reduced or \"collapsed\" into an unsafe value that violates an expected security property."}},{"_key":"CWE-183","_id":"cwe/CWE-183","_rev":"_jHZO_-m-_l","original_id":"183","datatype":"cwe","name":"Permissive List of Allowed Inputs","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses."}},{"_key":"CWE-184","_id":"cwe/CWE-184","_rev":"_jHZO_-m-_m","original_id":"184","datatype":"cwe","name":"Incomplete List of Disallowed Inputs","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Attackers may be able to find other malicious inputs that were not expected by the developer, allowing them to bypass the intended protection mechanism.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete."}},{"_key":"CWE-185","_id":"cwe/CWE-185","_rev":"_jHZO_-m-_n","original_id":"185","datatype":"cwe","name":"Incorrect Regular Expression","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"When the regular expression is not correctly specified, data might have a different format or type than the rest of the program expects, producing resultant weaknesses or errors.","Scope":"Other"},{"Impact":"Bypass Protection Mechanism","Note":"In PHP, regular expression checks can sometimes be bypassed with a null byte, leading to any number of weaknesses.","Scope":"Access Control"}],"description":"When the regular expression is used in protection mechanisms such as filtering or validation, this may allow an attacker to bypass the intended restrictions on the incoming data.","likeliehood_of_exploit":"","short_description":"The product specifies a regular expression in a way that causes data to be improperly matched or compared."}},{"_key":"CWE-186","_id":"cwe/CWE-186","_rev":"_jHZO_-m-_o","original_id":"186","datatype":"cwe","name":"Overly Restrictive Regular Expression","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"This weakness is not about regular expression complexity. Rather, it is about a regular expression that does not match all values that are intended. Consider the use of a regexp to identify acceptable values or to spot unwanted terms. An overly restrictive regexp misses some potentially security-relevant values leading to either false positives *or* false negatives, depending on how the regexp is being used within the code. Consider the expression /[0-8]/ where the intention was /[0-9]/.  This expression is not \"complex\" but the value \"9\" is not matched when maybe the programmer planned to check for it.","likeliehood_of_exploit":"","short_description":"A regular expression is overly restrictive, which prevents dangerous values from being detected."}},{"_key":"CWE-187","_id":"cwe/CWE-187","_rev":"_jHZO_-m-_p","original_id":"187","datatype":"cwe","name":"Partial String Comparison","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"For example, an attacker might succeed in authentication by providing a small password that matches the associated portion of the larger, correct password.","likeliehood_of_exploit":"","short_description":"The product performs a comparison that only examines a portion of a factor before determining whether there is a match, such as a substring, leading to resultant weaknesses."}},{"_key":"CWE-188","_id":"cwe/CWE-188","_rev":"_jHZO_-m-_q","original_id":"188","datatype":"cwe","name":"Reliance on Data/Memory Layout","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"Can result in unintended modifications or exposure of sensitive memory.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"Low","short_description":"The product makes invalid assumptions about how protocol data or memory is organized at a lower level, resulting in unintended program behavior."}},{"_key":"CWE-190","_id":"cwe/CWE-190","_rev":"_jHZO_-m-_r","original_id":"190","datatype":"cwe","name":"Integer Overflow or Wraparound","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Instability","Note":"This weakness can generally lead to undefined behavior and therefore crashes. When the calculated result is used for resource allocation, this weakness can cause too many (or too few) resources to be allocated, possibly enabling crashes if the product requests more resources than can be provided.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If the value in question is important to data (as opposed to flow), simple data corruption has occurred. Also, if the overflow/wraparound results in other conditions such as buffer overflows, further memory corruption may occur. ","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"This weakness can sometimes trigger buffer overflows, which can be used to execute arbitrary code. This is usually outside the scope of the product's implicit security policy.","Scope":"Access Control"},{"Impact":"DoS: Resource Consumption (CPU)","Note":"If the overflow/wraparound occurs in a loop index variable, this could cause the loop to terminate at the wrong time - too early, too late, or not at all (i.e., infinite loops). With too many iterations, some loops could consume too many resources such as memory, file handles, etc., possibly leading to a crash or other DoS.","Scope":"Other"},{"Impact":"Bypass Protection Mechanism","Note":"If integer values are used in security-critical decisions, such as calculating quotas or allocation limits, integer overflows can be used to cause an incorrect security decision.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original value. This occurs when an integer value is\n         incremented to a value that is too large to store in the\n         associated representation. When this occurs, the value may\n         become a very small or negative number."}},{"_key":"CWE-191","_id":"cwe/CWE-191","_rev":"_jHZO_-m-_s","original_id":"191","datatype":"cwe","name":"Integer Underflow (Wrap or Wraparound)","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Instability","Note":"This weakness will generally lead to undefined behavior and therefore crashes. In the case of overflows involving loop index variables, the likelihood of infinite loops is also high.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If the value in question is important to data (as opposed to flow), simple data corruption has occurred. Also, if the wrap around results in other conditions such as buffer overflows, further memory corruption may occur.","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"This weakness can sometimes trigger buffer overflows which can be used to execute arbitrary code. This is usually outside the scope of a program's implicit security policy.","Scope":"Access Control"}],"description":"This can happen in signed and unsigned cases.","likeliehood_of_exploit":"","short_description":"The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result."}},{"_key":"CWE-192","_id":"cwe/CWE-192","_rev":"_jHZO_-m-_t","original_id":"192","datatype":"cwe","name":"Integer Coercion Error","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"Integer coercion often leads to undefined states of execution resulting in infinite loops or crashes.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"In some cases, integer coercion errors can lead to exploitable buffer overflow conditions, resulting in the execution of arbitrary code.","Scope":"Availability"},{"Impact":"Other","Note":"Integer coercion errors result in an incorrect value being stored for the variable in question.","Scope":"Other"}],"description":"Several flaws fall under the category of integer coercion errors. For the most part, these errors in and of themselves result only in availability and data integrity issues. However, in some circumstances, they may result in other, more complicated security related flaws, such as buffer overflow conditions.","likeliehood_of_exploit":"Medium","short_description":"Integer coercion refers to a set of flaws pertaining to the type casting, extension, or truncation of primitive data types."}},{"_key":"CWE-193","_id":"cwe/CWE-193","_rev":"_jHZO_-m-_u","original_id":"193","datatype":"cwe","name":"Off-by-one Error","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Instability","Note":"This weakness will generally lead to undefined behavior and therefore crashes. In the case of overflows involving loop index variables, the likelihood of infinite loops is also high.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If the value in question is important to data (as opposed to flow), simple data corruption has occurred. Also, if the wrap around results in other conditions such as buffer overflows, further memory corruption may occur.","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"This weakness can sometimes trigger buffer overflows which can be used to execute arbitrary code. This is usually outside the scope of a program's implicit security policy.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value."}},{"_key":"CWE-194","_id":"cwe/CWE-194","_rev":"_jHZO_-m-_v","original_id":"194","datatype":"cwe","name":"Unexpected Sign Extension","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"When an unexpected sign extension occurs in code that operates directly on memory buffers, such as a size value or a memory index, then it could cause the program to write or read outside the boundaries of the intended buffer. If the numeric value is associated with an application-level resource, such as a quantity or price for a product in an e-commerce site, then the sign extension could produce a value that is much higher (or lower) than the application's allowable range.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses."}},{"_key":"CWE-195","_id":"cwe/CWE-195","_rev":"_jHZO_-m-_w","original_id":"195","datatype":"cwe","name":"Signed to Unsigned Conversion Error","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"Conversion between signed and unsigned values can lead to a variety of errors, but from a security standpoint is most commonly associated with integer overflow and buffer overflow vulnerabilities.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive."}},{"_key":"CWE-196","_id":"cwe/CWE-196","_rev":"_jHZO_-m-_x","original_id":"196","datatype":"cwe","name":"Unsigned to Signed Conversion Error","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"Incorrect sign conversions generally lead to undefined behavior, and therefore crashes.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If a poor cast lead to a buffer overflow or similar condition, data integrity may be affected.","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"Improper signed-to-unsigned conversions without proper checking can sometimes trigger buffer overflows which can be used to execute arbitrary code. This is usually outside the scope of a program's implicit security policy.","Scope":"Access Control"}],"description":"Although less frequent an issue than signed-to-unsigned conversion, unsigned-to-signed conversion can be the perfect precursor to dangerous buffer underwrite conditions that allow attackers to move down the stack where they otherwise might not have access in a normal buffer overflow condition. Buffer underwrites occur frequently when large unsigned values are cast to signed values, and then used as indexes into a buffer or for pointer arithmetic.","likeliehood_of_exploit":"Medium","short_description":"The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive."}},{"_key":"CWE-197","_id":"cwe/CWE-197","_rev":"_jHZO_-m-_y","original_id":"197","datatype":"cwe","name":"Numeric Truncation Error","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"The true value of the data is lost and corrupted data is used.","Scope":"Integrity"}],"description":"When a primitive is cast to a smaller primitive, the high order bits of the large value are lost in the conversion, potentially resulting in an unexpected value that is not equal to the original value. This value may be required as an index into a buffer, a loop iterator, or simply necessary state data. In any case, the value cannot be trusted and the system will be in an undefined state. While this method may be employed viably to isolate the low bits of a value, this usage is rare, and truncation usually implies that an implementation error has occurred.","likeliehood_of_exploit":"Low","short_description":"Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion."}},{"_key":"CWE-198","_id":"cwe/CWE-198","_rev":"_jHZO_-m-_z","original_id":"198","datatype":"cwe","name":"Use of Incorrect Byte Ordering","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not account for byte ordering (e.g. big-endian and little-endian) when processing the input, causing an incorrect number or value to be used."}},{"_key":"CWE-20","_id":"cwe/CWE-20","_rev":"_jHZO_-m-_0","original_id":"20","datatype":"cwe","name":"Improper Input Validation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"An attacker could provide unexpected values and cause a program crash or excessive consumption of resources, such as memory and CPU.","Scope":"Availability"},{"Impact":"Read Files or Directories","Note":"An attacker could read confidential data if they are able to control resource references.","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could use malicious input to modify data or possibly alter control flow in unexpected ways, including arbitrary command execution.","Scope":"Availability"}],"description":"\n\t   ","likeliehood_of_exploit":"High","short_description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}},{"_key":"CWE-200","_id":"cwe/CWE-200","_rev":"_jHZO_-m-_1","original_id":"200","datatype":"cwe","name":"Exposure of Sensitive Information to an Unauthorized Actor","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n\t   ","likeliehood_of_exploit":"High","short_description":"The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."}},{"_key":"CWE-201","_id":"cwe/CWE-201","_rev":"_jHZO_-m-_2","original_id":"201","datatype":"cwe","name":"Insertion of Sensitive Information Into Sent Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Sensitive data may be exposed to attackers.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor."}},{"_key":"CWE-202","_id":"cwe/CWE-202","_rev":"_jHZO_-m-_3","original_id":"202","datatype":"cwe","name":"Exposure of Sensitive Information Through Data Queries","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Sensitive information may possibly be leaked through data queries accidentally.","Scope":"Confidentiality"}],"description":"In situations where data should not be tied to individual users, but a large number of users should be able to make queries that \"scrub\" the identity of users, it may be possible to get information about a user -- e.g., by specifying search terms that are known to be unique to that user.","likeliehood_of_exploit":"Medium","short_description":"When trying to keep information confidential, an attacker can often infer some of the information by using statistics."}},{"_key":"CWE-203","_id":"cwe/CWE-203","_rev":"_jHZO_-m-_4","original_id":"203","datatype":"cwe","name":"Observable Discrepancy","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"An attacker can gain access to sensitive information about the system, including authentication information that may allow an attacker to gain access to the system.","Scope":"Access Control"},{"Impact":"Read Application Data","Note":"When cryptographic primitives are vulnerable to side-channel-attacks, this could be used to reveal unencrypted plaintext in the worst case.","Scope":"Confidentiality"}],"description":"Discrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an unauthorized actor. In some cases, discrepancies can be used by attackers to form a side channel.","likeliehood_of_exploit":"","short_description":"The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not."}},{"_key":"CWE-204","_id":"cwe/CWE-204","_rev":"_jHZO_-m-_5","original_id":"204","datatype":"cwe","name":"Observable Response Discrepancy","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"This issue frequently occurs during authentication, where a difference in failed-login messages could allow an attacker to determine if the username is valid or not. These exposures can be inadvertent (bug) or intentional (design).","likeliehood_of_exploit":"","short_description":"The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere."}},{"_key":"CWE-205","_id":"cwe/CWE-205","_rev":"_jHZO_-m-_6","original_id":"205","datatype":"cwe","name":"Observable Behavioral Discrepancy","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t   Ideally, a product should provide as little information about its internal operations as possible.  Otherwise, attackers could use knowledge of these internal operations to simplify or optimize their attack.  In some cases, behavioral discrepancies can be used by attackers to form a side channel.","likeliehood_of_exploit":"","short_description":"The product's behaviors indicate important differences that may be observed by unauthorized actors in a way that reveals (1) its internal state or decision process, or (2) differences from other products with equivalent functionality."}},{"_key":"CWE-206","_id":"cwe/CWE-206","_rev":"_jHZO_-m-_7","original_id":"206","datatype":"cwe","name":"Observable Internal Behavioral Discrepancy","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t   Ideally, a product should provide as little information as possible to an attacker.  Any hints that the attacker may be making progress can then be used to simplify or optimize the attack.  For example, in a login procedure that requires a username and password, ultimately there is only one decision: success or failure.  However, internally, two separate actions are performed: determining if the username exists, and checking if the password is correct.  If the product behaves differently based on whether the username exists or not, then the attacker only needs to concentrate on the password.\n\t ","likeliehood_of_exploit":"","short_description":"The product performs multiple behaviors that are combined to produce a single result, but the individual behaviors are observable separately in a way that allows attackers to reveal internal state or internal decision points."}},{"_key":"CWE-207","_id":"cwe/CWE-207","_rev":"_jHZO_-m-_8","original_id":"207","datatype":"cwe","name":"Observable Behavioral Discrepancy With Equivalent Products","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t   For many kinds of products, multiple products may be available that perform the same functionality, such as a web server, network interface, or intrusion detection system.  Attackers often perform \"fingerprinting,\" which uses discrepancies in order to identify which specific product is in use.  Once the specific product has been identified, the attacks can be made more customized and efficient.  Often, an organization might intentionally allow the specific product to be identifiable.  However, in some environments, the ability to identify a distinct product is unacceptable, and it is expected that every product would behave in exactly the same way.  In these more restricted environments, a behavioral difference might pose an unacceptable risk if it makes it easier to identify the product's vendor, model, configuration, version, etc.\n\t ","likeliehood_of_exploit":"","short_description":"The product operates in an environment in which its existence or specific identity should not be known, but it behaves differently than other products with equivalent functionality, in a way that is observable to an attacker."}},{"_key":"CWE-208","_id":"cwe/CWE-208","_rev":"_jHZO_-m-_9","original_id":"208","datatype":"cwe","name":"Observable Timing Discrepancy","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t   In security-relevant contexts, even small variations in timing can be exploited by attackers to indirectly infer certain details about the product's internal operations.  For example, in some cryptographic algorithms, attackers can use timing differences to infer certain properties about a private key, making the key easier to guess.  Timing discrepancies effectively form a timing side channel.\n\t ","likeliehood_of_exploit":"","short_description":"Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not."}},{"_key":"CWE-209","_id":"cwe/CWE-209","_rev":"_jHZO_-m-A-","original_id":"209","datatype":"cwe","name":"Generation of Error Message Containing Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Often this will either reveal sensitive information which may be used for a later attack or private information stored in the server.","Scope":"Confidentiality"}],"description":null,"likeliehood_of_exploit":"High","short_description":"The product generates an error message that includes sensitive information about its environment, users, or associated data."}},{"_key":"CWE-210","_id":"cwe/CWE-210","_rev":"_jHZO_-m-A_","original_id":"210","datatype":"cwe","name":"Self-generated Error Message Containing Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information."}},{"_key":"CWE-211","_id":"cwe/CWE-211","_rev":"_jHZO_-m-AA","original_id":"211","datatype":"cwe","name":"Externally-Generated Error Message Containing Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information."}},{"_key":"CWE-212","_id":"cwe/CWE-212","_rev":"_jHZO_-m-AB","original_id":"212","datatype":"cwe","name":"Improper Removal of Sensitive Information Before Storage or Transfer","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Sensitive data may be exposed to an unauthorized actor in another control sphere. This may have a wide range of secondary consequences which will depend on what data is exposed. One possibility is the exposure of system data allowing an attacker to craft a specific, more effective attack.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors."}},{"_key":"CWE-213","_id":"cwe/CWE-213","_rev":"_jHZO_-m-AC","original_id":"213","datatype":"cwe","name":"Exposure of Sensitive Information Due to Incompatible Policies","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed."}},{"_key":"CWE-214","_id":"cwe/CWE-214","_rev":"_jHZO_-m-AD","original_id":"214","datatype":"cwe","name":"Invocation of Process Using Visible Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"Many operating systems allow a user to list information about processes that are owned by other users. Other users could see information such as command line arguments or environment variable settings. When this data contains sensitive information such as credentials, it might allow other users to launch an attack against the product or related resources.","likeliehood_of_exploit":"","short_description":"A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system."}},{"_key":"CWE-215","_id":"cwe/CWE-215","_rev":"_jHZO_-m-AE","original_id":"215","datatype":"cwe","name":"Insertion of Sensitive Information Into Debugging Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"When debugging, it may be necessary to report detailed information to the programmer.  However, if the debugging code is not disabled when the product is operating in a production environment, then this sensitive information may be exposed to attackers.\n\t ","likeliehood_of_exploit":"","short_description":"The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production."}},{"_key":"CWE-219","_id":"cwe/CWE-219","_rev":"_jHZO_-m-AF","original_id":"219","datatype":"cwe","name":"Storage of File with Sensitive Data Under Web Root","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n\t   Besides public-facing web pages and code, products may store sensitive data, code that is not directly invoked, or other files under the web document root of the web server.  If the server is not configured or otherwise used to prevent direct access to those files, then attackers may obtain this sensitive data.\n\t ","likeliehood_of_exploit":"","short_description":"The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties."}},{"_key":"CWE-22","_id":"cwe/CWE-22","_rev":"_jHZO_-m-AG","original_id":"22","datatype":"cwe","name":"Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.","Scope":"Availability"},{"Impact":"Modify Files or Directories","Note":"The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication.","Scope":"Integrity"},{"Impact":"Read Files or Directories","Note":"The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the product from working at all and in the case of protection mechanisms such as authentication, it has the potential to lock out product users.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."}},{"_key":"CWE-220","_id":"cwe/CWE-220","_rev":"_jHZO_-m-AH","original_id":"220","datatype":"cwe","name":"Storage of File With Sensitive Data Under FTP Root","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties."}},{"_key":"CWE-221","_id":"cwe/CWE-221","_rev":"_jHZO_-m-AI","original_id":"221","datatype":"cwe","name":"Information Loss or Omission","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Scope":"Non-Repudiation"}],"description":"This can be resultant, e.g. a buffer overflow might trigger a crash before the product can log the event.","likeliehood_of_exploit":"","short_description":"The product does not record, or improperly records, security-relevant information that leads to an incorrect decision or hampers later analysis."}},{"_key":"CWE-222","_id":"cwe/CWE-222","_rev":"_jHZO_-m-AJ","original_id":"222","datatype":"cwe","name":"Truncation of Security-relevant Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Note":"The source of an attack will be difficult or impossible to determine. This can allow attacks to the system to continue without notice.","Scope":"Non-Repudiation"}],"description":"","likeliehood_of_exploit":"","short_description":"The product truncates the display, recording, or processing of security-relevant information in a way that can obscure the source or nature of an attack."}},{"_key":"CWE-223","_id":"cwe/CWE-223","_rev":"_jHZO_-m-AK","original_id":"223","datatype":"cwe","name":"Omission of Security-relevant Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Note":"The source of an attack will be difficult or impossible to determine. This can allow attacks to the system to continue without notice.","Scope":"Non-Repudiation"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe."}},{"_key":"CWE-224","_id":"cwe/CWE-224","_rev":"_jHZO_-m-AL","original_id":"224","datatype":"cwe","name":"Obscured Security-relevant Information by Alternate Name","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product records security-relevant information according to an alternate name of the affected entity, instead of the canonical name."}},{"_key":"CWE-226","_id":"cwe/CWE-226","_rev":"_jHZO_-m-AM","original_id":"226","datatype":"cwe","name":"Sensitive Information in Resource Not Removed Before Reuse","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n\t\t\t ","likeliehood_of_exploit":"","short_description":"The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities."}},{"_key":"CWE-228","_id":"cwe/CWE-228","_rev":"_jHZO_-m-AN","original_id":"228","datatype":"cwe","name":"Improper Handling of Syntactically Invalid Structure","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Note":"If an input is syntactically invalid, then processing the input could place the system in an unexpected state that could lead to a crash, consume available system resources or other unintended behaviors.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification."}},{"_key":"CWE-229","_id":"cwe/CWE-229","_rev":"_jHZO_-m-AO","original_id":"229","datatype":"cwe","name":"Improper Handling of Values","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined."}},{"_key":"CWE-23","_id":"cwe/CWE-23","_rev":"_jHZO_-m-AP","original_id":"23","datatype":"cwe","name":"Relative Path Traversal","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.","Scope":"Availability"},{"Impact":"Modify Files or Directories","Note":"The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication.","Scope":"Integrity"},{"Impact":"Read Files or Directories","Note":"The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the product from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the product.","Scope":"Availability"}],"description":"This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory."}},{"_key":"CWE-230","_id":"cwe/CWE-230","_rev":"_jHZO_-m-AQ","original_id":"230","datatype":"cwe","name":"Improper Handling of Missing Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when a parameter, field, or argument name is specified, but the associated value is missing, i.e. it is empty, blank, or null."}},{"_key":"CWE-231","_id":"cwe/CWE-231","_rev":"_jHZO_-m-AR","original_id":"231","datatype":"cwe","name":"Improper Handling of Extra Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when more values are provided than expected."}},{"_key":"CWE-232","_id":"cwe/CWE-232","_rev":"_jHZO_-m-AS","original_id":"232","datatype":"cwe","name":"Improper Handling of Undefined Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when a value is not defined or supported for the associated parameter, field, or argument name."}},{"_key":"CWE-233","_id":"cwe/CWE-233","_rev":"_jHZO_-m-AT","original_id":"233","datatype":"cwe","name":"Improper Handling of Parameters","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when the expected number of parameters, fields, or arguments is not provided in input, or if those parameters are undefined."}},{"_key":"CWE-234","_id":"cwe/CWE-234","_rev":"_jHZO_-m-AU","original_id":"234","datatype":"cwe","name":"Failure to Handle Missing Parameter","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"There is the potential for arbitrary code execution with privileges of the vulnerable program if function parameter list is exhausted.","Scope":"Access Control"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Potentially a program could fail if it needs more arguments then are available.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"High","short_description":"If too few arguments are sent to a function, the function will still pop the expected number of arguments from the stack. Potentially, a variable number of arguments could be exhausted in a function as well."}},{"_key":"CWE-235","_id":"cwe/CWE-235","_rev":"_jHZO_-m-AV","original_id":"235","datatype":"cwe","name":"Improper Handling of Extra Parameters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount."}},{"_key":"CWE-236","_id":"cwe/CWE-236","_rev":"_jHZO_-m-AW","original_id":"236","datatype":"cwe","name":"Improper Handling of Undefined Parameters","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when a particular parameter, field, or argument name is not defined or supported by the product."}},{"_key":"CWE-237","_id":"cwe/CWE-237","_rev":"_jHZO_-m-AX","original_id":"237","datatype":"cwe","name":"Improper Handling of Structural Elements","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles inputs that are related to complex structures."}},{"_key":"CWE-238","_id":"cwe/CWE-238","_rev":"_jHZO_-m-AY","original_id":"238","datatype":"cwe","name":"Improper Handling of Incomplete Structural Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when a particular structural element is not completely specified."}},{"_key":"CWE-239","_id":"cwe/CWE-239","_rev":"_jHZO_-m-AZ","original_id":"239","datatype":"cwe","name":"Failure to Handle Incomplete Element","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly handle when a particular element is not completely specified."}},{"_key":"CWE-24","_id":"cwe/CWE-24","_rev":"_jHZO_-m-Aa","original_id":"24","datatype":"cwe","name":"Path Traversal: '../filedir'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-240","_id":"cwe/CWE-240","_rev":"_jHZO_-m-Ab","original_id":"240","datatype":"cwe","name":"Improper Handling of Inconsistent Structural Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when two or more structural elements should be consistent, but are not."}},{"_key":"CWE-241","_id":"cwe/CWE-241","_rev":"_jHZO_-q---","original_id":"241","datatype":"cwe","name":"Improper Handling of Unexpected Data Type","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when a particular element is not the expected type, e.g. it expects a digit (0-9) but is provided with a letter (A-Z)."}},{"_key":"CWE-242","_id":"cwe/CWE-242","_rev":"_jHZO_-q--_","original_id":"242","datatype":"cwe","name":"Use of Inherently Dangerous Function","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"Certain functions behave in dangerous ways regardless of how they are used. Functions in this category were often implemented without taking security concerns into account. The gets() function is unsafe because it does not perform bounds checking on the size of its input. An attacker can easily send arbitrarily-sized input to gets() and overflow the destination buffer. Similarly, the >> operator is unsafe to use when reading into a statically-allocated character array because it does not perform bounds checking on the size of its input. An attacker can easily send arbitrarily-sized input to the >> operator and overflow the destination buffer.","likeliehood_of_exploit":"High","short_description":"The product calls a function that can never be guaranteed to work safely."}},{"_key":"CWE-243","_id":"cwe/CWE-243","_rev":"_jHZO_-q--A","original_id":"243","datatype":"cwe","name":"Creation of chroot Jail Without Changing Working Directory","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Files or Directories","Scope":"Confidentiality"}],"description":"Improper use of chroot() may allow attackers to escape from the chroot jail. The chroot() function call does not change the process's current working directory, so relative paths may still refer to file system resources outside of the chroot jail after chroot() has been called.","likeliehood_of_exploit":"High","short_description":"The product uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail."}},{"_key":"CWE-244","_id":"cwe/CWE-244","_rev":"_jHZO_-q--B","original_id":"244","datatype":"cwe","name":"Improper Clearing of Heap Memory Before Release ('Heap Inspection')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"Be careful using vfork() and fork() in security sensitive code. The process state will not be cleaned up and will contain traces of data from past use.","Scope":"Other"}],"description":"When sensitive data such as a password or an encryption key is not removed from memory, it could be exposed to an attacker using a \"heap inspection\" attack that reads the sensitive data using memory dumps or other methods. The realloc() function is commonly used to increase the size of a block of allocated memory. This operation often requires copying the contents of the old memory block into a new and larger block. This operation leaves the contents of the original block intact but inaccessible to the program, preventing the program from being able to scrub sensitive data from memory. If an attacker can later examine the contents of a memory dump, the sensitive data could be exposed.","likeliehood_of_exploit":"","short_description":"Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory."}},{"_key":"CWE-245","_id":"cwe/CWE-245","_rev":"_jHZO_-q--C","original_id":"245","datatype":"cwe","name":"J2EE Bad Practices: Direct Management of Connections","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"The J2EE standard forbids the direct management of connections. It requires that applications use the container's resource management facilities to obtain connections to resources. Every major web application container provides pooled database connection management as part of its resource management framework. Duplicating this functionality in an application is difficult and error prone, which is part of the reason it is forbidden under the J2EE standard.","likeliehood_of_exploit":"","short_description":"The J2EE application directly manages connections, instead of using the container's connection management facilities."}},{"_key":"CWE-246","_id":"cwe/CWE-246","_rev":"_jHZO_-q--D","original_id":"246","datatype":"cwe","name":"J2EE Bad Practices: Direct Use of Sockets","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The J2EE application directly uses sockets instead of using framework method calls."}},{"_key":"CWE-248","_id":"cwe/CWE-248","_rev":"_jHZO_-q--E","original_id":"248","datatype":"cwe","name":"Uncaught Exception","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"An uncaught exception could cause the system to be placed in a state that could lead to a crash, exposure of sensitive information or other unintended behaviors.","Scope":"Confidentiality"}],"description":"When an exception is not caught, it may cause the program to crash or expose sensitive information.","likeliehood_of_exploit":"","short_description":"An exception is thrown from a function, but it is not caught."}},{"_key":"CWE-25","_id":"cwe/CWE-25","_rev":"_jHZO_-q--F","original_id":"25","datatype":"cwe","name":"Path Traversal: '/../filedir'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/../\" sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-250","_id":"cwe/CWE-250","_rev":"_jHZO_-q--G","original_id":"250","datatype":"cwe","name":"Execution with Unnecessary Privileges","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"An attacker will be able to gain access to any resources that are allowed by the extra privileges. Common results include executing code, disabling services, and reading restricted data.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses."}},{"_key":"CWE-252","_id":"cwe/CWE-252","_rev":"_jHZO_-q--H","original_id":"252","datatype":"cwe","name":"Unchecked Return Value","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"An unexpected return value could place the system in a state that could lead to a crash or other unintended behaviors.","Scope":"Integrity"}],"description":"Two common programmer assumptions are \"this function call can never fail\" and \"it doesn't matter if this function call fails\". If an attacker can force the function to fail or otherwise return a value that is not expected, then the subsequent program logic could lead to a vulnerability, because the product is not in a state that the programmer assumes. For example, if the program calls a function to drop privileges but does not check the return code to ensure that privileges were successfully dropped, then the program will continue to operate with the higher privileges.","likeliehood_of_exploit":"Low","short_description":"The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions."}},{"_key":"CWE-253","_id":"cwe/CWE-253","_rev":"_jHZO_-q--I","original_id":"253","datatype":"cwe","name":"Incorrect Check of Function Return Value","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"An unexpected return value could place the system in a state that could lead to a crash or other unintended behaviors.","Scope":"Integrity"}],"description":"Important and common functions will return some value about the success of its actions. This will alert the program whether or not to handle any errors caused by that function.","likeliehood_of_exploit":"Low","short_description":"The product incorrectly checks a return value from a function, which prevents it from detecting errors or exceptional conditions."}},{"_key":"CWE-256","_id":"cwe/CWE-256","_rev":"_jHZO_-q--J","original_id":"256","datatype":"cwe","name":"Plaintext Storage of a Password","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"Password management issues occur when a password is stored in plaintext in an application's properties, configuration file, or memory. Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource. In some contexts, even storage of a plaintext password in memory is considered a security risk if the password is not cleared immediately after it is used.","likeliehood_of_exploit":"High","short_description":"Storing a password in plaintext may result in a system compromise."}},{"_key":"CWE-257","_id":"cwe/CWE-257","_rev":"_jHZO_-q--K","original_id":"257","datatype":"cwe","name":"Storing Passwords in a Recoverable Format","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"User's passwords may be revealed.","Scope":"Access Control"},{"Impact":"Gain Privileges or Assume Identity","Note":"Revealed passwords may be reused elsewhere to impersonate the users in question.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts."}},{"_key":"CWE-258","_id":"cwe/CWE-258","_rev":"_jHZO_-q--L","original_id":"258","datatype":"cwe","name":"Empty Password in Configuration File","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"Using an empty string as a password is insecure."}},{"_key":"CWE-259","_id":"cwe/CWE-259","_rev":"_jHZO_-q--M","original_id":"259","datatype":"cwe","name":"Use of Hard-coded Password","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If hard-coded passwords are used, it is almost certain that malicious users will gain access through the account in question.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components."}},{"_key":"CWE-26","_id":"cwe/CWE-26","_rev":"_jHZO_-q--N","original_id":"26","datatype":"cwe","name":"Path Traversal: '/dir/../filename'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"/dir/../filename\" sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-260","_id":"cwe/CWE-260","_rev":"_jHZO_-q--O","original_id":"260","datatype":"cwe","name":"Password in Configuration File","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"This can result in compromise of the system for which the password is used. An attacker could gain access to this file and learn the stored password or worse yet, change the password to one of their choosing.","likeliehood_of_exploit":"","short_description":"The product stores a password in a configuration file that might be accessible to actors who do not know the password."}},{"_key":"CWE-261","_id":"cwe/CWE-261","_rev":"_jHZO_-q--P","original_id":"261","datatype":"cwe","name":"Weak Encoding for Password","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"Password management issues occur when a password is stored in plaintext in an application's properties or configuration file. A programmer can attempt to remedy the password management problem by obscuring the password with an encoding function, such as base 64 encoding, but this effort does not adequately protect the password.","likeliehood_of_exploit":"","short_description":"Obscuring a password with a trivial encoding does not protect the password."}},{"_key":"CWE-262","_id":"cwe/CWE-262","_rev":"_jHZO_-q--Q","original_id":"262","datatype":"cwe","name":"Not Using Password Aging","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"As passwords age, the probability that they are compromised grows.","Scope":"Access Control"}],"description":"\n\t ","likeliehood_of_exploit":"Low","short_description":"The product does not have a mechanism in place for managing password aging."}},{"_key":"CWE-263","_id":"cwe/CWE-263","_rev":"_jHZO_-q--R","original_id":"263","datatype":"cwe","name":"Password Aging with Long Expiration","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"As passwords age, the probability that they are compromised grows.","Scope":"Access Control"}],"description":"\n\t   ","likeliehood_of_exploit":"Low","short_description":"The product supports password aging, but the expiration period is too long."}},{"_key":"CWE-266","_id":"cwe/CWE-266","_rev":"_jHZO_-q--S","original_id":"266","datatype":"cwe","name":"Incorrect Privilege Assignment","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"A user can access restricted functionality and/or sensitive information that may include administrative functionality and user accounts.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor."}},{"_key":"CWE-267","_id":"cwe/CWE-267","_rev":"_jHZO_-q--T","original_id":"267","datatype":"cwe","name":"Privilege Defined With Unsafe Actions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"A user can access restricted functionality and/or sensitive information that may include administrative functionality and user accounts.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity."}},{"_key":"CWE-268","_id":"cwe/CWE-268","_rev":"_jHZO_-q--U","original_id":"268","datatype":"cwe","name":"Privilege Chaining","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"A user can be given or gain access rights of another user. This can give the user unauthorized access to sensitive information including the access information of another user.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination."}},{"_key":"CWE-269","_id":"cwe/CWE-269","_rev":"_jHZO_-q--V","original_id":"269","datatype":"cwe","name":"Improper Privilege Management","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor."}},{"_key":"CWE-27","_id":"cwe/CWE-27","_rev":"_jHZO_-q--W","original_id":"27","datatype":"cwe","name":"Path Traversal: 'dir/../../filename'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal \"../\" sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-270","_id":"cwe/CWE-270","_rev":"_jHZO_-q--X","original_id":"270","datatype":"cwe","name":"Privilege Context Switching Error","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"A user can assume the identity of another user with separate privileges in another context. This will give the user unauthorized access that may allow them to acquire the access information of other users.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control."}},{"_key":"CWE-271","_id":"cwe/CWE-271","_rev":"_jHZO_-q--Y","original_id":"271","datatype":"cwe","name":"Privilege Dropping / Lowering Errors","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If privileges are not dropped, neither are access rights of the user. Often these rights can be prevented from being dropped.","Scope":"Access Control"},{"Impact":"Hide Activities","Note":"If privileges are not dropped, in some cases the system may record actions as the user which is being impersonated rather than the impersonator.","Scope":"Non-Repudiation"}],"description":"In some contexts, a system executing with elevated permissions will hand off a process/file/etc. to another process or user. If the privileges of an entity are not reduced, then elevated privileges are spread throughout a system and possibly to an attacker.","likeliehood_of_exploit":"High","short_description":"The product does not drop privileges before passing control of a resource to an actor that does not have those privileges."}},{"_key":"CWE-272","_id":"cwe/CWE-272","_rev":"_jHZO_-q--Z","original_id":"272","datatype":"cwe","name":"Least Privilege Violation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"An attacker may be able to access resources with the elevated privilege that could not be accessed with the attacker's original privileges. This is particularly likely in conjunction with another flaw, such as a buffer overflow.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed."}},{"_key":"CWE-273","_id":"cwe/CWE-273","_rev":"_jHZO_-q--a","original_id":"273","datatype":"cwe","name":"Improper Check for Dropped Privileges","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If privileges are not dropped, neither are access rights of the user. Often these rights can be prevented from being dropped.","Scope":"Access Control"},{"Impact":"Hide Activities","Note":"If privileges are not dropped, in some cases the system may record actions as the user which is being impersonated rather than the impersonator.","Scope":"Non-Repudiation"}],"description":"If the drop fails, the product will continue to run with the raised privileges, which might provide additional access to unprivileged users.","likeliehood_of_exploit":"Medium","short_description":"The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded."}},{"_key":"CWE-274","_id":"cwe/CWE-274","_rev":"_jHZO_-q--b","original_id":"274","datatype":"cwe","name":"Improper Handling of Insufficient Privileges","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses."}},{"_key":"CWE-276","_id":"cwe/CWE-276","_rev":"_jHZO_-q--c","original_id":"276","datatype":"cwe","name":"Incorrect Default Permissions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"During installation, installed file permissions are set to allow anyone to modify those files."}},{"_key":"CWE-277","_id":"cwe/CWE-277","_rev":"_jHZO_-q--d","original_id":"277","datatype":"cwe","name":"Insecure Inherited Permissions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"A product defines a set of insecure permissions that are inherited by objects that are created by the program."}},{"_key":"CWE-278","_id":"cwe/CWE-278","_rev":"_jHZO_-q--e","original_id":"278","datatype":"cwe","name":"Insecure Preserved Inherited Permissions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement."}},{"_key":"CWE-279","_id":"cwe/CWE-279","_rev":"_jHZO_-q--f","original_id":"279","datatype":"cwe","name":"Incorrect Execution-Assigned Permissions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user."}},{"_key":"CWE-28","_id":"cwe/CWE-28","_rev":"_jHZO_-q--g","original_id":"28","datatype":"cwe","name":"Path Traversal: '..\\filedir'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"..\\\" sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-280","_id":"cwe/CWE-280","_rev":"_jHZO_-q--h","original_id":"280","datatype":"cwe","name":"Improper Handling of Insufficient Permissions or Privileges ","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state."}},{"_key":"CWE-281","_id":"cwe/CWE-281","_rev":"_jHZO_-q--i","original_id":"281","datatype":"cwe","name":"Improper Preservation of Permissions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended."}},{"_key":"CWE-282","_id":"cwe/CWE-282","_rev":"_jHZO_-q--j","original_id":"282","datatype":"cwe","name":"Improper Ownership Management","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource."}},{"_key":"CWE-283","_id":"cwe/CWE-283","_rev":"_jHZO_-q--k","original_id":"283","datatype":"cwe","name":"Unverified Ownership","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could gain unauthorized access to system resources.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly verify that a critical resource is owned by the proper entity."}},{"_key":"CWE-284","_id":"cwe/CWE-284","_rev":"_jHZO_-q--l","original_id":"284","datatype":"cwe","name":"Improper Access Control","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor."}},{"_key":"CWE-285","_id":"cwe/CWE-285","_rev":"_jHZO_-q--m","original_id":"285","datatype":"cwe","name":"Improper Authorization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"An attacker could read sensitive data, either by reading the data directly from a data store that is not properly restricted, or by accessing insufficiently-protected, privileged functionality to read the data.","Scope":"Confidentiality"},{"Impact":"Modify Files or Directories","Note":"An attacker could modify sensitive data, either by writing the data directly to a data store that is not properly restricted, or by accessing insufficiently-protected, privileged functionality to write the data.","Scope":"Integrity"},{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could gain privileges by modifying or reading critical data directly, or by accessing insufficiently-protected, privileged functionality.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action."}},{"_key":"CWE-286","_id":"cwe/CWE-286","_rev":"_jHZO_-q--n","original_id":"286","datatype":"cwe","name":"Incorrect User Management","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"Users can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.","likeliehood_of_exploit":"","short_description":"The product does not properly manage a user within its environment."}},{"_key":"CWE-287","_id":"cwe/CWE-287","_rev":"_jHZO_-q--o","original_id":"287","datatype":"cwe","name":"Improper Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"This weakness can lead to the exposure of resources or functionality to unintended actors, possibly providing attackers with sensitive information or even execute arbitrary code.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct."}},{"_key":"CWE-288","_id":"cwe/CWE-288","_rev":"_jHZO_-q--p","original_id":"288","datatype":"cwe","name":"Authentication Bypass Using an Alternate Path or Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product requires authentication, but the product has an alternate path or channel that does not require authentication."}},{"_key":"CWE-289","_id":"cwe/CWE-289","_rev":"_jHZO_-q--q","original_id":"289","datatype":"cwe","name":"Authentication Bypass by Alternate Name","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor."}},{"_key":"CWE-29","_id":"cwe/CWE-29","_rev":"_jHZO_-q--r","original_id":"29","datatype":"cwe","name":"Path Traversal: '\\..\\filename'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-290","_id":"cwe/CWE-290","_rev":"_jHZO_-q--s","original_id":"290","datatype":"cwe","name":"Authentication Bypass by Spoofing","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"This weakness can allow an attacker to access resources which are not otherwise accessible without proper authentication.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks."}},{"_key":"CWE-291","_id":"cwe/CWE-291","_rev":"_jHZO_-q--t","original_id":"291","datatype":"cwe","name":"Reliance on IP Address for Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"Malicious users can fake authentication information, impersonating any IP address.","Scope":"Non-Repudiation"}],"description":"IP addresses can be easily spoofed. Attackers can forge the source IP address of the packets they send, but response packets will return to the forged IP address. To see the response packets, the attacker has to sniff the traffic between the victim machine and the forged IP address. In order to accomplish the required sniffing, attackers typically attempt to locate themselves on the same subnet as the victim machine. Attackers may be able to circumvent this requirement by using source routing, but source routing is disabled across much of the Internet today. In summary, IP address verification can be a useful part of an authentication scheme, but it should not be the single factor required for authentication.","likeliehood_of_exploit":"High","short_description":"The product uses an IP address for authentication."}},{"_key":"CWE-293","_id":"cwe/CWE-293","_rev":"_jHZO_-q--u","original_id":"293","datatype":"cwe","name":"Using Referer Field for Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"Actions, which may not be authorized otherwise, can be carried out as if they were validated by the server referred to.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking."}},{"_key":"CWE-294","_id":"cwe/CWE-294","_rev":"_jHZO_-q--v","original_id":"294","datatype":"cwe","name":"Authentication Bypass by Capture-replay","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"Messages sent with a capture-relay attack allow access to resources which are not otherwise accessible without proper authentication.","Scope":"Access Control"}],"description":"Capture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.","likeliehood_of_exploit":"High","short_description":"A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes)."}},{"_key":"CWE-295","_id":"cwe/CWE-295","_rev":"_jHZO_-q--w","original_id":"295","datatype":"cwe","name":"Improper Certificate Validation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Authentication"}],"description":"When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.","likeliehood_of_exploit":"","short_description":"The product does not validate, or incorrectly validates, a certificate."}},{"_key":"CWE-296","_id":"cwe/CWE-296","_rev":"_jHZO_-q--x","original_id":"296","datatype":"cwe","name":"Improper Following of a Certificate's Chain of Trust","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Note":"Exploitation of this flaw can lead to the trust of data that may have originated with a spoofed source.","Scope":"Non-Repudiation"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Data, requests, or actions taken by the attacking entity can be carried out as a spoofed benign entity.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"Low","short_description":"The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate."}},{"_key":"CWE-297","_id":"cwe/CWE-297","_rev":"_jHZO_-q--y","original_id":"297","datatype":"cwe","name":"Improper Validation of Certificate with Host Mismatch","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"The data read from the system vouched for by the certificate may not be from the expected system.","Scope":"Access Control"},{"Impact":"Other","Note":"Trust afforded to the system in question - based on the malicious certificate - may allow for spoofing or redirection attacks.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host."}},{"_key":"CWE-298","_id":"cwe/CWE-298","_rev":"_jHZO_-q--z","original_id":"298","datatype":"cwe","name":"Improper Validation of Certificate Expiration","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"The data read from the system vouched for by the expired certificate may be flawed due to malicious spoofing.","Scope":"Other"},{"Impact":"Other","Note":"Trust afforded to the system in question - based on the expired certificate - may allow for spoofing attacks.","Scope":"Other"}],"description":"When the expiration of a certificate is not taken into account, no trust has necessarily been conveyed through it. Therefore, the validity of the certificate cannot be verified and all benefit of the certificate is lost.","likeliehood_of_exploit":"Low","short_description":"A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age."}},{"_key":"CWE-299","_id":"cwe/CWE-299","_rev":"_jHZO_-q--0","original_id":"299","datatype":"cwe","name":"Improper Check for Certificate Revocation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"Trust may be assigned to an entity who is not who it claims to be.","Scope":"Access Control"},{"Impact":"Other","Note":"Data from an untrusted (and possibly malicious) source may be integrated.","Scope":"Other"},{"Impact":"Read Application Data","Note":"Data may be disclosed to an entity impersonating a trusted entity, resulting in information disclosure.","Scope":"Confidentiality"}],"description":"An improper check for certificate revocation is a far more serious flaw than related certificate failures. This is because the use of any revoked certificate is almost certainly malicious. The most common reason for certificate revocation is compromise of the system in question, with the result that no legitimate servers will be using a revoked certificate, unless they are sorely out of sync.","likeliehood_of_exploit":"Medium","short_description":"The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised."}},{"_key":"CWE-30","_id":"cwe/CWE-30","_rev":"_jHZO_-q--1","original_id":"30","datatype":"cwe","name":"Path Traversal: '\\dir\\..\\filename'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\dir\\..\\filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-300","_id":"cwe/CWE-300","_rev":"_jHZO_-q--2","original_id":"300","datatype":"cwe","name":"Channel Accessible by Non-Endpoint","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could pose as one of the entities and read or possibly modify the communication.","Scope":"Access Control"}],"description":"In order to establish secure communication between two parties, it is often important to adequately verify the identity of entities at each end of the communication channel. Inadequate or inconsistent verification may result in insufficient or incorrect identification of either communicating entity. This can have negative consequences such as misplaced trust in the entity at the other end of the channel. An attacker can leverage this by interposing between the communicating entities and masquerading as the original entity. In the absence of sufficient verification of identity, such an attacker can eavesdrop and potentially modify the communication between the original entities.","likeliehood_of_exploit":"","short_description":"The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint."}},{"_key":"CWE-301","_id":"cwe/CWE-301","_rev":"_jHZO_-q--3","original_id":"301","datatype":"cwe","name":"Reflection Attack in an Authentication Protocol","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"The primary result of reflection attacks is successful authentication with a target machine -- as an impersonated user.","Scope":"Access Control"}],"description":"\n\t\t   ","likeliehood_of_exploit":"Medium","short_description":"Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user."}},{"_key":"CWE-302","_id":"cwe/CWE-302","_rev":"_jHZO_-q--4","original_id":"302","datatype":"cwe","name":"Authentication Bypass by Assumed-Immutable Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker."}},{"_key":"CWE-303","_id":"cwe/CWE-303","_rev":"_jHZO_-q--5","original_id":"303","datatype":"cwe","name":"Incorrect Implementation of Authentication Algorithm","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"This incorrect implementation may allow authentication to be bypassed.","likeliehood_of_exploit":"","short_description":"The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect."}},{"_key":"CWE-304","_id":"cwe/CWE-304","_rev":"_jHZO_-q--6","original_id":"304","datatype":"cwe","name":"Missing Critical Step in Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"This weakness can lead to the exposure of resources or functionality to unintended actors, possibly providing attackers with sensitive information or allowing attackers to execute arbitrary code.","Scope":"Confidentiality"}],"description":"Authentication techniques should follow the algorithms that define them exactly, otherwise authentication can be bypassed or more easily subjected to brute force attacks.","likeliehood_of_exploit":"","short_description":"The product implements an authentication technique, but it skips a step that weakens the technique."}},{"_key":"CWE-305","_id":"cwe/CWE-305","_rev":"_jHZO_-q--7","original_id":"305","datatype":"cwe","name":"Authentication Bypass by Primary Weakness","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error."}},{"_key":"CWE-306","_id":"cwe/CWE-306","_rev":"_jHZO_-q--8","original_id":"306","datatype":"cwe","name":"Missing Authentication for Critical Function","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"Exposing critical functionality essentially provides an attacker with the privilege level of that functionality. The consequences will depend on the associated functionality, but they can range from reading or modifying sensitive data, accessing administrative or other privileged functionality, or possibly even executing arbitrary code.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources."}},{"_key":"CWE-307","_id":"cwe/CWE-307","_rev":"_jHZO_-q--9","original_id":"307","datatype":"cwe","name":"Improper Restriction of Excessive Authentication Attempts","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account using a brute force attack.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame."}},{"_key":"CWE-308","_id":"cwe/CWE-308","_rev":"_jHZO_-q-_-","original_id":"308","datatype":"cwe","name":"Use of Single-factor Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.","Scope":"Access Control"}],"description":"While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Without the added protection of multiple authentication schemes, a single mistake can result in the compromise of an account. For this reason, if multiple schemes are possible and also easy to use, they should be implemented and required.","likeliehood_of_exploit":"High","short_description":"The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme."}},{"_key":"CWE-309","_id":"cwe/CWE-309","_rev":"_jHZO_-q-__","original_id":"309","datatype":"cwe","name":"Use of Password System for Primary Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"A password authentication mechanism error will almost always result in attackers being authorized as valid users.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism."}},{"_key":"CWE-31","_id":"cwe/CWE-31","_rev":"_jHZO_-q-_A","original_id":"31","datatype":"cwe","name":"Path Traversal: 'dir\\..\\..\\filename'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir\\..\\..\\filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-311","_id":"cwe/CWE-311","_rev":"_jHZO_-q-_B","original_id":"311","datatype":"cwe","name":"Missing Encryption of Sensitive Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"If the application does not use a secure channel, such as SSL, to exchange sensitive information, it is possible for an attacker with access to the network traffic to sniff packets from the connection and uncover the data. This attack is not technically difficult, but does require physical access to some portion of the network over which the sensitive data travels. This access is usually somewhere near where the user is connected to the network (such as a colleague on the company network) but can be anywhere along the path from the user to the end server.","Scope":"Confidentiality"},{"Impact":"Modify Application Data","Note":"Omitting the use of encryption in any program which transfers data over a network of any kind should be considered on par with delivering the data sent to each user on the local networks of both the sender and receiver. Worse, this omission allows for the injection of data into a stream of communication between two parties -- with no means for the victims to separate valid data from invalid. In this day of widespread network attacks and password collection sniffers, it is an unnecessary risk to omit encryption from the design of any system which might benefit from it.","Scope":"Integrity"}],"description":"The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.","likeliehood_of_exploit":"High","short_description":"The product does not encrypt sensitive or critical information before storage or transmission."}},{"_key":"CWE-312","_id":"cwe/CWE-312","_rev":"_jHZO_-q-_C","original_id":"312","datatype":"cwe","name":"Cleartext Storage of Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"An attacker with access to the system could read sensitive information stored in cleartext.","Scope":"Confidentiality"}],"description":"\n\t ","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere."}},{"_key":"CWE-313","_id":"cwe/CWE-313","_rev":"_jHZO_-q-_D","original_id":"313","datatype":"cwe","name":"Cleartext Storage in a File or on Disk","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"The sensitive information could be read by attackers with access to the file, or with physical or administrator access to the raw disk. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in cleartext in a file, or on disk."}},{"_key":"CWE-314","_id":"cwe/CWE-314","_rev":"_jHZO_-q-_E","original_id":"314","datatype":"cwe","name":"Cleartext Storage in the Registry","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"Attackers can read the information by accessing the registry key. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in cleartext in the registry."}},{"_key":"CWE-315","_id":"cwe/CWE-315","_rev":"_jHZO_-q-_F","original_id":"315","datatype":"cwe","name":"Cleartext Storage of Sensitive Information in a Cookie","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"Attackers can use widely-available tools to view the cookie and read the sensitive information. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in cleartext in a cookie."}},{"_key":"CWE-316","_id":"cwe/CWE-316","_rev":"_jHZO_-q-_G","original_id":"316","datatype":"cwe","name":"Cleartext Storage of Sensitive Information in Memory","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Memory","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in cleartext in memory."}},{"_key":"CWE-317","_id":"cwe/CWE-317","_rev":"_jHZO_-q-_H","original_id":"317","datatype":"cwe","name":"Cleartext Storage of Sensitive Information in GUI","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"An attacker can often obtain data from a GUI, even if hidden, by using an API to directly access GUI objects such as windows and menus. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in cleartext within the GUI."}},{"_key":"CWE-318","_id":"cwe/CWE-318","_rev":"_jHZO_-q-_I","original_id":"318","datatype":"cwe","name":"Cleartext Storage of Sensitive Information in Executable","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"Attackers can reverse engineer binary code to obtain secret data. This is especially easy when the cleartext is plain ASCII. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in cleartext in an executable."}},{"_key":"CWE-319","_id":"cwe/CWE-319","_rev":"_jHZO_-q-_J","original_id":"319","datatype":"cwe","name":"Cleartext Transmission of Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Note":"Anyone can read the information by gaining access to the channel being used for communication.","Scope":"Confidentiality"}],"description":"\n\t ","likeliehood_of_exploit":"High","short_description":"The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors."}},{"_key":"CWE-32","_id":"cwe/CWE-32","_rev":"_jHZO_-q-_K","original_id":"32","datatype":"cwe","name":"Path Traversal: '...' (Triple Dot)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-321","_id":"cwe/CWE-321","_rev":"_jHZO_-q-_L","original_id":"321","datatype":"cwe","name":"Use of Hard-coded Cryptographic Key","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If hard-coded cryptographic keys are used, it is almost certain that malicious users will gain access through the account in question.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered."}},{"_key":"CWE-322","_id":"cwe/CWE-322","_rev":"_jHZO_-q-_M","original_id":"322","datatype":"cwe","name":"Key Exchange without Entity Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"No authentication takes place in this process, bypassing an assumed protection of encryption.","Scope":"Access Control"},{"Impact":"Read Application Data","Note":"The encrypted communication between a user and a trusted host may be subject to sniffing by any actor in the communication path.","Scope":"Confidentiality"}],"description":"Performing a key exchange will preserve the integrity of the information sent between two entities, but this will not guarantee that the entities are who they claim they are. This may enable an attacker to impersonate an actor by modifying traffic between the two entities.  Typically, this involves a victim client that contacts a malicious server that is impersonating a trusted server. If the client skips authentication or ignores an authentication failure, the malicious server may request authentication information from the user. The malicious server can then use this authentication information to log in to the trusted server using the victim's credentials, sniff traffic between the victim and trusted server, etc.","likeliehood_of_exploit":"High","short_description":"The product performs a key exchange with an actor without verifying the identity of that actor."}},{"_key":"CWE-323","_id":"cwe/CWE-323","_rev":"_jHZO_-q-_N","original_id":"323","datatype":"cwe","name":"Reusing a Nonce, Key Pair in Encryption","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"Potentially a replay attack, in which an attacker could send the same data twice, could be crafted if nonces are allowed to be reused. This could allow a user to send a message which masquerades as a valid message from a valid user.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"High","short_description":"Nonces should be used for the present occasion and only once."}},{"_key":"CWE-324","_id":"cwe/CWE-324","_rev":"_jHZO_-q-_O","original_id":"324","datatype":"cwe","name":"Use of a Key Past its Expiration Date","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"The cryptographic key in question may be compromised, providing a malicious user with a method for authenticating as the victim.","Scope":"Access Control"}],"description":"While the expiration of keys does not necessarily ensure that they are compromised, it is a significant concern that keys which remain in use for prolonged periods of time have a decreasing probability of integrity. For this reason, it is important to replace keys within a period of time proportional to their strength.","likeliehood_of_exploit":"Low","short_description":"The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key."}},{"_key":"CWE-325","_id":"cwe/CWE-325","_rev":"_jHZO_-q-_P","original_id":"325","datatype":"cwe","name":"Missing Cryptographic Step","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"},{"Impact":"Modify Application Data","Scope":"Integrity"},{"Impact":"Hide Activities","Scope":"Non-Repudiation"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm."}},{"_key":"CWE-326","_id":"cwe/CWE-326","_rev":"_jHZO_-q-_Q","original_id":"326","datatype":"cwe","name":"Inadequate Encryption Strength","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"An attacker may be able to decrypt the data using brute force attacks.","Scope":"Confidentiality"}],"description":"A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.","likeliehood_of_exploit":"","short_description":"The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required."}},{"_key":"CWE-327","_id":"cwe/CWE-327","_rev":"_jHZO_-q-_R","original_id":"327","datatype":"cwe","name":"Use of a Broken or Risky Cryptographic Algorithm","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"The confidentiality of sensitive data may be compromised by the use of a broken or risky cryptographic algorithm.","Scope":"Confidentiality"},{"Impact":"Modify Application Data","Note":"The integrity of sensitive data may be compromised by the use of a broken or risky cryptographic algorithm.","Scope":"Integrity"},{"Impact":"Hide Activities","Note":"If the cryptographic algorithm is used to ensure the identity of the source of the data (such as digital signatures), then a broken algorithm will compromise this scheme and the source of the data cannot be proven.","Scope":"Non-Repudiation"}],"description":"\n\t   ","likeliehood_of_exploit":"High","short_description":"The product uses a broken or risky cryptographic algorithm or protocol."}},{"_key":"CWE-328","_id":"cwe/CWE-328","_rev":"_jHZO_-q-_S","original_id":"328","datatype":"cwe","name":"Use of Weak Hash","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack)."}},{"_key":"CWE-329","_id":"cwe/CWE-329","_rev":"_jHZO_-q-_T","original_id":"329","datatype":"cwe","name":"Generation of Predictable IV with CBC Mode","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"If the IV is not properly initialized, data that is encrypted can be compromised and leak information.","Scope":"Confidentiality"}],"description":"\n\t   ","likeliehood_of_exploit":"Medium","short_description":"The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key."}},{"_key":"CWE-33","_id":"cwe/CWE-33","_rev":"_jHZO_-q-_U","original_id":"33","datatype":"cwe","name":"Path Traversal: '....' (Multiple Dot)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-330","_id":"cwe/CWE-330","_rev":"_jHZO_-q-_V","original_id":"330","datatype":"cwe","name":"Use of Insufficiently Random Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"When a protection mechanism relies on random values to restrict access to a sensitive resource, such as a session ID or a seed for generating a cryptographic key, then the resource being protected could be accessed by guessing the ID or key.","Scope":"Other"},{"Impact":"Other","Note":"If product relies on unique, unguessable IDs to identify a resource, an attacker might be able to guess an ID for a resource that is owned by another user. The attacker could then read the resource, or pre-create a resource with the same ID to prevent the legitimate program from properly sending the resource to the intended user. For example, a product might maintain session information in a file whose name is based on a username. An attacker could pre-create this file for a victim user, then set the permissions so that the application cannot generate the session for the victim, preventing the victim from using the application.","Scope":"Other"},{"Impact":"Gain Privileges or Assume Identity","Note":"When an authorization or authentication mechanism relies on random values to restrict access to restricted functionality, such as a session ID or a seed for generating a cryptographic key, then an attacker may access the restricted functionality by guessing the ID or key.","Scope":"Access Control"}],"description":"When product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.","likeliehood_of_exploit":"High","short_description":"The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers."}},{"_key":"CWE-331","_id":"cwe/CWE-331","_rev":"_jHZO_-q-_W","original_id":"331","datatype":"cwe","name":"Insufficient Entropy","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"An attacker could guess the random numbers generated and could gain unauthorized access to a system if the random numbers are used for authentication and authorization.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others."}},{"_key":"CWE-332","_id":"cwe/CWE-332","_rev":"_jHZO_-q-_X","original_id":"332","datatype":"cwe","name":"Insufficient Entropy in PRNG","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"If a pseudo-random number generator is using a limited entropy source which runs out (if the generator fails closed), the program may pause or crash.","Scope":"Availability"},{"Impact":"Other","Note":"If a PRNG is using a limited entropy source which runs out, and the generator fails open, the generator could produce predictable random numbers. Potentially a weak source of random numbers could weaken the encryption method used for authentication of users.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat."}},{"_key":"CWE-333","_id":"cwe/CWE-333","_rev":"_jHZO_-q-_Y","original_id":"333","datatype":"cwe","name":"Improper Handling of Insufficient Entropy in TRNG","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"A program may crash or block if it runs out of random numbers.","Scope":"Availability"}],"description":"The rate at which true random numbers can be generated is limited. It is important that one uses them only when they are needed for security.","likeliehood_of_exploit":"Low","short_description":"True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block."}},{"_key":"CWE-334","_id":"cwe/CWE-334","_rev":"_jHZO_-q-_Z","original_id":"334","datatype":"cwe","name":"Small Space of Random Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"An attacker could easily guess the values used. This could lead to unauthorized access to a system if the seed is used for authentication and authorization.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks."}},{"_key":"CWE-335","_id":"cwe/CWE-335","_rev":"_jHZO_-q-_a","original_id":"335","datatype":"cwe","name":"Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"If a PRNG is used incorrectly, such as using the same seed for each initialization or using a predictable seed, then an attacker may be able to easily guess the seed and thus the random numbers. This could lead to unauthorized access to a system if the seed is used for authentication and authorization.","Scope":"Other"}],"description":"\n\t\t   ","likeliehood_of_exploit":"","short_description":"The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds."}},{"_key":"CWE-336","_id":"cwe/CWE-336","_rev":"_jHZO_-q-_b","original_id":"336","datatype":"cwe","name":"Same Seed in Pseudo-Random Number Generator (PRNG)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"Given the deterministic nature of PRNGs, using the same seed for each initialization will lead to the same output in the same order. If an attacker can guess (or knows) the seed, then the attacker may be able to determine the random numbers that will be produced from the PRNG.","likeliehood_of_exploit":"","short_description":"A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized."}},{"_key":"CWE-337","_id":"cwe/CWE-337","_rev":"_jHZO_-q-_c","original_id":"337","datatype":"cwe","name":"Predictable Seed in Pseudo-Random Number Generator (PRNG)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"The use of predictable seeds significantly reduces the number of possible seeds that an attacker would need to test in order to predict which random numbers will be generated by the PRNG.","likeliehood_of_exploit":"","short_description":"A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time."}},{"_key":"CWE-338","_id":"cwe/CWE-338","_rev":"_jHZO_-q-_d","original_id":"338","datatype":"cwe","name":"Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"If a PRNG is used for authentication and authorization, such as a session ID or a seed for generating a cryptographic key, then an attacker may be able to easily guess the ID or cryptographic key and gain access to restricted functionality.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong."}},{"_key":"CWE-339","_id":"cwe/CWE-339","_rev":"_jHZO_-q-_e","original_id":"339","datatype":"cwe","name":"Small Seed Space in PRNG","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n\t\t   PRNGs are entirely deterministic once seeded, so it should be extremely difficult to guess the seed. If an attacker can collect the outputs of a PRNG and then brute force the seed by trying every possibility to see which seed matches the observed output, then the attacker will know the output of any subsequent calls to the PRNG. A small seed space implies that the attacker will have far fewer possible values to try to exhaust all possibilities. \n\t\t ","likeliehood_of_exploit":"","short_description":"A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks."}},{"_key":"CWE-34","_id":"cwe/CWE-34","_rev":"_jHZO_-q-_f","original_id":"34","datatype":"cwe","name":"Path Traversal: '....//'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-340","_id":"cwe/CWE-340","_rev":"_jHZO_-q-_g","original_id":"340","datatype":"cwe","name":"Generation of Predictable Numbers or Identifiers","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses a scheme that generates numbers or identifiers that are more predictable than required."}},{"_key":"CWE-341","_id":"cwe/CWE-341","_rev":"_jHZO_-q-_h","original_id":"341","datatype":"cwe","name":"Predictable from Observable State","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"This weakness could be exploited by an attacker in a number ways depending on the context. If a predictable number is used to generate IDs or keys that are used within protection mechanisms, then an attacker could gain unauthorized access to the system. If predictable filenames are used for storing sensitive information, then an attacker might gain access to the system and may be able to gain access to the information in the file.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc."}},{"_key":"CWE-342","_id":"cwe/CWE-342","_rev":"_jHZO_-q-_i","original_id":"342","datatype":"cwe","name":"Predictable Exact Value from Previous Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"An exact value or random number can be precisely predicted by observing previous values."}},{"_key":"CWE-343","_id":"cwe/CWE-343","_rev":"_jHZO_-q-_j","original_id":"343","datatype":"cwe","name":"Predictable Value Range from Previous Values","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"The output of a random number generator should not be predictable based on observations of previous values. In some cases, an attacker cannot predict the exact value that will be produced next, but can narrow down the possibilities significantly. This reduces the amount of effort to perform a brute force attack. For example, suppose the product generates random numbers between 1 and 100, but it always produces a larger value until it reaches 100. If the generator produces an 80, then the attacker knows that the next value will be somewhere between 81 and 100. Instead of 100 possibilities, the attacker only needs to consider 20.","likeliehood_of_exploit":"","short_description":"The product's random number generator produces a series of values which, when observed, can be used to infer a relatively small range of possibilities for the next value that could be generated."}},{"_key":"CWE-344","_id":"cwe/CWE-344","_rev":"_jHZO_-q-_k","original_id":"344","datatype":"cwe","name":"Use of Invariant Value in Dynamically Changing Context","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses a constant value, name, or reference, but this value can (or should) vary across different environments."}},{"_key":"CWE-345","_id":"cwe/CWE-345","_rev":"_jHZO_-q-_l","original_id":"345","datatype":"cwe","name":"Insufficient Verification of Data Authenticity","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data."}},{"_key":"CWE-346","_id":"cwe/CWE-346","_rev":"_jHZO_-q-_m","original_id":"346","datatype":"cwe","name":"Origin Validation Error","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"An attacker can access any functionality that is inadvertently accessible to the source.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly verify that the source of data or communication is valid."}},{"_key":"CWE-347","_id":"cwe/CWE-347","_rev":"_jHZO_-q-_n","original_id":"347","datatype":"cwe","name":"Improper Verification of Cryptographic Signature","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could gain access to sensitive data and possibly execute unauthorized code.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not verify, or incorrectly verifies, the cryptographic signature for data."}},{"_key":"CWE-348","_id":"cwe/CWE-348","_rev":"_jHZO_-q-_o","original_id":"348","datatype":"cwe","name":"Use of Less Trusted Source","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could utilize the untrusted data source to bypass protection mechanisms and gain access to sensitive data.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack."}},{"_key":"CWE-349","_id":"cwe/CWE-349","_rev":"_jHZO_-q-_p","original_id":"349","datatype":"cwe","name":"Acceptance of Extraneous Untrusted Data With Trusted Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could package untrusted data with trusted data to bypass protection mechanisms to gain access to and possibly modify sensitive data.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted."}},{"_key":"CWE-35","_id":"cwe/CWE-35","_rev":"_jHZO_-q-_q","original_id":"35","datatype":"cwe","name":"Path Traversal: '.../...//'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory."}},{"_key":"CWE-350","_id":"cwe/CWE-350","_rev":"_jHZO_-q-_r","original_id":"350","datatype":"cwe","name":"Reliance on Reverse DNS Resolution for a Security-Critical Action","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Malicious users can fake authentication information by providing false DNS information.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname."}},{"_key":"CWE-351","_id":"cwe/CWE-351","_rev":"_jHZO_-q-_s","original_id":"351","datatype":"cwe","name":"Insufficient Type Distinction","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly distinguish between different types of elements in a way that leads to insecure behavior."}},{"_key":"CWE-352","_id":"cwe/CWE-352","_rev":"_jHZO_-q-_t","original_id":"352","datatype":"cwe","name":"Cross-Site Request Forgery (CSRF)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"The consequences will vary depending on the nature of the functionality that is vulnerable to CSRF. An attacker could effectively perform any operations as the victim. If the victim is an administrator or privileged user, the consequences may include obtaining complete control over the web application - deleting or stealing data, uninstalling the product, or using it to launch other attacks against all of the product's users. Because the attacker has the identity of the victim, the scope of CSRF is limited only by the victim's privileges.","Scope":"Access Control"}],"description":"When a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which will be treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc. and can result in exposure of data or unintended code execution.","likeliehood_of_exploit":"Medium","short_description":"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."}},{"_key":"CWE-353","_id":"cwe/CWE-353","_rev":"_jHZO_-q-_u","original_id":"353","datatype":"cwe","name":"Missing Support for Integrity Check","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"Data that is parsed and used may be corrupted.","Scope":"Other"},{"Impact":"Other","Note":"Without a checksum it is impossible to determine if any changes have been made to the data after it was sent.","Scope":"Other"}],"description":"If integrity check values or \"checksums\" are omitted from a protocol, there is no way of determining if data has been corrupted in transmission. The lack of checksum functionality in a protocol removes the first application-level check of data that can be used. The end-to-end philosophy of checks states that integrity checks should be performed at the lowest level that they can be completely implemented. Excluding further sanity checks and input validation performed by applications, the protocol's checksum is the most important level of checksum, since it can be performed more completely than at any previous level and takes into account entire messages, as opposed to single packets.","likeliehood_of_exploit":"Medium","short_description":"The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum."}},{"_key":"CWE-354","_id":"cwe/CWE-354","_rev":"_jHZO_-q-_v","original_id":"354","datatype":"cwe","name":"Improper Validation of Integrity Check Value","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"Integrity checks usually use a secret key that helps authenticate the data origin. Skipping integrity checking generally opens up the possibility that new data from an invalid source can be injected.","Scope":"Other"},{"Impact":"Other","Note":"Data that is parsed and used may be corrupted.","Scope":"Other"},{"Impact":"Other","Note":"Without a checksum check, it is impossible to determine if any changes have been made to the data after it was sent.","Scope":"Other"}],"description":"Improper validation of checksums before use results in an unnecessary risk that can easily be mitigated. The protocol specification describes the algorithm used for calculating the checksum. It is then a simple matter of implementing the calculation and verifying that the calculated checksum and the received checksum match. Improper verification of the calculated checksum and the received checksum can lead to far greater consequences.","likeliehood_of_exploit":"Medium","short_description":"The product does not validate or incorrectly validates the integrity check values or \"checksums\" of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission."}},{"_key":"CWE-356","_id":"cwe/CWE-356","_rev":"_jHZO_-q-_w","original_id":"356","datatype":"cwe","name":"Product UI does not Warn User of Unsafe Actions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Scope":"Non-Repudiation"}],"description":"Product systems should warn users that a potentially dangerous action may occur if the user proceeds. For example, if the user downloads a file from an unknown source and attempts to execute the file on their machine, then the application's GUI can indicate that the file is unsafe.","likeliehood_of_exploit":"","short_description":"The product's user interface does not warn the user before undertaking an unsafe action on behalf of that user. This makes it easier for attackers to trick users into inflicting damage to their system."}},{"_key":"CWE-357","_id":"cwe/CWE-357","_rev":"_jHZO_-q-_x","original_id":"357","datatype":"cwe","name":"Insufficient UI Warning of Dangerous Operations","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Scope":"Non-Repudiation"}],"description":"","likeliehood_of_exploit":"","short_description":"The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention."}},{"_key":"CWE-358","_id":"cwe/CWE-358","_rev":"_jHZO_-q-_y","original_id":"358","datatype":"cwe","name":"Improperly Implemented Security Check for Standard","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique."}},{"_key":"CWE-359","_id":"cwe/CWE-359","_rev":"_jHZO_-q-_z","original_id":"359","datatype":"cwe","name":"Exposure of Private Personal Information to an Unauthorized Actor","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected."}},{"_key":"CWE-36","_id":"cwe/CWE-36","_rev":"_jHZO_-q-_0","original_id":"36","datatype":"cwe","name":"Absolute Path Traversal","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.","Scope":"Availability"},{"Impact":"Modify Files or Directories","Note":"The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication.","Scope":"Integrity"},{"Impact":"Read Files or Directories","Note":"The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the product from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the product.","Scope":"Availability"}],"description":"This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.","likeliehood_of_exploit":"","short_description":"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as \"/abs/path\" that can resolve to a location that is outside of that directory."}},{"_key":"CWE-360","_id":"cwe/CWE-360","_rev":"_jHZO_-q-_1","original_id":"360","datatype":"cwe","name":"Trust of System Event Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"If one trusts the system-event information and executes commands based on it, one could potentially take actions based on a spoofed identity.","Scope":"Access Control"}],"description":"Events are a messaging system which may provide control data to programs listening for events. Events often do not have any type of authentication framework to allow them to be verified from a trusted source. Any application, in Windows, on a given desktop can send a message to any window on the same desktop. There is no authentication framework for these messages. Therefore, any message can be used to manipulate any process on the desktop if the process does not check the validity and safeness of those messages.","likeliehood_of_exploit":"High","short_description":"Security based on event locations are insecure and can be spoofed."}},{"_key":"CWE-362","_id":"cwe/CWE-362","_rev":"_jHZO_-q-_2","original_id":"362","datatype":"cwe","name":"Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"When a race condition makes it possible to bypass a resource cleanup routine or trigger multiple initialization routines, it may lead to resource exhaustion.","Scope":"Availability"},{"Impact":"DoS: Instability","Note":"When a race condition allows multiple control flows to access a resource simultaneously, it might lead the product(s) into unexpected states, possibly resulting in a crash.","Scope":"Availability"},{"Impact":"Read Application Data","Note":"When a race condition is combined with predictable resource names and loose permissions, it may be possible for an attacker to overwrite or access confidential data (CWE-59).","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"This can have security implications when the expected synchronization is in security-critical code, such as recording whether a user is authenticated or modifying important state information that should not be influenced by an outsider.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently."}},{"_key":"CWE-363","_id":"cwe/CWE-363","_rev":"_jHZO_-q-_3","original_id":"363","datatype":"cwe","name":"Race Condition Enabling Link Following","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"While developers might expect that there is a very narrow time window between the time of check and time of use, there is still a race condition. An attacker could cause the product to slow down (e.g. with memory consumption), causing the time window to become larger. Alternately, in some situations, the attacker could win the race by performing a large number of attacks.","likeliehood_of_exploit":"","short_description":"The product checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the product to access the wrong file."}},{"_key":"CWE-364","_id":"cwe/CWE-364","_rev":"_jHZO_-q-_4","original_id":"364","datatype":"cwe","name":"Signal Handler Race Condition","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"It may be possible to cause data corruption and possibly execute arbitrary code by modifying global variables or data structures at unexpected times, violating the assumptions of code that uses this global data.","Scope":"Availability"},{"Impact":"Gain Privileges or Assume Identity","Note":"If a signal handler interrupts code that is executing with privileges, it may be possible that the signal handler will also be executed with elevated privileges, possibly making subsequent exploits more severe.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product uses a signal handler that introduces a race condition."}},{"_key":"CWE-366","_id":"cwe/CWE-366","_rev":"_jHZO_-q-_5","original_id":"366","datatype":"cwe","name":"Race Condition within a Thread","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"The main problem is that -- if a lock is overcome -- data could be altered in a bad state.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined."}},{"_key":"CWE-367","_id":"cwe/CWE-367","_rev":"_jHZO_-q-_6","original_id":"367","datatype":"cwe","name":"Time-of-check Time-of-use (TOCTOU) Race Condition","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Note":"The attacker can gain access to otherwise unauthorized resources.","Scope":"Other"},{"Impact":"Other","Note":"Race conditions such as this kind may be employed to gain read or write access to resources which are not normally readable or writable by the user in question.","Scope":"Other"},{"Impact":"Other","Note":"The resource in question, or other resources (through the corrupted one), may be changed in undesirable ways by a malicious user.","Scope":"Other"},{"Impact":"Hide Activities","Note":"If a file or other resource is written in this method, as opposed to in a valid way, logging of the activity may not occur.","Scope":"Non-Repudiation"},{"Impact":"Other","Note":"In some cases it may be possible to delete files a malicious user might not otherwise have access to, such as log files.","Scope":"Other"}],"description":"This weakness can be security-relevant when an attacker can influence the state of the resource between check and use. This can happen with shared resources such as files, memory, or even variables in multithreaded programs.","likeliehood_of_exploit":"Medium","short_description":"The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state."}},{"_key":"CWE-368","_id":"cwe/CWE-368","_rev":"_jHZO_-q-_7","original_id":"368","datatype":"cwe","name":"Context Switching Race Condition","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"This is commonly seen in web browser vulnerabilities in which the attacker can perform certain actions while the browser is transitioning from a trusted to an untrusted domain, or vice versa, and the browser performs the actions on one domain using the trust level and resources of the other domain.","likeliehood_of_exploit":"","short_description":"A product performs a series of non-atomic actions to switch between contexts that cross privilege or other security boundaries, but a race condition allows an attacker to modify or misrepresent the product's behavior during the switch."}},{"_key":"CWE-369","_id":"cwe/CWE-369","_rev":"_jHZO_-q-_8","original_id":"369","datatype":"cwe","name":"Divide By Zero","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"A Divide by Zero results in a crash.","Scope":"Availability"}],"description":"This weakness typically occurs when an unexpected value is provided to the product, or if an error occurs that is not properly detected. It frequently occurs in calculations involving physical dimensions such as size, length, width, and height.","likeliehood_of_exploit":"Medium","short_description":"The product divides a value by zero."}},{"_key":"CWE-37","_id":"cwe/CWE-37","_rev":"_jHZO_-q-_9","original_id":"37","datatype":"cwe","name":"Path Traversal: '/absolute/pathname/here'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts input in the form of a slash absolute path ('/absolute/pathname/here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-370","_id":"cwe/CWE-370","_rev":"_jHZO_-q-A-","original_id":"370","datatype":"cwe","name":"Missing Check for Certificate Revocation after Initial Check","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"Trust may be assigned to an entity who is not who it claims to be.","Scope":"Access Control"},{"Impact":"Modify Application Data","Note":"Data from an untrusted (and possibly malicious) source may be integrated.","Scope":"Integrity"},{"Impact":"Read Application Data","Note":"Data may be disclosed to an entity impersonating a trusted entity, resulting in information disclosure.","Scope":"Confidentiality"}],"description":"If the revocation status of a certificate is not checked before each action that requires privileges, the system may be subject to a race condition. If a certificate is revoked after the initial check, all subsequent actions taken with the owner of the revoked certificate will lose all benefits guaranteed by the certificate. In fact, it is almost certain that the use of a revoked certificate indicates malicious activity.","likeliehood_of_exploit":"Medium","short_description":"The product does not check the revocation status of a certificate after its initial revocation check, which can cause the product to perform privileged actions even after the certificate is revoked at a later time."}},{"_key":"CWE-372","_id":"cwe/CWE-372","_rev":"_jHZO_-q-A_","original_id":"372","datatype":"cwe","name":"Incomplete Internal State Distinction","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly determine which state it is in, causing it to assume it is in state X when in fact it is in state Y, causing it to perform incorrect operations in a security-relevant manner."}},{"_key":"CWE-374","_id":"cwe/CWE-374","_rev":"_jHZO_-q-AA","original_id":"374","datatype":"cwe","name":"Passing Mutable Objects to an Untrusted Method","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"Potentially data could be tampered with by another function which should not have been tampered with.","Scope":"Integrity"}],"description":"The function or method that has been called can alter or delete the mutable data. This could violate assumptions that the calling function has made about its state. In situations where unknown code is called with references to mutable data, this external code could make changes to the data sent. If this data was not previously cloned, the modified data might not be valid in the context of execution.","likeliehood_of_exploit":"Medium","short_description":"The product sends non-cloned mutable data as an argument to a method or function."}},{"_key":"CWE-375","_id":"cwe/CWE-375","_rev":"_jHZO_-q-AB","original_id":"375","datatype":"cwe","name":"Returning a Mutable Object to an Untrusted Caller","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"Potentially data could be tampered with by another function which should not have been tampered with.","Scope":"Integrity"}],"description":"In situations where functions return references to mutable data, it is possible that the external code which called the function may make changes to the data sent. If this data was not previously cloned, the class will then be using modified data which may violate assumptions about its internal state.","likeliehood_of_exploit":"Medium","short_description":"Sending non-cloned mutable data as a return value may result in that data being altered or deleted by the calling function."}},{"_key":"CWE-377","_id":"cwe/CWE-377","_rev":"_jHZO_-q-AC","original_id":"377","datatype":"cwe","name":"Insecure Temporary File","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"Creating and using insecure temporary files can leave application and system data vulnerable to attack."}},{"_key":"CWE-378","_id":"cwe/CWE-378","_rev":"_jHZO_-q-AD","original_id":"378","datatype":"cwe","name":"Creation of Temporary File With Insecure Permissions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"If the temporary file can be read by the attacker, sensitive information may be in that file which could be revealed.","Scope":"Confidentiality"},{"Impact":"Other","Note":"If that file can be written to by the attacker, the file might be moved into a place to which the attacker does not have access. This will allow the attacker to gain selective resource access-control privileges.","Scope":"Other"},{"Impact":"Other","Note":"Depending on the data stored in the temporary file, there is the potential for an attacker to gain an additional input vector which is trusted as non-malicious. It may be possible to make arbitrary changes to data structures, user information, or even process ownership.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack."}},{"_key":"CWE-379","_id":"cwe/CWE-379","_rev":"_jHZO_-q-AE","original_id":"379","datatype":"cwe","name":"Creation of Temporary File in Directory with Insecure Permissions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Since the file is visible and the application which is using the temp file could be known, the attacker has gained information about what the user is doing at that time.","Scope":"Confidentiality"}],"description":"On some operating systems, the fact that the temporary file exists may be apparent to any user with sufficient privileges to access that directory. Since the file is visible, the application that is using the temporary file could be known. If one has access to list the processes on the system, the attacker has gained information about what the user is doing at that time. By correlating this with the applications the user is running, an attacker could potentially discover what a user's actions are. From this, higher levels of security could be breached.","likeliehood_of_exploit":"Low","short_description":"The product creates a temporary file in a directory whose permissions allow unintended actors to determine the file's existence or otherwise access that file."}},{"_key":"CWE-38","_id":"cwe/CWE-38","_rev":"_jHZO_-q-AF","original_id":"38","datatype":"cwe","name":"Path Traversal: '\\absolute\\pathname\\here'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts input in the form of a backslash absolute path ('\\absolute\\pathname\\here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-382","_id":"cwe/CWE-382","_rev":"_jHZO_-q-AG","original_id":"382","datatype":"cwe","name":"J2EE Bad Practices: Use of System.exit()","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"}],"description":"It is never a good idea for a web application to attempt to shut down the application container. Access to a function that can shut down the application is an avenue for Denial of Service (DoS) attacks.","likeliehood_of_exploit":"","short_description":"A J2EE application uses System.exit(), which also shuts down its container."}},{"_key":"CWE-383","_id":"cwe/CWE-383","_rev":"_jHZO_-q-AH","original_id":"383","datatype":"cwe","name":"J2EE Bad Practices: Direct Use of Threads","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"Thread management in a web application is forbidden by the J2EE standard in some circumstances and is always highly error prone. Managing threads is difficult and is likely to interfere in unpredictable ways with the behavior of the application container. Even without interfering with the container, thread management usually leads to bugs that are hard to detect and diagnose like deadlock, race conditions, and other synchronization errors.","likeliehood_of_exploit":"","short_description":"Thread management in a Web application is forbidden in some circumstances and is always highly error prone."}},{"_key":"CWE-384","_id":"cwe/CWE-384","_rev":"_jHZO_-q-AI","original_id":"384","datatype":"cwe","name":"Session Fixation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions."}},{"_key":"CWE-385","_id":"cwe/CWE-385","_rev":"_jHZO_-q-AJ","original_id":"385","datatype":"cwe","name":"Covert Timing Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"Information exposure.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected information."}},{"_key":"CWE-386","_id":"cwe/CWE-386","_rev":"_jHZO_-q-AK","original_id":"386","datatype":"cwe","name":"Symbolic Name not Mapping to Correct Object","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"The attacker can gain access to otherwise unauthorized resources.","Scope":"Access Control"},{"Impact":"Other","Note":"Race conditions such as this kind may be employed to gain read or write access to resources not normally readable or writable by the user in question.","Scope":"Other"},{"Impact":"Other","Note":"The resource in question, or other resources (through the corrupted one) may be changed in undesirable ways by a malicious user.","Scope":"Other"},{"Impact":"Hide Activities","Note":"If a file or other resource is written in this method, as opposed to a valid way, logging of the activity may not occur.","Scope":"Non-Repudiation"},{"Impact":"Modify Files or Directories","Note":"In some cases it may be possible to delete files that a malicious user might not otherwise have access to -- such as log files.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"A constant symbolic reference to an object is used, even though the reference can resolve to a different object over time."}},{"_key":"CWE-39","_id":"cwe/CWE-39","_rev":"_jHZO_-q-AL","original_id":"39","datatype":"cwe","name":"Path Traversal: 'C:dirname'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.","Scope":"Availability"},{"Impact":"Modify Files or Directories","Note":"The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication.","Scope":"Integrity"},{"Impact":"Read Files or Directories","Note":"The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the software from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the software.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts input that contains a drive letter or Windows volume letter ('C:dirname') that potentially redirects access to an unintended location or arbitrary file."}},{"_key":"CWE-390","_id":"cwe/CWE-390","_rev":"_jHZO_-q-AM","original_id":"390","datatype":"cwe","name":"Detection of Error Condition Without Action","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"An attacker could utilize an ignored error condition to place the system in an unexpected state that could lead to the execution of unintended logic and could cause other unintended behavior.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product detects a specific error, but takes no actions to handle the error."}},{"_key":"CWE-391","_id":"cwe/CWE-391","_rev":"_jHZO_-q-AN","original_id":"391","datatype":"cwe","name":"Unchecked Error Condition","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDER CWE-252, CWE-248, OR CWE-1069.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed."}},{"_key":"CWE-392","_id":"cwe/CWE-392","_rev":"_jHZO_-q-AO","original_id":"392","datatype":"cwe","name":"Missing Report of Error Condition","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Note":"Errors that are not properly reported could place the system in an unexpected state that could lead to unintended behaviors.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product encounters an error but does not provide a status code or return value to indicate that an error has occurred."}},{"_key":"CWE-393","_id":"cwe/CWE-393","_rev":"_jHZO_-q-AP","original_id":"393","datatype":"cwe","name":"Return of Wrong Status Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"This weakness could place the system in a state that could lead unexpected logic to be executed or other unintended behaviors.","Scope":"Other"}],"description":"This can lead to unpredictable behavior. If the function is used to make security-critical decisions or provide security-critical information, then the wrong status code can cause the product to assume that an action is safe, even when it is not.","likeliehood_of_exploit":"","short_description":"A function or operation returns an incorrect return value or status code that does not indicate an error, but causes the product to modify its behavior based on the incorrect result."}},{"_key":"CWE-394","_id":"cwe/CWE-394","_rev":"_jHZO_-q-AQ","original_id":"394","datatype":"cwe","name":"Unexpected Status Code or Return Value","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly check when a function or operation returns a value that is legitimate for the function, but is not expected by the product."}},{"_key":"CWE-395","_id":"cwe/CWE-395","_rev":"_jHZO_-q-AR","original_id":"395","datatype":"cwe","name":"Use of NullPointerException Catch to Detect NULL Pointer Dereference","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"Catching NullPointerException should not be used as an alternative to programmatic checks to prevent dereferencing a null pointer."}},{"_key":"CWE-396","_id":"cwe/CWE-396","_rev":"_jHZO_-q-AS","original_id":"396","datatype":"cwe","name":"Declaration of Catch for Generic Exception","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"Multiple catch blocks can get ugly and repetitive, but \"condensing\" catch blocks by catching a high-level class like Exception can obscure exceptions that deserve special treatment or that should not be caught at this point in the program. Catching an overly broad exception essentially defeats the purpose of a language's typed exceptions, and can become particularly dangerous if the program grows and begins to throw new types of exceptions. The new exception types will not receive any attention.","likeliehood_of_exploit":"","short_description":"Catching overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities."}},{"_key":"CWE-397","_id":"cwe/CWE-397","_rev":"_jHZO_-q-AT","original_id":"397","datatype":"cwe","name":"Declaration of Throws for Generic Exception","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"Declaring a method to throw Exception or Throwable makes it difficult for callers to perform proper error handling and error recovery. Java's exception mechanism, for example, is set up to make it easy for callers to anticipate what can go wrong and write code to handle each specific exceptional circumstance. Declaring that a method throws a generic form of exception defeats this system.","likeliehood_of_exploit":"","short_description":"Throwing overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities."}},{"_key":"CWE-40","_id":"cwe/CWE-40","_rev":"_jHZO_-q-AU","original_id":"40","datatype":"cwe","name":"Path Traversal: '\\\\UNC\\share\\name\\' (Windows UNC Share)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts input that identifies a Windows UNC share ('\\\\UNC\\share\\name') that potentially redirects access to an unintended location or arbitrary file."}},{"_key":"CWE-400","_id":"cwe/CWE-400","_rev":"_jHZO_-q-AV","original_id":"400","datatype":"cwe","name":"Uncontrolled Resource Consumption","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"The most common result of resource exhaustion is denial of service. The product may slow down, crash due to unhandled errors, or lock out legitimate users.","Scope":"Availability"},{"Impact":"Other","Note":"In some cases it may be possible to force the product to \"fail open\" in the event of resource exhaustion. The state of the product -- and possibly the security functionality - may then be compromised.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources."}},{"_key":"CWE-401","_id":"cwe/CWE-401","_rev":"_jHZO_-q-AW","original_id":"401","datatype":"cwe","name":"Missing Release of Memory after Effective Lifetime","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"Most memory leaks result in general product reliability problems, but if an attacker can intentionally trigger a memory leak, the attacker might be able to launch a denial of service attack (by crashing or hanging the program) or take advantage of other unexpected program behavior resulting from a low memory condition.","Scope":"Availability"},{"Impact":"Reduce Performance","Scope":"Other"}],"description":"This is often triggered by improper handling of malformed data or unexpectedly interrupted sessions.  In some languages, developers are responsible for tracking memory allocation and releasing the memory.  If there are no more pointers or references to the memory, then it can no longer be tracked and identified for release.","likeliehood_of_exploit":"Medium","short_description":"The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory."}},{"_key":"CWE-402","_id":"cwe/CWE-402","_rev":"_jHZO_-u---","original_id":"402","datatype":"cwe","name":"Transmission of Private Resources into a New Sphere ('Resource Leak')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product makes resources available to untrusted parties when those resources are only intended to be accessed by the product."}},{"_key":"CWE-403","_id":"cwe/CWE-403","_rev":"_jHZO_-u--_","original_id":"403","datatype":"cwe","name":"Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"When a new process is forked or executed, the child process inherits any open file descriptors. When the child process has fewer privileges than the parent process, this might introduce a vulnerability if the child process can access the file descriptor but does not have the privileges to access the associated file.","likeliehood_of_exploit":"","short_description":"A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors."}},{"_key":"CWE-404","_id":"cwe/CWE-404","_rev":"_jHZO_-u--A","original_id":"404","datatype":"cwe","name":"Improper Resource Shutdown or Release","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service attack by depleting the resource pool.","Scope":"Other"},{"Impact":"Read Application Data","Note":"When a resource containing sensitive information is not correctly shutdown, it may expose the sensitive data in a subsequent allocation.","Scope":"Confidentiality"}],"description":"When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.","likeliehood_of_exploit":"Medium","short_description":"The product does not release or incorrectly releases a resource before it is made available for re-use."}},{"_key":"CWE-405","_id":"cwe/CWE-405","_rev":"_jHZO_-u--B","original_id":"405","datatype":"cwe","name":"Asymmetric Resource Consumption (Amplification)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Likelihood":"High","Note":"Sometimes this is a factor in \"flood\" attacks, but other types of amplification exist.","Scope":"Availability"}],"description":"This can lead to poor performance due to \"amplification\" of resource consumption, typically in a non-linear fashion.  This situation is worsened if the product allows malicious users or attackers to consume more resources than their access level permits.","likeliehood_of_exploit":"","short_description":"The product does not properly control situations in which an adversary can cause the product to consume or produce excessive resources without requiring the adversary to invest equivalent work or otherwise prove authorization, i.e., the adversary's influence is \"asymmetric.\""}},{"_key":"CWE-406","_id":"cwe/CWE-406","_rev":"_jHZO_-u--C","original_id":"406","datatype":"cwe","name":"Insufficient Control of Network Message Volume (Network Amplification)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"System resources can be quickly consumed leading to poor application performance or system crash. This may affect network performance and could be used to attack other systems and applications relying on network performance.","Scope":"Availability"}],"description":"In the absence of a policy to restrict asymmetric resource consumption, the application or system cannot distinguish between legitimate transmissions and traffic intended to serve as an amplifying attack on target systems. Systems can often be configured to restrict the amount of traffic sent out on behalf of a client, based on the client's origin or access level. This is usually defined in a resource allocation policy. In the absence of a mechanism to keep track of transmissions, the system or application can be easily abused to transmit asymmetrically greater traffic than the request or client should be permitted to.","likeliehood_of_exploit":"","short_description":"The product does not sufficiently monitor or control transmitted network traffic volume, so that an actor can cause the product to transmit more traffic than should be allowed for that actor."}},{"_key":"CWE-407","_id":"cwe/CWE-407","_rev":"_jHZO_-u--D","original_id":"407","datatype":"cwe","name":"Inefficient Algorithmic Complexity","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"The typical consequence is CPU consumption, but memory consumption and consumption of other resources can also occur.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"Low","short_description":"An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached."}},{"_key":"CWE-408","_id":"cwe/CWE-408","_rev":"_jHZO_-u--E","original_id":"408","datatype":"cwe","name":"Incorrect Behavior Order: Early Amplification","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"System resources, CPU and memory, can be quickly consumed. This can lead to poor system performance or system crash.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product allows an entity to perform a legitimate but expensive operation before authentication or authorization has taken place."}},{"_key":"CWE-409","_id":"cwe/CWE-409","_rev":"_jHZO_-u--F","original_id":"409","datatype":"cwe","name":"Improper Handling of Highly Compressed Data (Data Amplification)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"System resources, CPU and memory, can be quickly consumed. This can lead to poor system performance or system crash.","Scope":"Availability"}],"description":"An example of data amplification is a \"decompression bomb,\" a small ZIP file that can produce a large amount of data when it is decompressed.","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output."}},{"_key":"CWE-41","_id":"cwe/CWE-41","_rev":"_jHZO_-u--G","original_id":"41","datatype":"cwe","name":"Improper Resolution of Path Equivalence","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"An attacker may be able to traverse the file system to unintended locations and read or overwrite the contents of unexpected files. If the files are used for a security mechanism than an attacker may be able to bypass the mechanism.","Scope":"Access Control"}],"description":"Path equivalence is usually employed in order to circumvent access controls expressed using an incomplete set of file name or file path representations. This is different from path traversal, wherein the manipulations are performed to generate a name for a different object.","likeliehood_of_exploit":"","short_description":"The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object."}},{"_key":"CWE-410","_id":"cwe/CWE-410","_rev":"_jHZO_-u--H","original_id":"410","datatype":"cwe","name":"Insufficient Resource Pool","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"Floods often cause a crash or other problem besides denial of the resource itself; these are likely examples of *other* vulnerabilities, not an insufficient resource pool.","Scope":"Other"}],"description":"Frequently the consequence is a \"flood\" of connection or sessions.","likeliehood_of_exploit":"","short_description":"The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources."}},{"_key":"CWE-412","_id":"cwe/CWE-412","_rev":"_jHZO_-u--I","original_id":"412","datatype":"cwe","name":"Unrestricted Externally Accessible Lock","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"When an attacker can control a lock, the program may wait indefinitely until the attacker releases the lock, causing a denial of service to other users of the program. This is especially problematic if there is a blocking operation on the lock.","Scope":"Availability"}],"description":"This prevents the product from acting on associated resources or performing other behaviors that are controlled by the presence of the lock. Relevant locks might include an exclusive lock or mutex, or modifying a shared resource that is treated as a lock. If the lock can be held for an indefinite period of time, then the denial of service could be permanent.","likeliehood_of_exploit":"","short_description":"The product properly checks for the existence of a lock, but the lock can be externally controlled or influenced by an actor that is outside of the intended sphere of control."}},{"_key":"CWE-413","_id":"cwe/CWE-413","_rev":"_jHZO_-u--J","original_id":"413","datatype":"cwe","name":"Improper Resource Locking","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"}],"description":"When a resource is not properly locked, an attacker could modify the resource while it is being operated on by the product. This might violate the product's assumption that the resource will not change, potentially leading to unexpected behaviors.","likeliehood_of_exploit":"","short_description":"The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource."}},{"_key":"CWE-414","_id":"cwe/CWE-414","_rev":"_jHZO_-u--K","original_id":"414","datatype":"cwe","name":"Missing Lock Check","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"A product does not check to see if a lock is present before performing sensitive operations on a resource."}},{"_key":"CWE-415","_id":"cwe/CWE-415","_rev":"_jHZO_-u--L","original_id":"415","datatype":"cwe","name":"Double Free","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Doubly freeing memory may result in a write-what-where condition, allowing an attacker to execute arbitrary code.","Scope":"Availability"}],"description":"When a program calls free() twice with the same argument, the program's memory management data structures become corrupted. This corruption can cause the program to crash or, in some circumstances, cause two later calls to malloc() to return the same pointer. If malloc() returns the same value twice and the program later gives the attacker control over the data that is written into this doubly-allocated memory, the program becomes vulnerable to a buffer overflow attack.","likeliehood_of_exploit":"High","short_description":"The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations."}},{"_key":"CWE-416","_id":"cwe/CWE-416","_rev":"_jHZO_-u--M","original_id":"416","datatype":"cwe","name":"Use After Free","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"The use of previously freed memory may corrupt valid data, if the memory area in question has been allocated and used properly elsewhere.","Scope":"Integrity"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"If chunk consolidation occurs after the use of previously freed data, the process may crash when invalid data is used as chunk information.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"If malicious data is entered before chunk consolidation can take place, it may be possible to take advantage of a write-what-where primitive to execute arbitrary code. If the newly allocated data happens to hold a class, in C++ for example, various function pointers may be scattered within the heap data. If one of these function pointers is overwritten with an address to valid shellcode, execution of arbitrary code can be achieved.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a location somewhere within the new allocation. Any operations using the original pointer are no longer valid because the memory \"belongs\" to the code that operates on the new pointer."}},{"_key":"CWE-419","_id":"cwe/CWE-419","_rev":"_jHZO_-u--N","original_id":"419","datatype":"cwe","name":"Unprotected Primary Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel."}},{"_key":"CWE-42","_id":"cwe/CWE-42","_rev":"_jHZO_-u--O","original_id":"42","datatype":"cwe","name":"Path Equivalence: 'filename.' (Trailing Dot)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-420","_id":"cwe/CWE-420","_rev":"_jHZO_-u--P","original_id":"420","datatype":"cwe","name":"Unprotected Alternate Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product protects a primary channel, but it does not use the same level of protection for an alternate channel."}},{"_key":"CWE-421","_id":"cwe/CWE-421","_rev":"_jHZO_-u--Q","original_id":"421","datatype":"cwe","name":"Race Condition During Access to Alternate Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"This creates a race condition that allows an attacker to access the channel before the authorized user does.","likeliehood_of_exploit":"","short_description":"The product opens an alternate channel to communicate with an authorized user, but the channel is accessible to other actors."}},{"_key":"CWE-422","_id":"cwe/CWE-422","_rev":"_jHZO_-u--R","original_id":"422","datatype":"cwe","name":"Unprotected Windows Messaging Channel ('Shatter')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly verify the source of a message in the Windows Messaging System while running at elevated privileges, creating an alternate channel through which an attacker can directly send a message to the product."}},{"_key":"CWE-424","_id":"cwe/CWE-424","_rev":"_jHZO_-u--S","original_id":"424","datatype":"cwe","name":"Improper Protection of Alternate Path","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources."}},{"_key":"CWE-425","_id":"cwe/CWE-425","_rev":"_jHZO_-u--T","original_id":"425","datatype":"cwe","name":"Direct Request ('Forced Browsing')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.","likeliehood_of_exploit":"","short_description":"The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files."}},{"_key":"CWE-426","_id":"cwe/CWE-426","_rev":"_jHZO_-u--U","original_id":"426","datatype":"cwe","name":"Untrusted Search Path","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"There is the potential for arbitrary code execution with privileges of the vulnerable program.","Scope":"Access Control"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The program could be redirected to the wrong files, potentially triggering a crash or hang when the targeted file is too large or does not have the expected format.","Scope":"Availability"},{"Impact":"Read Files or Directories","Note":"The program could send the output of unauthorized files to the attacker.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control."}},{"_key":"CWE-427","_id":"cwe/CWE-427","_rev":"_jHZO_-u--V","original_id":"427","datatype":"cwe","name":"Uncontrolled Search Path Element","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors."}},{"_key":"CWE-428","_id":"cwe/CWE-428","_rev":"_jHZO_-u--W","original_id":"428","datatype":"cwe","name":"Unquoted Search Path or Element","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"If a malicious individual has access to the file system, it is possible to elevate privileges by inserting such a file as \"C:\\Program.exe\" to be run by a privileged program making use of WinExec.","likeliehood_of_exploit":"","short_description":"The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path."}},{"_key":"CWE-43","_id":"cwe/CWE-43","_rev":"_jHZO_-u--X","original_id":"43","datatype":"cwe","name":"Path Equivalence: 'filename....' (Multiple Trailing Dot)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of multiple trailing dot ('filedir....') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-430","_id":"cwe/CWE-430","_rev":"_jHZO_-u--Y","original_id":"430","datatype":"cwe","name":"Deployment of Wrong Handler","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Other"}],"description":"An example of deploying the wrong handler would be calling a servlet to reveal source code of a .JSP file, or automatically \"determining\" type of the object even if it is contradictory to an explicitly specified type.","likeliehood_of_exploit":"","short_description":"The wrong \"handler\" is assigned to process an object."}},{"_key":"CWE-431","_id":"cwe/CWE-431","_rev":"_jHZO_-u--Z","original_id":"431","datatype":"cwe","name":"Missing Handler","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"When an exception is thrown and not caught, the process has given up an opportunity to decide if a given failure or event is worth a change in execution.","likeliehood_of_exploit":"","short_description":"A handler is not available or implemented."}},{"_key":"CWE-432","_id":"cwe/CWE-432","_rev":"_jHZO_-u--a","original_id":"432","datatype":"cwe","name":"Dangerous Signal Handler not Disabled During Sensitive Operations","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"During the execution of a signal handler, it can be interrupted by another handler when a different signal is sent. If the two handlers share state - such as global variables - then an attacker can corrupt the state by sending another signal before the first handler has completed execution.","likeliehood_of_exploit":"","short_description":"The product uses a signal handler that shares state with other signal handlers, but it does not properly mask or prevent those signal handlers from being invoked while the original signal handler is still running."}},{"_key":"CWE-433","_id":"cwe/CWE-433","_rev":"_jHZO_-u--b","original_id":"433","datatype":"cwe","name":"Unparsed Raw Web Content Delivery","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"If code is stored in a file with an extension such as \".inc\" or \".pl\", and the web server does not have a handler for that extension, then the server will likely send the contents of the file directly to the requester without the pre-processing that was expected. When that file contains sensitive information such as database credentials, this may allow the attacker to compromise the application or associated components.","likeliehood_of_exploit":"","short_description":"The product stores raw content or supporting code under the web document root with an extension that is not specifically handled by the server."}},{"_key":"CWE-434","_id":"cwe/CWE-434","_rev":"_jHZO_-u--c","original_id":"434","datatype":"cwe","name":"Unrestricted Upload of File with Dangerous Type","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Arbitrary code execution is possible if an uploaded file is interpreted and executed as code by the recipient. This is especially true for web-server extensions such as .asp and .php because these file types are often treated as automatically executable, even when file system permissions do not specify execution. For example, in Unix environments, programs typically cannot run unless the execute bit is set, but PHP programs may be executed by the web server without directly invoking them on the operating system.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."}},{"_key":"CWE-435","_id":"cwe/CWE-435","_rev":"_jHZO_-u--d","original_id":"435","datatype":"cwe","name":"Improper Interaction Between Multiple Correctly-Behaving Entities","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Integrity"}],"description":"When a system or process combines multiple independent components, this often produces new, emergent behaviors at the system level.  However, if the interactions between these components are not fully accounted for, some of the emergent behaviors can be incorrect or even insecure.","likeliehood_of_exploit":"","short_description":"An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resultant weaknesses."}},{"_key":"CWE-436","_id":"cwe/CWE-436","_rev":"_jHZO_-u--e","original_id":"436","datatype":"cwe","name":"Interpretation Conflict","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"This is generally found in proxies, firewalls, anti-virus software, and other intermediary devices that monitor, allow, deny, or modify traffic based on how the client or server is expected to behave.","likeliehood_of_exploit":"","short_description":"Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state."}},{"_key":"CWE-437","_id":"cwe/CWE-437","_rev":"_jHZO_-u--f","original_id":"437","datatype":"cwe","name":"Incomplete Model of Endpoint Features","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"A product acts as an intermediary or monitor between two or more endpoints, but it does not have a complete model of an endpoint's features, behaviors, or state, potentially causing the product to perform incorrect actions based on this incomplete model."}},{"_key":"CWE-439","_id":"cwe/CWE-439","_rev":"_jHZO_-u--g","original_id":"439","datatype":"cwe","name":"Behavioral Change in New Version or Environment","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"A's behavior or functionality changes with a new version of A, or a new environment, which is not known (or manageable) by B."}},{"_key":"CWE-44","_id":"cwe/CWE-44","_rev":"_jHZO_-u--h","original_id":"44","datatype":"cwe","name":"Path Equivalence: 'file.name' (Internal Dot)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of internal dot ('file.ordir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-440","_id":"cwe/CWE-440","_rev":"_jHZO_-u--i","original_id":"440","datatype":"cwe","name":"Expected Behavior Violation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"A feature, API, or function does not perform according to its specification."}},{"_key":"CWE-441","_id":"cwe/CWE-441","_rev":"_jHZO_-u--j","original_id":"441","datatype":"cwe","name":"Unintended Proxy or Intermediary ('Confused Deputy')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor."}},{"_key":"CWE-444","_id":"cwe/CWE-444","_rev":"_jHZO_-u--k","original_id":"444","datatype":"cwe","name":"Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"An attacker could create HTTP messages to exploit a number of weaknesses including 1) the message can trick the web server to associate a URL with another URL's webpage and caching the contents of the webpage (web cache poisoning attack), 2) the message can be structured to bypass the firewall protection mechanisms and gain unauthorized access to a web application, and 3) the message can invoke a script or a page that returns client credentials (similar to a Cross Site Scripting attack).","Scope":"Access Control"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product acts as an intermediary HTTP agent\n         (such as a proxy or firewall) in the data flow between two\n         entities such as a client and server, but it does not\n         interpret malformed HTTP requests or responses in ways that\n         are consistent with how the messages will be processed by\n         those entities that are at the ultimate destination."}},{"_key":"CWE-446","_id":"cwe/CWE-446","_rev":"_jHZO_-u--l","original_id":"446","datatype":"cwe","name":"UI Discrepancy for Security Feature","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"When the user interface does not properly reflect what the user asks of it, then it can lead the user into a false sense of security. For example, the user might check a box to enable a security option to enable encrypted communications, but the product does not actually enable the encryption. Alternately, the user might provide a \"restrict ALL\" access control rule, but the product only implements \"restrict SOME\".","likeliehood_of_exploit":"","short_description":"The user interface does not correctly enable or configure a security feature, but the interface provides feedback that causes the user to believe that the feature is in a secure state."}},{"_key":"CWE-447","_id":"cwe/CWE-447","_rev":"_jHZO_-u--m","original_id":"447","datatype":"cwe","name":"Unimplemented or Unsupported Feature in UI","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"A UI function for a security feature appears to be supported and gives feedback to the user that suggests that it is supported, but the underlying functionality is not implemented."}},{"_key":"CWE-448","_id":"cwe/CWE-448","_rev":"_jHZO_-u--n","original_id":"448","datatype":"cwe","name":"Obsolete Feature in UI","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"A UI function is obsolete and the product does not warn the user."}},{"_key":"CWE-449","_id":"cwe/CWE-449","_rev":"_jHZO_-u--o","original_id":"449","datatype":"cwe","name":"The UI Performs the Wrong Action","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The UI performs the wrong action with respect to the user's request."}},{"_key":"CWE-45","_id":"cwe/CWE-45","_rev":"_jHZO_-u--p","original_id":"45","datatype":"cwe","name":"Path Equivalence: 'file...name' (Multiple Internal Dot)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of multiple internal dot ('file...dir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-450","_id":"cwe/CWE-450","_rev":"_jHZO_-u--q","original_id":"450","datatype":"cwe","name":"Multiple Interpretations of UI Input","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The UI has multiple interpretations of user input but does not prompt the user when it selects the less secure interpretation."}},{"_key":"CWE-451","_id":"cwe/CWE-451","_rev":"_jHZO_-u--r","original_id":"451","datatype":"cwe","name":"User Interface (UI) Misrepresentation of Critical Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks."}},{"_key":"CWE-453","_id":"cwe/CWE-453","_rev":"_jHZO_-u--s","original_id":"453","datatype":"cwe","name":"Insecure Default Variable Initialization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could gain access to and modify sensitive data or system information.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product, by default, initializes an internal variable with an insecure or less secure value than is possible."}},{"_key":"CWE-454","_id":"cwe/CWE-454","_rev":"_jHZO_-u--t","original_id":"454","datatype":"cwe","name":"External Initialization of Trusted Variables or Data Stores","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could gain access to and modify sensitive data or system information.","Scope":"Integrity"}],"description":"A product system should be reluctant to trust variables that have been initialized outside of its trust boundary, especially if they are initialized by users. The variables may have been initialized incorrectly. If an attacker can initialize the variable, then they can influence what the vulnerable system will do.","likeliehood_of_exploit":"","short_description":"The product initializes critical internal variables or data stores using inputs that can be modified by untrusted actors."}},{"_key":"CWE-455","_id":"cwe/CWE-455","_rev":"_jHZO_-u--u","original_id":"455","datatype":"cwe","name":"Non-exit on Failed Initialization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"The application could be placed in an insecure state that may allow an attacker to modify sensitive data or allow unintended logic to be executed.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not exit or otherwise modify its operation when security-relevant errors occur during initialization, such as when a configuration file has a format error or a hardware security module (HSM) cannot be activated, which can cause the product to execute in a less secure fashion than intended by the administrator."}},{"_key":"CWE-456","_id":"cwe/CWE-456","_rev":"_jHZO_-u--v","original_id":"456","datatype":"cwe","name":"Missing Initialization of a Variable","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"The uninitialized data may be invalid, causing logic errors within the program. In some cases, this could result in a security problem.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not initialize critical variables, which causes the execution environment to use unexpected values."}},{"_key":"CWE-457","_id":"cwe/CWE-457","_rev":"_jHZO_-u--w","original_id":"457","datatype":"cwe","name":"Use of Uninitialized Variable","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"Initial variables usually contain junk, which can not be trusted for consistency. This can lead to denial of service conditions, or modify control flow in unexpected ways. In some cases, an attacker can \"pre-initialize\" the variable using previous actions, which might enable code execution. This can cause a race condition if a lock variable check passes when it should not.","Scope":"Other"},{"Impact":"Other","Note":"Strings that are not initialized are especially dangerous, since many functions expect a null at the end -- and only at the end -- of a string.","Scope":"Other"}],"description":"In some languages such as C and C++, stack variables are not initialized by default. They generally contain junk data with the contents of stack memory before the function was invoked. An attacker can sometimes control or read these contents. In other languages or conditions, a variable that is not explicitly initialized can be given a default value that has security implications, depending on the logic of the program. The presence of an uninitialized variable can sometimes indicate a typographic error in the code.","likeliehood_of_exploit":"High","short_description":"The code uses a variable that has not been initialized, leading to unpredictable or unintended results."}},{"_key":"CWE-459","_id":"cwe/CWE-459","_rev":"_jHZO_-u--x","original_id":"459","datatype":"cwe","name":"Incomplete Cleanup","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"It is possible to overflow the number of temporary files because directories typically have limits on the number of files allowed. This could create a denial of service problem.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used."}},{"_key":"CWE-46","_id":"cwe/CWE-46","_rev":"_jHZO_-u--y","original_id":"46","datatype":"cwe","name":"Path Equivalence: 'filename ' (Trailing Space)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-460","_id":"cwe/CWE-460","_rev":"_jHZO_-u--z","original_id":"460","datatype":"cwe","name":"Improper Cleanup on Thrown Exception","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Note":"The code could be left in a bad state.","Scope":"Other"}],"description":"Often, when functions or loops become complicated, some level of resource cleanup is needed throughout execution. Exceptions can disturb the flow of the code and prevent the necessary cleanup from happening.","likeliehood_of_exploit":"Medium","short_description":"The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow."}},{"_key":"CWE-462","_id":"cwe/CWE-462","_rev":"_jHZO_-u--0","original_id":"462","datatype":"cwe","name":"Duplicate Key in Associative List (Alist)","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"A duplicate key entry -- if the alist is designed properly -- could be used as a constant time replace function. However, duplicate key entries could be inserted by mistake. Because of this ambiguity, duplicate key entries in an association list are not recommended and should not be allowed.","likeliehood_of_exploit":"Low","short_description":"Duplicate keys in associative lists can lead to non-unique keys being mistaken for an error."}},{"_key":"CWE-463","_id":"cwe/CWE-463","_rev":"_jHZO_-u--1","original_id":"463","datatype":"cwe","name":"Deletion of Data Structure Sentinel","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"Generally this error will cause the data structure to not work properly.","Scope":"Other"},{"Impact":"Other","Note":"If a control character, such as NULL is removed, one may cause resource access control problems.","Scope":"Other"}],"description":"Often times data-structure sentinels are used to mark structure of the data structure. A common example of this is the null character at the end of strings. Another common example is linked lists which may contain a sentinel to mark the end of the list. It is dangerous to allow this type of control data to be easily accessible. Therefore, it is important to protect from the deletion or modification outside of some wrapper interface which provides safety.","likeliehood_of_exploit":"","short_description":"The accidental deletion of a data-structure sentinel can cause serious programming logic problems."}},{"_key":"CWE-464","_id":"cwe/CWE-464","_rev":"_jHZO_-u--2","original_id":"464","datatype":"cwe","name":"Addition of Data Structure Sentinel","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"Generally this error will cause the data structure to not work properly by truncating the data.","Scope":"Integrity"}],"description":"Data-structure sentinels are often used to mark the structure of data. A common example of this is the null character at the end of strings or a special sentinel to mark the end of a linked list. It is dangerous to allow this type of control data to be easily accessible. Therefore, it is important to protect from the addition or modification of sentinels.","likeliehood_of_exploit":"High","short_description":"The accidental addition of a data-structure sentinel can cause serious programming logic problems."}},{"_key":"CWE-466","_id":"cwe/CWE-466","_rev":"_jHZO_-u--3","original_id":"466","datatype":"cwe","name":"Return of Pointer Value Outside of Expected Range","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference."}},{"_key":"CWE-467","_id":"cwe/CWE-467","_rev":"_jHZO_-u--4","original_id":"467","datatype":"cwe","name":"Use of sizeof() on a Pointer Type","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"This error can often cause one to allocate a buffer that is much smaller than what is needed, leading to resultant weaknesses such as buffer overflows.","Scope":"Confidentiality"}],"description":"The use of sizeof() on a pointer can sometimes generate useful information. An obvious case is to find out the wordsize on a platform. More often than not, the appearance of sizeof(pointer) indicates a bug.","likeliehood_of_exploit":"High","short_description":"The code calls sizeof() on a pointer type, which can be an incorrect calculation if the programmer intended to determine the size of the data that is being pointed to."}},{"_key":"CWE-468","_id":"cwe/CWE-468","_rev":"_jHZO_-u--5","original_id":"468","datatype":"cwe","name":"Incorrect Pointer Scaling","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"Incorrect pointer scaling will often result in buffer overflow conditions. Confidentiality can be compromised if the weakness is in the context of a buffer over-read or under-read.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"In C and C++, one may often accidentally refer to the wrong memory due to the semantics of when math operations are implicitly scaled."}},{"_key":"CWE-469","_id":"cwe/CWE-469","_rev":"_jHZO_-u--6","original_id":"469","datatype":"cwe","name":"Use of Pointer Subtraction to Determine Size","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"There is the potential for arbitrary code execution with privileges of the vulnerable program.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk."}},{"_key":"CWE-47","_id":"cwe/CWE-47","_rev":"_jHZO_-u--7","original_id":"47","datatype":"cwe","name":"Path Equivalence: ' filename' (Leading Space)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of leading space (' filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-470","_id":"cwe/CWE-470","_rev":"_jHZO_-u--8","original_id":"470","datatype":"cwe","name":"Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')","metadata":{"applicable_platform":["Interpreted"],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"The attacker might be able to execute code that is not directly accessible to the attacker. Alternately, the attacker could call unexpected code in the wrong place or the wrong time, possibly modifying critical system state.","Scope":"Other"},{"Impact":"Other","Note":"The attacker might be able to use reflection to call the wrong code, possibly with unexpected arguments that violate the API (CWE-227). This could cause the product to exit or hang.","Scope":"Other"},{"Impact":"Read Application Data","Note":"By causing the wrong code to be invoked, the attacker might be able to trigger a runtime error that leaks sensitive information in the error message, such as CWE-536.","Scope":"Confidentiality"}],"description":"If the product uses external inputs to determine which class to instantiate or which method to invoke, then an attacker could supply values to select unexpected classes or methods. If this occurs, then the attacker could create control flow paths that were not intended by the developer. These paths could bypass authentication or access control checks, or otherwise cause the product to behave in an unexpected manner. This situation becomes a doomsday scenario if the attacker can upload files into a location that appears on the product's classpath (CWE-427) or add new entries to the product's classpath (CWE-426). Under either of these conditions, the attacker can use reflection to introduce new, malicious behavior into the product.","likeliehood_of_exploit":"","short_description":"The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code."}},{"_key":"CWE-471","_id":"cwe/CWE-471","_rev":"_jHZO_-u--9","original_id":"471","datatype":"cwe","name":"Modification of Assumed-Immutable Data (MAID)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"Common data types that are attacked are environment variables, web application parameters, and HTTP headers.","Scope":"Integrity"},{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"This occurs when a particular input is critical enough to the functioning of the application that it should not be modifiable at all, but it is. Certain resources are often assumed to be immutable when they are not, such as hidden form fields in web applications, cookies, and reverse DNS lookups.","likeliehood_of_exploit":"","short_description":"The product does not properly protect an assumed-immutable element from being modified by an attacker."}},{"_key":"CWE-472","_id":"cwe/CWE-472","_rev":"_jHZO_-u-_-","original_id":"472","datatype":"cwe","name":"External Control of Assumed-Immutable Web Parameter","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"Without appropriate protection mechanisms, the client can easily tamper with cookies and similar web data. Reliance on the cookies without detailed validation can lead to problems such as SQL injection. If you use cookie values for security related decisions on the server side, manipulating the cookies might lead to violations of security policies such as authentication bypassing, user impersonation and privilege escalation. In addition, storing sensitive data in the cookie without appropriate protection can also lead to disclosure of sensitive user data, especially data stored in persistent cookies.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields."}},{"_key":"CWE-473","_id":"cwe/CWE-473","_rev":"_jHZO_-u-__","original_id":"473","datatype":"cwe","name":"PHP External Variable Modification","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise."}},{"_key":"CWE-474","_id":"cwe/CWE-474","_rev":"_jHZO_-u-_A","original_id":"474","datatype":"cwe","name":"Use of Function with Inconsistent Implementations","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The code uses a function that has inconsistent implementations across operating systems and versions."}},{"_key":"CWE-475","_id":"cwe/CWE-475","_rev":"_jHZO_-u-_B","original_id":"475","datatype":"cwe","name":"Undefined Behavior for Input to API","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The behavior of this function is undefined unless its control parameter is set to a specific value."}},{"_key":"CWE-476","_id":"cwe/CWE-476","_rev":"_jHZO_-u-_C","original_id":"476","datatype":"cwe","name":"NULL Pointer Dereference","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"NULL pointer dereferences usually result in the failure of the process unless exception handling (on some platforms) is available and implemented. Even when exception handling is being used, it can still be very difficult to return the software to a safe state of operation.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"In rare circumstances, when NULL is equivalent to the 0x0 memory address and privileged code can access it, then writing or reading memory is possible, which may lead to code execution.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product dereferences a pointer that it expects to be valid but is NULL."}},{"_key":"CWE-477","_id":"cwe/CWE-477","_rev":"_jHZO_-u-_D","original_id":"477","datatype":"cwe","name":"Use of Obsolete Function","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained."}},{"_key":"CWE-478","_id":"cwe/CWE-478","_rev":"_jHZO_-u-_E","original_id":"478","datatype":"cwe","name":"Missing Default Case in Multiple Condition Expression","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"Depending on the logical circumstances involved, any consequences may result: e.g., issues of confidentiality, authentication, authorization, availability, integrity, accountability, or non-repudiation.","Scope":"Integrity"}],"description":"If a multiple-condition expression (such as a switch in C) omits the default case but does not consider or handle all possible values that could occur, then this might lead to complex logical errors and resultant weaknesses. Because of this, further decisions are made based on poor information, and cascading failure results. This cascading failure may result in any number of security issues, and constitutes a significant failure in the system.","likeliehood_of_exploit":"","short_description":"The code does not have a default case in an expression with multiple conditions, such as a switch statement."}},{"_key":"CWE-479","_id":"cwe/CWE-479","_rev":"_jHZO_-u-_F","original_id":"479","datatype":"cwe","name":"Signal Handler Use of a Non-reentrant Function","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"It may be possible to execute arbitrary code through the use of a write-what-where condition.","Scope":"Availability"},{"Impact":"Modify Application Data","Note":"Signal race conditions often result in data corruption.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"Low","short_description":"The product defines a signal handler that calls a non-reentrant function."}},{"_key":"CWE-48","_id":"cwe/CWE-48","_rev":"_jHZO_-u-_G","original_id":"48","datatype":"cwe","name":"Path Equivalence: 'file name' (Internal Whitespace)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of internal space ('file(SPACE)name') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-480","_id":"cwe/CWE-480","_rev":"_jHZO_-u-_H","original_id":"480","datatype":"cwe","name":"Use of Incorrect Operator","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"This weakness can cause unintended logic to be executed and other unexpected application behavior.","Scope":"Other"}],"description":"These types of errors are generally the result of a typo by the programmer.","likeliehood_of_exploit":"Low","short_description":"The product accidentally uses the wrong operator, which changes the logic in security-relevant ways."}},{"_key":"CWE-481","_id":"cwe/CWE-481","_rev":"_jHZO_-u-_I","original_id":"481","datatype":"cwe","name":"Assigning instead of Comparing","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"In many languages the compare statement is very close in appearance to the assignment statement and are often confused. This bug is generally the result of a typo and usually causes obvious problems with program execution. If the comparison is in an if statement, the if statement will usually evaluate the value of the right-hand side of the predicate.","likeliehood_of_exploit":"Low","short_description":"The code uses an operator for assignment when the intention was to perform a comparison."}},{"_key":"CWE-482","_id":"cwe/CWE-482","_rev":"_jHZO_-u-_J","original_id":"482","datatype":"cwe","name":"Comparing instead of Assigning","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"The assignment will not take place, which should cause obvious program execution problems.","Scope":"Integrity"}],"description":"In many languages, the compare statement is very close in appearance to the assignment statement; they are often confused.","likeliehood_of_exploit":"Low","short_description":"The code uses an operator for comparison when the intention was to perform an assignment."}},{"_key":"CWE-483","_id":"cwe/CWE-483","_rev":"_jHZO_-u-_K","original_id":"483","datatype":"cwe","name":"Incorrect Block Delimitation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"This is a general logic error which will often lead to obviously-incorrect behaviors that are quickly noticed and fixed. In lightly tested or untested code, this error may be introduced it into a production environment and provide additional attack vectors by creating a control flow path leading to an unexpected state in the application. The consequences will depend on the types of behaviors that are being incorrectly executed.","Scope":"Availability"}],"description":"In some languages, braces (or other delimiters) are optional for blocks. When the delimiter is omitted, it is possible to insert a logic error in which a statement is thought to be in a block but is not. In some cases, the logic error can have security implications.","likeliehood_of_exploit":"Low","short_description":"The code does not explicitly delimit a block that is intended to contain 2 or more statements, creating a logic error."}},{"_key":"CWE-484","_id":"cwe/CWE-484","_rev":"_jHZO_-u-_L","original_id":"484","datatype":"cwe","name":"Omitted Break Statement in Switch","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"This weakness can cause unintended logic to be executed and other unexpected application behavior.","Scope":"Other"}],"description":"This can lead to critical code executing in situations where it should not.","likeliehood_of_exploit":"Medium","short_description":"The product omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition."}},{"_key":"CWE-486","_id":"cwe/CWE-486","_rev":"_jHZO_-u-_M","original_id":"486","datatype":"cwe","name":"Comparison of Classes by Name","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"If a product relies solely on the name of an object to determine identity, it may execute the incorrect or unintended code.","Scope":"Availability"}],"description":"If the decision to trust the methods and data of an object is based on the name of a class, it is possible for malicious users to send objects of the same name as trusted classes and thereby gain the trust afforded to known classes and types.","likeliehood_of_exploit":"High","short_description":"The product compares classes by name, which can cause it to use the wrong class when multiple classes can have the same name."}},{"_key":"CWE-487","_id":"cwe/CWE-487","_rev":"_jHZO_-u-_N","original_id":"487","datatype":"cwe","name":"Reliance on Package-level Scope","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"Any data in a Java package can be accessed outside of the Java framework if the package is distributed.","Scope":"Confidentiality"},{"Impact":"Modify Application Data","Note":"The data in a Java class can be modified by anyone outside of the Java framework if the packages is distributed.","Scope":"Integrity"}],"description":"The purpose of package scope is to prevent accidental access by other parts of a program. This is an ease-of-software-development feature but not a security feature.","likeliehood_of_exploit":"Medium","short_description":"Java packages are not inherently closed; therefore, relying on them for code security is not a good practice."}},{"_key":"CWE-488","_id":"cwe/CWE-488","_rev":"_jHZO_-u-_O","original_id":"488","datatype":"cwe","name":"Exposure of Data Element to Wrong Session","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session."}},{"_key":"CWE-489","_id":"cwe/CWE-489","_rev":"_jHZO_-u-_P","original_id":"489","datatype":"cwe","name":"Active Debug Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"The severity of the exposed debug application will depend on the particular instance. At the least, it will give an attacker sensitive information about the settings and mechanics of web applications on the server. At worst, as is often the case, the debug application will allow an attacker complete control over the web application and server, as well as confidential information that either of these access.","Scope":"Other"}],"description":"A common development practice is to add \"back door\" code specifically designed for debugging or testing purposes that is not intended to be shipped or deployed with the product. These back door entry points create security risks because they are not considered during design or testing and fall outside of the expected operating conditions of the product.","likeliehood_of_exploit":"","short_description":"The product is deployed to unauthorized actors with debugging code still enabled or active, which can create unintended entry points or expose sensitive information."}},{"_key":"CWE-49","_id":"cwe/CWE-49","_rev":"_jHZO_-u-_Q","original_id":"49","datatype":"cwe","name":"Path Equivalence: 'filename/' (Trailing Slash)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-491","_id":"cwe/CWE-491","_rev":"_jHZO_-u-_R","original_id":"491","datatype":"cwe","name":"Public cloneable() Method Without Final ('Object Hijack')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"A class has a cloneable() method that is not declared final, which allows an object to be created without calling the constructor. This can cause the object to be in an unexpected state."}},{"_key":"CWE-492","_id":"cwe/CWE-492","_rev":"_jHZO_-u-_S","original_id":"492","datatype":"cwe","name":"Use of Inner Class Containing Sensitive Data","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"\"Inner Classes\" data confidentiality aspects can often be overcome.","Scope":"Confidentiality"}],"description":"Inner classes quietly introduce several security concerns because of the way they are translated into Java bytecode. In Java source code, it appears that an inner class can be declared to be accessible only by the enclosing class, but Java bytecode has no concept of an inner class, so the compiler must transform an inner class declaration into a peer class with package level access to the original outer class. More insidiously, since an inner class can access private fields in its enclosing class, once an inner class becomes a peer class in bytecode, the compiler converts private fields accessed by the inner class into protected fields.","likeliehood_of_exploit":"Medium","short_description":"Inner classes are translated into classes that are accessible at package scope and may expose code that the programmer intended to keep private to attackers."}},{"_key":"CWE-493","_id":"cwe/CWE-493","_rev":"_jHZO_-u-_T","original_id":"493","datatype":"cwe","name":"Critical Public Variable Without Final Modifier","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"The object could potentially be tampered with.","Scope":"Integrity"},{"Impact":"Read Application Data","Note":"The object could potentially allow the object to be read.","Scope":"Confidentiality"}],"description":"If a field is non-final and public, it can be changed once the value is set by any function that has access to the class which contains the field. This could lead to a vulnerability if other parts of the program make assumptions about the contents of that field.","likeliehood_of_exploit":"High","short_description":"The product has a critical public variable that is not final, which allows the variable to be modified to contain unexpected values."}},{"_key":"CWE-494","_id":"cwe/CWE-494","_rev":"_jHZO_-u-_U","original_id":"494","datatype":"cwe","name":"Download of Code Without Integrity Check","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"Executing untrusted code could compromise the control flow of the program. The untrusted code could execute attacker-controlled commands, read or modify sensitive resources, or prevent the software from functioning correctly for legitimate users.","Scope":"Other"}],"description":"An attacker can execute malicious code by compromising the host server, performing DNS spoofing, or modifying the code in transit.","likeliehood_of_exploit":"Medium","short_description":"The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code."}},{"_key":"CWE-495","_id":"cwe/CWE-495","_rev":"_jHZO_-u-_V","original_id":"495","datatype":"cwe","name":"Private Data Structure Returned From A Public Method","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"The contents of the data structure can be modified from outside the intended scope.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product has a method that is declared public, but returns a reference to a private data structure, which could then be modified in unexpected ways."}},{"_key":"CWE-496","_id":"cwe/CWE-496","_rev":"_jHZO_-u-_W","original_id":"496","datatype":"cwe","name":"Public Data Assigned to Private Array-Typed Field","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"The contents of the array can be modified from outside the intended scope.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"Assigning public data to a private array is equivalent to giving public access to the array."}},{"_key":"CWE-497","_id":"cwe/CWE-497","_rev":"_jHZO_-u-_X","original_id":"497","datatype":"cwe","name":"Exposure of Sensitive System Information to an Unauthorized Control Sphere","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does."}},{"_key":"CWE-498","_id":"cwe/CWE-498","_rev":"_jHZO_-u-_Y","original_id":"498","datatype":"cwe","name":"Cloneable Class Containing Sensitive Information","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"A class that can be cloned can be produced without executing the constructor. This is dangerous since the constructor may perform security-related checks. By allowing the object to be cloned, those checks may be bypassed.","Scope":"Access Control"}],"description":"Cloneable classes are effectively open classes, since data cannot be hidden in them. Classes that do not explicitly deny cloning can be cloned by any other class without running the constructor.","likeliehood_of_exploit":"Medium","short_description":"The code contains a class with sensitive data, but the class is cloneable. The data can then be accessed by cloning the class."}},{"_key":"CWE-499","_id":"cwe/CWE-499","_rev":"_jHZO_-u-_Z","original_id":"499","datatype":"cwe","name":"Serializable Class Containing Sensitive Data","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"an attacker can write out the class to a byte stream, then extract the important data from it.","Scope":"Confidentiality"}],"description":"Serializable classes are effectively open classes since data cannot be hidden in them. Classes that do not explicitly deny serialization can be serialized by any other class, which can then in turn use the data stored inside it.","likeliehood_of_exploit":"High","short_description":"The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class."}},{"_key":"CWE-5","_id":"cwe/CWE-5","_rev":"_jHZO_-u-_a","original_id":"5","datatype":"cwe","name":"J2EE Misconfiguration: Data Transmission Without Encryption","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"},{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted."}},{"_key":"CWE-50","_id":"cwe/CWE-50","_rev":"_jHZO_-u-_b","original_id":"50","datatype":"cwe","name":"Path Equivalence: '//multiple/leading/slash'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of multiple leading slash ('//multiple/leading/slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-500","_id":"cwe/CWE-500","_rev":"_jHZO_-u-_c","original_id":"500","datatype":"cwe","name":"Public Static Field Not Marked Final","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"The object could potentially be tampered with.","Scope":"Integrity"},{"Impact":"Read Application Data","Note":"The object could potentially allow the object to be read.","Scope":"Confidentiality"}],"description":"Public static variables can be read without an accessor and changed without a mutator by any classes in the application.","likeliehood_of_exploit":"High","short_description":"An object contains a public static field that is not marked final, which might allow it to be modified in unexpected ways."}},{"_key":"CWE-501","_id":"cwe/CWE-501","_rev":"_jHZO_-u-_d","original_id":"501","datatype":"cwe","name":"Trust Boundary Violation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted. On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data to safely cross the trust boundary - to move from untrusted to trusted. A trust boundary violation occurs when a program blurs the line between what is trusted and what is untrusted. By combining trusted and untrusted data in the same data structure, it becomes easier for programmers to mistakenly trust unvalidated data.","likeliehood_of_exploit":"","short_description":"The product mixes trusted and untrusted data in the same data structure or structured message."}},{"_key":"CWE-502","_id":"cwe/CWE-502","_rev":"_jHZO_-u-_e","original_id":"502","datatype":"cwe","name":"Deserialization of Untrusted Data","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"Attackers can modify unexpected objects or data that was assumed to be safe from modification. Deserialized data or code could be modified without using the provided accessor functions, or unexpected functions could be invoked.","Scope":"Integrity"},{"Impact":"DoS: Resource Consumption (CPU)","Note":"If a function is making an assumption on when to terminate, based on a sentry in a string, it could easily never terminate.","Scope":"Availability"},{"Impact":"Varies by Context","Note":"The consequences can vary widely, because it depends on which objects or methods are being deserialized, and how they are used. Making an assumption that the code in the deserialized object is valid is dangerous and can enable exploitation. One example is attackers using gadget chains to perform unauthorized actions, such as generating a shell.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid."}},{"_key":"CWE-506","_id":"cwe/CWE-506","_rev":"_jHZO_-u-_f","original_id":"506","datatype":"cwe","name":"Embedded Malicious Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"Malicious flaws have acquired colorful names, including Trojan horse, trapdoor, timebomb, and logic-bomb. A developer might insert malicious code with the intent to subvert the security of a product or its host system at some time in the future. It generally refers to a program that performs a useful service but exploits rights of the program's user in a way the user does not intend.","likeliehood_of_exploit":"","short_description":"The product contains code that appears to be malicious in nature."}},{"_key":"CWE-507","_id":"cwe/CWE-507","_rev":"_jHZO_-u-_g","original_id":"507","datatype":"cwe","name":"Trojan Horse","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator."}},{"_key":"CWE-508","_id":"cwe/CWE-508","_rev":"_jHZO_-u-_h","original_id":"508","datatype":"cwe","name":"Non-Replicating Malicious Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"Non-replicating malicious code only resides on the target system or product that is attacked; it does not attempt to spread to other systems."}},{"_key":"CWE-509","_id":"cwe/CWE-509","_rev":"_jHZO_-u-_i","original_id":"509","datatype":"cwe","name":"Replicating Malicious Code (Virus or Worm)","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"Replicating malicious code, including viruses and worms, will attempt to attack other systems once it has successfully compromised the target system or the product."}},{"_key":"CWE-51","_id":"cwe/CWE-51","_rev":"_jHZO_-u-_j","original_id":"51","datatype":"cwe","name":"Path Equivalence: '/multiple//internal/slash'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of multiple internal slash ('/multiple//internal/slash/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-510","_id":"cwe/CWE-510","_rev":"_jHZO_-u-_k","original_id":"510","datatype":"cwe","name":"Trapdoor","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"A trapdoor is a hidden piece of code that responds to a special input, allowing its user access to resources without passing through the normal security enforcement mechanism."}},{"_key":"CWE-511","_id":"cwe/CWE-511","_rev":"_jHZO_-u-_l","original_id":"511","datatype":"cwe","name":"Logic/Time Bomb","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Integrity"}],"description":"When the time bomb or logic bomb is detonated, it may perform a denial of service such as crashing the system, deleting critical data, or degrading system response time. This bomb might be placed within either a replicating or non-replicating Trojan horse.","likeliehood_of_exploit":"","short_description":"The product contains code that is designed to disrupt the legitimate operation of the product (or its environment) when a certain time passes, or when a certain logical condition is met."}},{"_key":"CWE-512","_id":"cwe/CWE-512","_rev":"_jHZO_-u-_m","original_id":"512","datatype":"cwe","name":"Spyware","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\"Spyware\" is a commonly used term with many definitions and interpretations. In general, it is meant to refer to products that collect information or install functionality that human users might not allow if they were fully aware of the actions being taken by the software. For example, a user might expect that tax software would collect a social security number and include it when filing a tax return, but that same user would not expect gaming software to obtain the social security number from that tax software's data.","likeliehood_of_exploit":"","short_description":"The product collects personally identifiable information about a human user or the user's activities, but the product accesses this information using other resources besides itself, and it does not require that user's explicit approval or direct input into the product."}},{"_key":"CWE-514","_id":"cwe/CWE-514","_rev":"_jHZO_-u-_n","original_id":"514","datatype":"cwe","name":"Covert Channel","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"Typically the system has not given authorization for the transmission and has no knowledge of its occurrence.","likeliehood_of_exploit":"","short_description":"A covert channel is a path that can be used to transfer information in a way not intended by the system's designers."}},{"_key":"CWE-515","_id":"cwe/CWE-515","_rev":"_jHZO_-u-_o","original_id":"515","datatype":"cwe","name":"Covert Storage Channel","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"Covert storage channels may provide attackers with important information about the system in question.","Scope":"Confidentiality"},{"Impact":"Read Application Data","Note":"If these messages or packets are sent with unnecessary data contained within, it may tip off malicious listeners as to the process that created the message. With this information, attackers may learn any number of things, including the hardware platform, operating system, or algorithms used by the sender. This information can be of significant value to the user in launching further attacks.","Scope":"Confidentiality"}],"description":"Covert storage channels occur when out-of-band data is stored in messages for the purpose of memory reuse. Covert channels are frequently classified as either storage or timing channels. Examples would include using a file intended to hold only audit information to convey user passwords--using the name of a file or perhaps status bits associated with it that can be read by all users to signal the contents of the file. Steganography, concealing information in such a manner that no one but the intended recipient knows of the existence of the message, is a good example of a covert storage channel.","likeliehood_of_exploit":"High","short_description":"A covert storage channel transfers information through the setting of bits by one program and the reading of those bits by another. What distinguishes this case from that of ordinary operation is that the bits are used to convey encoded information."}},{"_key":"CWE-52","_id":"cwe/CWE-52","_rev":"_jHZO_-u-_p","original_id":"52","datatype":"cwe","name":"Path Equivalence: '/multiple/trailing/slash//'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of multiple trailing slash ('/multiple/trailing/slash//') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-520","_id":"cwe/CWE-520","_rev":"_jHZO_-u-_q","original_id":"520","datatype":"cwe","name":".NET Misconfiguration: Use of Impersonation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":".NET server applications can optionally execute using the identity of the user authenticated to the client. The intention of this functionality is to bypass authentication and access control checks within the .NET application code. Authentication is done by the underlying web server (Microsoft Internet Information Service IIS), which passes the authenticated token, or unauthenticated anonymous token, to the .NET application. Using the token to impersonate the client, the application then relies on the settings within the NTFS directories and files to control access. Impersonation enables the application, on the server running the .NET application, to both execute code and access resources in the context of the authenticated and authorized user.","likeliehood_of_exploit":"","short_description":"Allowing a .NET application to run at potentially escalated levels of access to the underlying operating and file systems can be dangerous and result in various forms of attacks."}},{"_key":"CWE-521","_id":"cwe/CWE-521","_rev":"_jHZO_-u-_r","original_id":"521","datatype":"cwe","name":"Weak Password Requirements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could easily guess user passwords and gain access user accounts.","Scope":"Access Control"}],"description":"Authentication mechanisms often rely on a memorized secret (also known as a password) to provide an assertion of identity for a user of a system. It is therefore important that this password be of sufficient complexity and impractical for an adversary to guess. The specific requirements around how complex a password needs to be depends on the type of system being protected. Selecting the correct password requirements and enforcing them through implementation are critical to the overall success of the authentication mechanism.","likeliehood_of_exploit":"","short_description":"The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts."}},{"_key":"CWE-522","_id":"cwe/CWE-522","_rev":"_jHZO_-u-_s","original_id":"522","datatype":"cwe","name":"Insufficiently Protected Credentials","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could gain access to user accounts and access sensitive data used by the user accounts.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval."}},{"_key":"CWE-523","_id":"cwe/CWE-523","_rev":"_jHZO_-u-_t","original_id":"523","datatype":"cwe","name":"Unprotected Transport of Credentials","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server."}},{"_key":"CWE-524","_id":"cwe/CWE-524","_rev":"_jHZO_-u-_u","original_id":"524","datatype":"cwe","name":"Use of Cache Containing Sensitive Information","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"\n\t   Applications may use caches to improve efficiency when communicating with remote entities or performing intensive calculations.  A cache maintains a pool of objects, threads, connections, pages, financial data, passwords, or other resources to minimize the time it takes to initialize and access these resources.  If the cache is accessible to unauthorized actors, attackers can read the cache and obtain this sensitive information.\n\t ","likeliehood_of_exploit":"","short_description":"The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere."}},{"_key":"CWE-525","_id":"cwe/CWE-525","_rev":"_jHZO_-u-_v","original_id":"525","datatype":"cwe","name":"Use of Web Browser Cache Containing Sensitive Information","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"Browsers often store information in a client-side cache, which can leave behind sensitive information for other users to find and exploit, such as passwords or credit card numbers. The locations at most risk include public terminals, such as those in libraries and Internet cafes.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached."}},{"_key":"CWE-526","_id":"cwe/CWE-526","_rev":"_jHZO_-u-_w","original_id":"526","datatype":"cwe","name":"Cleartext Storage of Sensitive Information in an Environment Variable","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"Information stored in an environment variable can be accessible by other processes with the execution context, including child processes that dependencies are executed in, or serverless functions in cloud environments. An environment variable's contents can also be inserted into messages, headers, log files, or other outputs. Often these other dependencies have no need to use the environment variable in question. A weakness that discloses environment variables could expose this information.","likeliehood_of_exploit":"","short_description":"The product uses an environment variable to store unencrypted sensitive information."}},{"_key":"CWE-527","_id":"cwe/CWE-527","_rev":"_jHZO_-u-_x","original_id":"527","datatype":"cwe","name":"Exposure of Version-Control Repository to an Unauthorized Control Sphere","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Files or Directories","Scope":"Confidentiality"}],"description":"Version control repositories such as CVS or git store version-specific metadata and other details within subdirectories. If these subdirectories are stored on a web server or added to an archive, then these could be used by an attacker. This information may include usernames, filenames, path root, IP addresses, and detailed \"diff\" data about how files have been changed - which could reveal source code snippets that were never intended to be made public.","likeliehood_of_exploit":"","short_description":"The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors."}},{"_key":"CWE-528","_id":"cwe/CWE-528","_rev":"_jHZO_-u-_y","original_id":"528","datatype":"cwe","name":"Exposure of Core Dump File to an Unauthorized Control Sphere","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Files or Directories","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors."}},{"_key":"CWE-529","_id":"cwe/CWE-529","_rev":"_jHZO_-u-_z","original_id":"529","datatype":"cwe","name":"Exposure of Access Control List Files to an Unauthorized Control Sphere","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"Exposure of these access control list files may give the attacker information about the configuration of the site or system. This information may then be used to bypass the intended security policy or identify trusted systems from which an attack can be launched.","likeliehood_of_exploit":"","short_description":"The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere."}},{"_key":"CWE-53","_id":"cwe/CWE-53","_rev":"_jHZO_-u-_0","original_id":"53","datatype":"cwe","name":"Path Equivalence: '\\multiple\\\\internal\\backslash'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of multiple internal backslash ('\\multiple\\trailing\\\\slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-530","_id":"cwe/CWE-530","_rev":"_jHZO_-u-_1","original_id":"530","datatype":"cwe","name":"Exposure of Backup File to an Unauthorized Control Sphere","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"At a minimum, an attacker who retrieves this file would have all the information contained in it, whether that be database calls, the format of parameters accepted by the application, or simply information regarding the architectural structure of your site.","Scope":"Confidentiality"}],"description":"Often, older backup files are renamed with an extension such as .~bk to distinguish them from production files. The source code for old files that have been renamed in this manner and left in the webroot can often be retrieved. This renaming may have been performed automatically by the web server, or manually by the administrator.","likeliehood_of_exploit":"","short_description":"A backup file is stored in a directory or archive that is made accessible to unauthorized actors."}},{"_key":"CWE-531","_id":"cwe/CWE-531","_rev":"_jHZO_-u-_2","original_id":"531","datatype":"cwe","name":"Inclusion of Sensitive Information in Test Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"Accessible test applications can pose a variety of security risks. Since developers or administrators rarely consider that someone besides themselves would even know about the existence of these applications, it is common for them to contain sensitive information or functions."}},{"_key":"CWE-532","_id":"cwe/CWE-532","_rev":"_jHZO_-u-_3","original_id":"532","datatype":"cwe","name":"Insertion of Sensitive Information into Log File","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"Logging sensitive user data, full path names, or system information often provides attackers with an additional, less-protected path to acquiring the information.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product writes sensitive information to a log file."}},{"_key":"CWE-535","_id":"cwe/CWE-535","_rev":"_jHZO_-u-_4","original_id":"535","datatype":"cwe","name":"Exposure of Information Through Shell Error Message","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"A command shell error message indicates that there exists an unhandled exception in the web application code. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system."}},{"_key":"CWE-536","_id":"cwe/CWE-536","_rev":"_jHZO_-u-_5","original_id":"536","datatype":"cwe","name":"Servlet Runtime Error Message Containing Sensitive Information","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"The error message may contain the location of the file in which the offending function is located. This may disclose the web root's absolute path as well as give the attacker the location of application files or configuration information. It may even disclose the portion of code that failed. In many cases, an attacker can use the data to launch further attacks against the system.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"A servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker."}},{"_key":"CWE-537","_id":"cwe/CWE-537","_rev":"_jHZO_-u-_6","original_id":"537","datatype":"cwe","name":"Java Runtime Error Message Containing Sensitive Information","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system."}},{"_key":"CWE-538","_id":"cwe/CWE-538","_rev":"_jHZO_-u-_7","original_id":"538","datatype":"cwe","name":"Insertion of Sensitive Information into Externally-Accessible File or Directory","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information."}},{"_key":"CWE-539","_id":"cwe/CWE-539","_rev":"_jHZO_-u-_8","original_id":"539","datatype":"cwe","name":"Use of Persistent Cookies Containing Sensitive Information","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"Cookies are small bits of data that are sent by the web application but stored locally in the browser. This lets the application use the cookie to pass information between pages and store variable information. The web application controls what information is stored in a cookie and how it is used. Typical types of information stored in cookies are session identifiers, personalization and customization information, and in rare cases even usernames to enable automated logins. There are two different types of cookies: session cookies and persistent cookies. Session cookies just live in the browser's memory and are not stored anywhere, but persistent cookies are stored on the browser's hard drive.   This can cause security and privacy issues depending on the information stored in the cookie and how it is accessed.","likeliehood_of_exploit":"","short_description":"The web application uses persistent cookies, but the cookies contain sensitive information."}},{"_key":"CWE-54","_id":"cwe/CWE-54","_rev":"_jHZO_-u-_9","original_id":"54","datatype":"cwe","name":"Path Equivalence: 'filedir\\' (Trailing Backslash)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of trailing backslash ('filedir\\') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-540","_id":"cwe/CWE-540","_rev":"_jHZO_-u-A-","original_id":"540","datatype":"cwe","name":"Inclusion of Sensitive Information in Source Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"There are situations where it is critical to remove source code from an area or server. For example, obtaining Perl source code on a system allows an attacker to understand the logic of the script and extract extremely useful information such as code bugs or logins and passwords.","likeliehood_of_exploit":"","short_description":"Source code on a web server or repository often contains sensitive information and should generally not be accessible to users."}},{"_key":"CWE-541","_id":"cwe/CWE-541","_rev":"_jHZO_-u-A_","original_id":"541","datatype":"cwe","name":"Inclusion of Sensitive Information in an Include File","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"If an include file source is accessible, the file can contain usernames and passwords, as well as sensitive information pertaining to the application and system."}},{"_key":"CWE-543","_id":"cwe/CWE-543","_rev":"_jHZO_-u-AA","original_id":"543","datatype":"cwe","name":"Use of Singleton Pattern Without Synchronization in a Multithreaded Context","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"The use of a singleton pattern may not be thread-safe.","likeliehood_of_exploit":"","short_description":"The product uses the singleton pattern when creating a resource within a multithreaded environment."}},{"_key":"CWE-544","_id":"cwe/CWE-544","_rev":"_jHZO_-u-AB","original_id":"544","datatype":"cwe","name":"Missing Standardized Error Handling Mechanism","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"If the product handles error messages individually, on a one-by-one basis, this is likely to result in inconsistent error handling. The causes of errors may be lost. Also, detailed information about the causes of an error may be unintentionally returned to the user.","likeliehood_of_exploit":"","short_description":"The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses."}},{"_key":"CWE-546","_id":"cwe/CWE-546","_rev":"_jHZO_-u-AC","original_id":"546","datatype":"cwe","name":"Suspicious Comment","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Note":"Suspicious comments could be an indication that there are problems in the source code that may need to be fixed and is an indication of poor quality. This could lead to further bugs and the introduction of weaknesses.","Scope":"Other"}],"description":"Many suspicious comments, such as BUG, HACK, FIXME, LATER, LATER2, TODO, in the code indicate missing security functionality and checking. Others indicate code problems that programmers should fix, such as hard-coded variables, error handling, not using stored procedures, and performance issues.","likeliehood_of_exploit":"","short_description":"The code contains comments that suggest the presence of bugs, incomplete functionality, or weaknesses."}},{"_key":"CWE-547","_id":"cwe/CWE-547","_rev":"_jHZO_-u-AD","original_id":"547","datatype":"cwe","name":"Use of Hard-coded, Security-relevant Constants","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Note":"The existence of hardcoded constants could cause unexpected behavior and the introduction of weaknesses during code maintenance or when making changes to the code if all occurrences are not modified. The use of hardcoded constants is an indication of poor quality.","Scope":"Other"}],"description":"If the developer does not find all occurrences of the hard-coded constants, an incorrect policy decision may be made if one of the constants is not changed. Making changes to these values will require code changes that may be difficult or impossible once the system is released to the field. In addition, these hard-coded values may become available to attackers if the code is ever disclosed.","likeliehood_of_exploit":"","short_description":"The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change."}},{"_key":"CWE-548","_id":"cwe/CWE-548","_rev":"_jHZO_-u-AE","original_id":"548","datatype":"cwe","name":"Exposure of Information Through Directory Listing","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Files or Directories","Note":"Exposing the contents of a directory can lead to an attacker gaining access to source code or providing useful information for the attacker to devise exploits, such as creation times of files or any information that may be encoded in file names. The directory listing may also compromise private or confidential data.","Scope":"Confidentiality"}],"description":"A directory listing provides an attacker with the complete index of all the resources located inside of the directory. The specific risks and consequences vary depending on which files are listed and accessible.","likeliehood_of_exploit":"","short_description":"A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers."}},{"_key":"CWE-549","_id":"cwe/CWE-549","_rev":"_jHZO_-u-AF","original_id":"549","datatype":"cwe","name":"Missing Password Field Masking","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords."}},{"_key":"CWE-55","_id":"cwe/CWE-55","_rev":"_jHZO_-u-AG","original_id":"55","datatype":"cwe","name":"Path Equivalence: '/./' (Single Dot Directory)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of single dot directory exploit ('/./') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-550","_id":"cwe/CWE-550","_rev":"_jHZO_-u-AH","original_id":"550","datatype":"cwe","name":"Server-generated Error Message Containing Sensitive Information","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"While error messages in and of themselves are not dangerous, per se, it is what an attacker can glean from them that might cause eventual problems.","likeliehood_of_exploit":"","short_description":"Certain conditions, such as network failure, will cause a server error message to be displayed."}},{"_key":"CWE-551","_id":"cwe/CWE-551","_rev":"_jHZO_-u-AI","original_id":"551","datatype":"cwe","name":"Incorrect Behavior Order: Authorization Before Parsing and Canonicalization","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"For instance, the character strings /./ and / both mean current directory. If /SomeDirectory is a protected directory and an attacker requests /./SomeDirectory, the attacker may be able to gain access to the resource if /./ is not converted to / before the authorization check is performed.","likeliehood_of_exploit":"","short_description":"If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection."}},{"_key":"CWE-552","_id":"cwe/CWE-552","_rev":"_jHZO_-u-AJ","original_id":"552","datatype":"cwe","name":"Files or Directories Accessible to External Parties","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product makes files or directories accessible to unauthorized actors, even though they should not be."}},{"_key":"CWE-553","_id":"cwe/CWE-553","_rev":"_jHZO_-u-AK","original_id":"553","datatype":"cwe","name":"Command Shell in Externally Accessible Directory","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server."}},{"_key":"CWE-554","_id":"cwe/CWE-554","_rev":"_jHZO_-u-AL","original_id":"554","datatype":"cwe","name":"ASP.NET Misconfiguration: Not Using Input Validation Framework","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The ASP.NET application does not use an input validation framework."}},{"_key":"CWE-555","_id":"cwe/CWE-555","_rev":"_jHZO_-u-AM","original_id":"555","datatype":"cwe","name":"J2EE Misconfiguration: Plaintext Password in Configuration File","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"Storing a plaintext password in a configuration file allows anyone who can read the file to access the password-protected resource, making it an easy target for attackers.","likeliehood_of_exploit":"","short_description":"The J2EE application stores a plaintext password in a configuration file."}},{"_key":"CWE-556","_id":"cwe/CWE-556","_rev":"_jHZO_-u-AN","original_id":"556","datatype":"cwe","name":"ASP.NET Misconfiguration: Use of Identity Impersonation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"The use of impersonated credentials allows an ASP.NET application to run with either the privileges of the client on whose behalf it is executing or with arbitrary privileges granted in its configuration.","likeliehood_of_exploit":"","short_description":"Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges."}},{"_key":"CWE-558","_id":"cwe/CWE-558","_rev":"_jHZO_-u-AO","original_id":"558","datatype":"cwe","name":"Use of getlogin() in Multithreaded Application","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"The getlogin() function returns a pointer to a string that contains the name of the user associated with the calling process. The function is not reentrant, meaning that if it is called from another process, the contents are not locked out and the value of the string can be changed by another process. This makes it very risky to use because the username can be changed by other processes, so the results of the function cannot be trusted.","likeliehood_of_exploit":"","short_description":"The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values."}},{"_key":"CWE-56","_id":"cwe/CWE-56","_rev":"_jHZO_-u-AP","original_id":"56","datatype":"cwe","name":"Path Equivalence: 'filedir*' (Wildcard)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product accepts path input in the form of asterisk wildcard ('filedir*') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files."}},{"_key":"CWE-560","_id":"cwe/CWE-560","_rev":"_jHZO_-u-AQ","original_id":"560","datatype":"cwe","name":"Use of umask() with chmod-style Argument","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product calls umask() with an incorrect argument that is specified as if it is an argument to chmod()."}},{"_key":"CWE-561","_id":"cwe/CWE-561","_rev":"_jHZO_-u-AR","original_id":"561","datatype":"cwe","name":"Dead Code","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Note":"Dead code that results from code that can never be executed is an indication of problems with the source code that needs to be fixed and is an indication of poor quality.","Scope":"Other"},{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":"Dead code is code that can never be executed in a running program. The surrounding code makes it impossible for a section of code to ever be executed.","likeliehood_of_exploit":"","short_description":"The product contains dead code, which can never be executed."}},{"_key":"CWE-562","_id":"cwe/CWE-562","_rev":"_jHZO_-u-AS","original_id":"562","datatype":"cwe","name":"Return of Stack Variable Address","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"If the returned stack buffer address is dereferenced after the return, then an attacker may be able to modify or read memory, depending on how the address is used.  If the address is used for reading, then the address itself may be exposed, or the contents that the address points to.  If the address is used for writing, this can lead to a crash and possibly code execution.","Scope":"Confidentiality"}],"description":"Because local variables are allocated on the stack, when a program returns a pointer to a local variable, it is returning a stack address. A subsequent function call is likely to re-use this same stack address, thereby overwriting the value of the pointer, which no longer corresponds to the same variable since a function's stack frame is invalidated when it returns. At best this will cause the value of the pointer to change unexpectedly. In many cases it causes the program to crash the next time the pointer is dereferenced.","likeliehood_of_exploit":"","short_description":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash."}},{"_key":"CWE-563","_id":"cwe/CWE-563","_rev":"_jHZO_-u-AT","original_id":"563","datatype":"cwe","name":"Assignment to Variable without Use","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Note":"This weakness could be an indication of a bug in the program or a deprecated variable that was not removed and is an indication of poor quality. This could lead to further bugs and the introduction of weaknesses.","Scope":"Other"}],"description":"After the assignment, the variable is either assigned another value or goes out of scope. It is likely that the variable is simply vestigial, but it is also possible that the unused variable points out a bug.","likeliehood_of_exploit":"","short_description":"The variable's value is assigned but never used, making it a dead store."}},{"_key":"CWE-564","_id":"cwe/CWE-564","_rev":"_jHZO_-u-AU","original_id":"564","datatype":"cwe","name":"SQL Injection: Hibernate","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"Using Hibernate to execute a dynamic SQL statement built with user-controlled input can allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands."}},{"_key":"CWE-565","_id":"cwe/CWE-565","_rev":"_jHZO_-u-AV","original_id":"565","datatype":"cwe","name":"Reliance on Cookies without Validation and Integrity Checking","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"It is dangerous to use cookies to set a user's privileges. The cookie can be manipulated to escalate an attacker's privileges to an administrative level.","Scope":"Access Control"}],"description":"Attackers can easily modify cookies, within the browser or by implementing the client-side code outside of the browser. Reliance on cookies without detailed validation and integrity checking can allow attackers to bypass authentication, conduct injection attacks such as SQL injection and cross-site scripting, or otherwise modify inputs in unexpected ways.","likeliehood_of_exploit":"","short_description":"The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user."}},{"_key":"CWE-566","_id":"cwe/CWE-566","_rev":"_jHZO_-u-AW","original_id":"566","datatype":"cwe","name":"Authorization Bypass Through User-Controlled SQL Primary Key","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor."}},{"_key":"CWE-567","_id":"cwe/CWE-567","_rev":"_jHZO_-u-AX","original_id":"567","datatype":"cwe","name":"Unsynchronized Access to Shared Data in a Multithreaded Context","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"If the shared variable contains sensitive data, it may be manipulated or displayed in another user session. If this data is used to control the application, its value can be manipulated to cause the application to crash or perform poorly.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes."}},{"_key":"CWE-568","_id":"cwe/CWE-568","_rev":"_jHZO_-u-AY","original_id":"568","datatype":"cwe","name":"finalize() Method Without super.finalize()","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"The Java Language Specification states that it is a good practice for a finalize() method to call super.finalize().","likeliehood_of_exploit":"","short_description":"The product contains a finalize() method that does not call super.finalize()."}},{"_key":"CWE-57","_id":"cwe/CWE-57","_rev":"_jHZO_-u-AZ","original_id":"57","datatype":"cwe","name":"Path Equivalence: 'fakedir/../realdir/filename'","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product contains protection mechanisms to restrict access to 'realdir/filename', but it constructs pathnames using external input in the form of 'fakedir/../realdir/filename' that are not handled by those mechanisms. This allows attackers to perform unauthorized actions against the targeted file."}},{"_key":"CWE-570","_id":"cwe/CWE-570","_rev":"_jHZO_-u-Aa","original_id":"570","datatype":"cwe","name":"Expression is Always False","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product contains an expression that will always evaluate to false."}},{"_key":"CWE-571","_id":"cwe/CWE-571","_rev":"_jHZO_-u-Ab","original_id":"571","datatype":"cwe","name":"Expression is Always True","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product contains an expression that will always evaluate to true."}},{"_key":"CWE-572","_id":"cwe/CWE-572","_rev":"_jHZO_-u-Ac","original_id":"572","datatype":"cwe","name":"Call to Thread run() instead of start()","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"In most cases a direct call to a Thread object's run() method is a bug. The programmer intended to begin a new thread of control, but accidentally called run() instead of start(), so the run() method will execute in the caller's thread of control.","likeliehood_of_exploit":"","short_description":"The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee."}},{"_key":"CWE-573","_id":"cwe/CWE-573","_rev":"_jHZO_-u-Ad","original_id":"573","datatype":"cwe","name":"Improper Following of Specification by Caller","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"When leveraging external functionality, such as an API, it is important that the caller does so in accordance with the requirements of the external functionality or else unintended behaviors may result, possibly leaving the system vulnerable to any number of exploits.","likeliehood_of_exploit":"","short_description":"The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform."}},{"_key":"CWE-574","_id":"cwe/CWE-574","_rev":"_jHZO_-u-Ae","original_id":"574","datatype":"cwe","name":"EJB Bad Practices: Use of Synchronization Primitives","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not use thread synchronization primitives to synchronize execution of multiple instances.\" The specification justifies this requirement in the following way: \"This rule is required to ensure consistent runtime semantics because while some EJB containers may use a single JVM to execute all enterprise bean's instances, others may distribute the instances across multiple JVMs.\"","likeliehood_of_exploit":"","short_description":"The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives."}},{"_key":"CWE-575","_id":"cwe/CWE-575","_rev":"_jHZO_-u-Af","original_id":"575","datatype":"cwe","name":"EJB Bad Practices: Use of AWT Swing","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not use the AWT functionality to attempt to output information to a display, or to input information from a keyboard.\" The specification justifies this requirement in the following way: \"Most servers do not allow direct interaction between an application program and a keyboard/display attached to the server system.\"","likeliehood_of_exploit":"","short_description":"The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing."}},{"_key":"CWE-576","_id":"cwe/CWE-576","_rev":"_jHZO_-u-Ag","original_id":"576","datatype":"cwe","name":"EJB Bad Practices: Use of Java I/O","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not use the java.io package to attempt to access files and directories in the file system.\" The specification justifies this requirement in the following way: \"The file system APIs are not well-suited for business components to access data. Business components should use a resource manager API, such as JDBC, to store data.\"","likeliehood_of_exploit":"","short_description":"The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package."}},{"_key":"CWE-577","_id":"cwe/CWE-577","_rev":"_jHZO_-u-Ah","original_id":"577","datatype":"cwe","name":"EJB Bad Practices: Use of Sockets","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"An enterprise bean must not attempt to listen on a socket, accept connections on a socket, or use a socket for multicast.\" The specification justifies this requirement in the following way: \"The EJB architecture allows an enterprise bean instance to be a network socket client, but it does not allow it to be a network server. Allowing the instance to become a network server would conflict with the basic function of the enterprise bean-- to serve the EJB clients.\"","likeliehood_of_exploit":"","short_description":"The product violates the Enterprise JavaBeans (EJB) specification by using sockets."}},{"_key":"CWE-578","_id":"cwe/CWE-578","_rev":"_jHZO_-u-Ai","original_id":"578","datatype":"cwe","name":"EJB Bad Practices: Use of Class Loader","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the following EJB guideline: \"The enterprise bean must not attempt to create a class loader; obtain the current class loader; set the context class loader; set security manager; create a new security manager; stop the JVM; or change the input, output, and error streams.\" The specification justifies this requirement in the following way: \"These functions are reserved for the EJB container. Allowing the enterprise bean to use these functions could compromise security and decrease the container's ability to properly manage the runtime environment.\"","likeliehood_of_exploit":"","short_description":"The product violates the Enterprise JavaBeans (EJB) specification by using the class loader."}},{"_key":"CWE-579","_id":"cwe/CWE-579","_rev":"_jHZO_-u-Aj","original_id":"579","datatype":"cwe","name":"J2EE Bad Practices: Non-serializable Object Stored in Session","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"A J2EE application can make use of multiple JVMs in order to improve application reliability and performance. In order to make the multiple JVMs appear as a single application to the end user, the J2EE container can replicate an HttpSession object across multiple JVMs so that if one JVM becomes unavailable another can step in and take its place without disrupting the flow of the application. This is only possible if all session data is serializable, allowing the session to be duplicated between the JVMs.","likeliehood_of_exploit":"","short_description":"The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability."}},{"_key":"CWE-58","_id":"cwe/CWE-58","_rev":"_jHZO_-u-Ak","original_id":"58","datatype":"cwe","name":"Path Equivalence: Windows 8.3 Filename","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"On later Windows operating systems, a file can have a \"long name\" and a short name that is compatible with older Windows file systems, with up to 8 characters in the filename and 3 characters for the extension. These \"8.3\" filenames, therefore, act as an alternate name for files with long names, so they are useful pathname equivalence manipulations.","likeliehood_of_exploit":"","short_description":"The product contains a protection mechanism that restricts access to a long filename on a Windows operating system, but it does not properly restrict access to the equivalent short \"8.3\" filename."}},{"_key":"CWE-580","_id":"cwe/CWE-580","_rev":"_jHZO_-u-Al","original_id":"580","datatype":"cwe","name":"clone() Method Without super.clone()","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"All implementations of clone() should obtain the new object by calling super.clone(). If a class does not follow this convention, a subclass's clone() method will return an object of the wrong type.","likeliehood_of_exploit":"","short_description":"The product contains a clone() method that does not call super.clone() to obtain the new object."}},{"_key":"CWE-581","_id":"cwe/CWE-581","_rev":"_jHZO_-y---","original_id":"581","datatype":"cwe","name":"Object Model Violation: Just One of Equals and Hashcode Defined","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"If this invariant is not upheld, it is likely to cause trouble if objects of this class are stored in a collection. If the objects of the class in question are used as a key in a Hashtable or if they are inserted into a Map or Set, it is critical that equal objects have equal hashcodes.","Scope":"Other"}],"description":"Java objects are expected to obey a number of invariants related to equality. One of these invariants is that equal objects must have equal hashcodes. In other words, if a.equals(b) == true then a.hashCode() == b.hashCode().","likeliehood_of_exploit":"","short_description":"The product does not maintain equal hashcodes for equal objects."}},{"_key":"CWE-582","_id":"cwe/CWE-582","_rev":"_jHZO_-y--_","original_id":"582","datatype":"cwe","name":"Array Declared Public, Final, and Static","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"Because arrays are mutable objects, the final constraint requires that the array object itself be assigned only once, but makes no guarantees about the values of the array elements. Since the array is public, a malicious program can change the values stored in the array. As such, in most cases an array declared public, final and static is a bug.","likeliehood_of_exploit":"","short_description":"The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified."}},{"_key":"CWE-583","_id":"cwe/CWE-583","_rev":"_jHZO_-y--A","original_id":"583","datatype":"cwe","name":"finalize() Method Declared Public","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Availability"}],"description":"A product should never call finalize explicitly, except to call super.finalize() inside an implementation of finalize(). In mobile code situations, the otherwise error prone practice of manual garbage collection can become a security threat if an attacker can maliciously invoke a finalize() method because it is declared with public access.","likeliehood_of_exploit":"","short_description":"The product violates secure coding principles for mobile code by declaring a finalize() method public."}},{"_key":"CWE-584","_id":"cwe/CWE-584","_rev":"_jHZO_-y--B","original_id":"584","datatype":"cwe","name":"Return Inside Finally Block","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The code has a return statement inside a finally block, which will cause any thrown exception in the try block to be discarded."}},{"_key":"CWE-585","_id":"cwe/CWE-585","_rev":"_jHZO_-y--C","original_id":"585","datatype":"cwe","name":"Empty Synchronized Block","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"An empty synchronized block will wait until nobody else is using the synchronizer being specified. While this may be part of the desired behavior, because you haven't protected the subsequent code by placing it inside the synchronized block, nothing is stopping somebody else from modifying whatever it was you were waiting for while you run the subsequent code.","Scope":"Other"}],"description":"An empty synchronized block does not actually accomplish any synchronization and may indicate a troubled section of code. An empty synchronized block can occur because code no longer needed within the synchronized block is commented out without removing the synchronized block.","likeliehood_of_exploit":"","short_description":"The product contains an empty synchronized block."}},{"_key":"CWE-586","_id":"cwe/CWE-586","_rev":"_jHZO_-y--D","original_id":"586","datatype":"cwe","name":"Explicit Call to Finalize()","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"While the Java Language Specification allows an object's finalize() method to be called from outside the finalizer, doing so is usually a bad idea. For example, calling finalize() explicitly means that finalize() will be called more than once: the first time will be the explicit call and the last time will be the call that is made after the object is garbage collected.","likeliehood_of_exploit":"","short_description":"The product makes an explicit call to the finalize() method from outside the finalizer."}},{"_key":"CWE-587","_id":"cwe/CWE-587","_rev":"_jHZO_-y--E","original_id":"587","datatype":"cwe","name":"Assignment of a Fixed Address to a Pointer","metadata":{"applicable_platform":["Assembly"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"If one executes code at a known location, an attacker might be able to inject code there beforehand.","Scope":"Availability"},{"Impact":"Reduce Reliability","Note":"If the code is ported to another platform or environment, the pointer is likely to be invalid and cause a crash.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"The data at a known pointer location can be easily read or influenced by an attacker.","Scope":"Integrity"}],"description":"Using a fixed address is not portable, because that address will probably not be valid in all environments or platforms.","likeliehood_of_exploit":"","short_description":"The product sets a pointer to a specific address other than NULL or 0."}},{"_key":"CWE-588","_id":"cwe/CWE-588","_rev":"_jHZO_-y--F","original_id":"588","datatype":"cwe","name":"Attempt to Access Child of a Non-structure Pointer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"Adjacent variables in memory may be corrupted by assignments performed on fields after the cast.","Scope":"Integrity"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Execution may end due to a memory access error.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption."}},{"_key":"CWE-589","_id":"cwe/CWE-589","_rev":"_jHZO_-y--G","original_id":"589","datatype":"cwe","name":"Call to Non-ubiquitous API","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"Some functions that offer security features supported by the OS are not available on all versions of the OS in common use. Likewise, functions are often deprecated or made obsolete for security reasons and should not be used.","likeliehood_of_exploit":"","short_description":"The product uses an API function that does not exist on all versions of the target platform. This could cause portability problems or inconsistencies that allow denial of service or other consequences."}},{"_key":"CWE-59","_id":"cwe/CWE-59","_rev":"_jHZO_-y--H","original_id":"59","datatype":"cwe","name":"Improper Link Resolution Before File Access ('Link Following')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"An attacker may be able to traverse the file system to unintended locations and read or overwrite the contents of unexpected files. If the files are used for a security mechanism then an attacker may be able to bypass the mechanism.","Scope":"Access Control"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Windows simple shortcuts, sometimes referred to as soft links, can be exploited remotely since a \".LNK\" file can be uploaded like a normal file. This can enable remote execution.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource."}},{"_key":"CWE-590","_id":"cwe/CWE-590","_rev":"_jHZO_-y--I","original_id":"590","datatype":"cwe","name":"Free of Memory not on the Heap","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Memory","Note":"There is the potential for arbitrary code execution with privileges of the vulnerable program via a \"write, what where\" primitive. If pointers to memory which hold user information are freed, a malicious user will be able to write 4 bytes anywhere in memory.","Scope":"Availability"}],"description":"When free() is called on an invalid pointer, the program's memory management data structures may become corrupted. This corruption can cause the program to crash or, in some circumstances, an attacker may be able to cause free() to operate on controllable memory locations to modify critical program variables or execute code.","likeliehood_of_exploit":"","short_description":"The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc()."}},{"_key":"CWE-591","_id":"cwe/CWE-591","_rev":"_jHZO_-y--J","original_id":"591","datatype":"cwe","name":"Sensitive Data Storage in Improperly Locked Memory","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"Sensitive data that is written to a swap file may be exposed.","Scope":"Confidentiality"}],"description":"On Windows systems the VirtualLock function can lock a page of memory to ensure that it will remain present in memory and not be swapped to disk. However, on older versions of Windows, such as 95, 98, or Me, the VirtualLock() function is only a stub and provides no protection. On POSIX systems the mlock() call ensures that a page will stay resident in memory but does not guarantee that the page will not appear in the swap. Therefore, it is unsuitable for use as a protection mechanism for sensitive data. Some platforms, in particular Linux, do make the guarantee that the page will not be swapped, but this is non-standard and is not portable. Calls to mlock() also require supervisor privilege. Return values for both of these calls must be checked to ensure that the lock operation was actually successful.","likeliehood_of_exploit":"","short_description":"The product stores sensitive data in memory that is not locked, or that has been incorrectly locked, which might cause the memory to be written to swap files on disk by the virtual memory manager. This can make the data more accessible to external actors."}},{"_key":"CWE-593","_id":"cwe/CWE-593","_rev":"_jHZO_-y--K","original_id":"593","datatype":"cwe","name":"Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"No authentication takes place in this process, bypassing an assumed protection of encryption.","Scope":"Access Control"},{"Impact":"Read Application Data","Note":"The encrypted communication between a user and a trusted host may be subject to a sniffing attack.","Scope":"Confidentiality"}],"description":"If the program modifies the SSL_CTX object after creating SSL objects from it, there is the possibility that older SSL objects created from the original context could all be affected by that change.","likeliehood_of_exploit":"","short_description":"The product modifies the SSL context after connection creation has begun."}},{"_key":"CWE-594","_id":"cwe/CWE-594","_rev":"_jHZO_-y--L","original_id":"594","datatype":"cwe","name":"J2EE Framework: Saving Unserializable Objects to Disk","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"Data represented by unserializable objects can be corrupted.","Scope":"Integrity"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Non-serializability of objects can lead to system crash.","Scope":"Availability"}],"description":"In heavy load conditions, most J2EE application frameworks flush objects to disk to manage memory requirements of incoming requests. For example, session scoped objects, and even application scoped objects, are written to disk when required. While these application frameworks do the real work of writing objects to disk, they do not enforce that those objects be serializable, thus leaving the web application vulnerable to crashes induced by serialization failure. An attacker may be able to mount a denial of service attack by sending enough requests to the server to force the web application to save objects to disk.","likeliehood_of_exploit":"","short_description":"When the J2EE container attempts to write unserializable objects to disk there is no guarantee that the process will complete successfully."}},{"_key":"CWE-595","_id":"cwe/CWE-595","_rev":"_jHZO_-y--M","original_id":"595","datatype":"cwe","name":"Comparison of Object References Instead of Object Contents","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"This weakness can lead to erroneous results that can cause unexpected application behaviors.","Scope":"Other"}],"description":"For example, in Java, comparing objects using == usually produces deceptive results, since the == operator compares object references rather than values; often, this means that using == for strings is actually comparing the strings' references, not their values.","likeliehood_of_exploit":"","short_description":"The product compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects."}},{"_key":"CWE-597","_id":"cwe/CWE-597","_rev":"_jHZO_-y--N","original_id":"597","datatype":"cwe","name":"Use of Wrong Operator in String Comparison","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"In Java, using == or != to compare two strings for equality actually compares two objects for equality rather than their string values for equality. Chances are good that the two references will never be equal. While this weakness often only affects program correctness, if the equality is used for a security decision, the unintended comparison result could be leveraged to affect program security.","likeliehood_of_exploit":"","short_description":"The product uses the wrong operator when comparing a string, such as using \"==\" when the .equals() method should be used instead."}},{"_key":"CWE-598","_id":"cwe/CWE-598","_rev":"_jHZO_-y--O","original_id":"598","datatype":"cwe","name":"Use of GET Request Method With Sensitive Query Strings","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"At a minimum, attackers can garner information from query strings that can be utilized in escalating their method of attack, such as information about the internal workings of the application or database column names. Successful exploitation of query string parameter vulnerabilities could lead to an attacker impersonating a legitimate user, obtaining proprietary data, or simply executing actions not intended by the application developers.","Scope":"Confidentiality"}],"description":"The query string for the URL could be saved in the browser's history, passed through Referers to other web sites, stored in web logs, or otherwise recorded in other sources.  If the query string contains sensitive information such as session identifiers, then attackers can use this information to launch further attacks.\n\t ","likeliehood_of_exploit":"","short_description":"The web application uses the HTTP GET method to process a request and includes sensitive information in the query string of that request."}},{"_key":"CWE-599","_id":"cwe/CWE-599","_rev":"_jHZO_-y--P","original_id":"599","datatype":"cwe","name":"Missing Validation of OpenSSL Certificate","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"The data read may not be properly secured, it might be viewed by an attacker.","Scope":"Confidentiality"},{"Impact":"Gain Privileges or Assume Identity","Note":"Trust afforded to the system in question may allow for spoofing or redirection attacks.","Scope":"Access Control"},{"Impact":"Gain Privileges or Assume Identity","Note":"If the certificate is not checked, it may be possible for a redirection or spoofing attack to allow a malicious host with a valid certificate to provide data under the guise of a trusted host. While the attacker in question may have a valid certificate, it may simply be a valid certificate for a different site. In order to ensure data integrity, we must check that the certificate is valid, and that it pertains to the site we wish to access.","Scope":"Access Control"}],"description":"This could allow an attacker to use an invalid certificate to claim to be a trusted host, use expired certificates, or conduct other attacks that could be detected if the certificate is properly validated.","likeliehood_of_exploit":"","short_description":"The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements."}},{"_key":"CWE-6","_id":"cwe/CWE-6","_rev":"_jHZO_-y--Q","original_id":"6","datatype":"cwe","name":"J2EE Misconfiguration: Insufficient Session-ID Length","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If an attacker can guess an authenticated user's session identifier, they can take over the user's session.","Scope":"Access Control"}],"description":"If an attacker can guess or steal a session ID, then they may be able to take over the user's session (called session hijacking). The number of possible session IDs increases with increased session ID length, making it more difficult to guess or steal a session ID.","likeliehood_of_exploit":"","short_description":"The J2EE application is configured to use an insufficient session ID length."}},{"_key":"CWE-600","_id":"cwe/CWE-600","_rev":"_jHZO_-y--R","original_id":"600","datatype":"cwe","name":"Uncaught Exception in Servlet ","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"}],"description":"When a Servlet throws an exception, the default error response the Servlet container sends back to the user typically includes debugging information. This information is of great value to an attacker. For example, a stack trace might show the attacker a malformed SQL query string, the type of database being used, and the version of the application container. This information enables the attacker to target known vulnerabilities in these components.","likeliehood_of_exploit":"","short_description":"The Servlet does not catch all exceptions, which may reveal sensitive debugging information."}},{"_key":"CWE-601","_id":"cwe/CWE-601","_rev":"_jHZO_-y--S","original_id":"601","datatype":"cwe","name":"URL Redirection to Untrusted Site ('Open Redirect')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"The user may be redirected to an untrusted page that contains malware which may then compromise the user's machine. This will expose the user to extensive risk and the user's interaction with the web server may also be compromised if the malware conducts keylogging or other attacks that steal credentials, personally identifiable information (PII), or other important data.","Scope":"Access Control"},{"Impact":"Other","Note":"By modifying the URL value to a malicious site, an attacker may successfully launch a phishing scam. The user may be subjected to phishing attacks by being redirected to an untrusted page. The phishing attack may point to an attacker controlled web page that appears to be a trusted web site. The phishers may then steal the user's credentials and then use these credentials to access the legitimate web site. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy appearance.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Low","short_description":"The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect."}},{"_key":"CWE-602","_id":"cwe/CWE-602","_rev":"_jHZO_-y--T","original_id":"602","datatype":"cwe","name":"Client-Side Enforcement of Server-Side Security","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"Client-side validation checks can be easily bypassed, allowing malformed or unexpected input to pass into the application, potentially as trusted data. This may lead to unexpected states, behaviors and possibly a resulting crash.","Scope":"Availability"},{"Impact":"Gain Privileges or Assume Identity","Note":"Client-side checks for authentication can be easily bypassed, allowing clients to escalate their access levels and perform unintended actions.","Scope":"Access Control"}],"description":"When the server relies on protection mechanisms placed on the client side, an attacker can modify the client-side behavior to bypass the protection mechanisms, resulting in potentially unexpected interactions between the client and server. The consequences will vary, depending on what the mechanisms are trying to protect.","likeliehood_of_exploit":"Medium","short_description":"The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server."}},{"_key":"CWE-603","_id":"cwe/CWE-603","_rev":"_jHZO_-y--U","original_id":"603","datatype":"cwe","name":"Use of Client-Side Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"Client-side authentication is extremely weak and may be breached easily. Any attacker may read the source code and reverse-engineer the authentication mechanism to access parts of the application which would otherwise be protected.","likeliehood_of_exploit":"","short_description":"A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check."}},{"_key":"CWE-605","_id":"cwe/CWE-605","_rev":"_jHZO_-y--V","original_id":"605","datatype":"cwe","name":"Multiple Binds to the Same Port","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Packets from a variety of network services may be stolen or the services spoofed.","Scope":"Integrity"}],"description":"On most systems, a combination of setting the SO_REUSEADDR socket option, and a call to bind() allows any process to bind to a port to which a previous process has bound with INADDR_ANY. This allows a user to bind to the specific address of a server bound to INADDR_ANY on an unprivileged port, and steal its UDP packets/TCP connection.","likeliehood_of_exploit":"","short_description":"When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed."}},{"_key":"CWE-606","_id":"cwe/CWE-606","_rev":"_jHZO_-y--W","original_id":"606","datatype":"cwe","name":"Unchecked Input for Loop Condition","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping."}},{"_key":"CWE-607","_id":"cwe/CWE-607","_rev":"_jHZO_-y--X","original_id":"607","datatype":"cwe","name":"Public Static Final Field References Mutable Object","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package."}},{"_key":"CWE-608","_id":"cwe/CWE-608","_rev":"_jHZO_-y--Y","original_id":"608","datatype":"cwe","name":"Struts: Non-private Field in ActionForm Class","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter."}},{"_key":"CWE-609","_id":"cwe/CWE-609","_rev":"_jHZO_-y--Z","original_id":"609","datatype":"cwe","name":"Double-Checked Locking","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"Double-checked locking refers to the situation where a programmer checks to see if a resource has been initialized, grabs a lock, checks again to see if the resource has been initialized, and then performs the initialization if it has not occurred yet. This should not be done, as it is not guaranteed to work in all languages and on all architectures. In summary, other threads may not be operating inside the synchronous block and are not guaranteed to see the operations execute in the same order as they would appear inside the synchronous block.","likeliehood_of_exploit":"","short_description":"The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient."}},{"_key":"CWE-61","_id":"cwe/CWE-61","_rev":"_jHZO_-y--a","original_id":"61","datatype":"cwe","name":"UNIX Symbolic Link (Symlink) Following","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"A product that allows UNIX symbolic links (symlink) as part of paths whether in internal code or through user input can allow an attacker to spoof the symbolic link and traverse the file system to unintended locations or access arbitrary files. The symbolic link can permit an attacker to read/write/corrupt a file that they originally did not have permissions to access.","likeliehood_of_exploit":"High","short_description":"The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files."}},{"_key":"CWE-610","_id":"cwe/CWE-610","_rev":"_jHZO_-y--b","original_id":"610","datatype":"cwe","name":"Externally Controlled Reference to a Resource in Another Sphere","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere."}},{"_key":"CWE-611","_id":"cwe/CWE-611","_rev":"_jHZO_-y--c","original_id":"611","datatype":"cwe","name":"Improper Restriction of XML External Entity Reference","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Files or Directories","Note":"If the attacker is able to include a crafted DTD and a default entity resolver is enabled, the attacker may be able to access arbitrary files on the system.","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"The DTD may include arbitrary HTTP requests that the server may execute. This could lead to other attacks leveraging the server's trust relationship with other entities.","Scope":"Integrity"},{"Impact":"DoS: Resource Consumption (Memory)","Note":"The product could consume excessive CPU cycles or memory using a URI that points to a large file, or a device that always returns data such as /dev/random. Alternately, the URI could reference a file that contains many nested or recursive entity references to further slow down parsing.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output."}},{"_key":"CWE-612","_id":"cwe/CWE-612","_rev":"_jHZO_-y--d","original_id":"612","datatype":"cwe","name":"Improper Authorization of Index Containing Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"Web sites and other document repositories may apply an indexing routine against a group of private documents to facilitate search.  If the index's results are available to parties who do not have access to the documents being indexed, then attackers could obtain portions of the documents by conducting targeted searches and reading the results.  The risk is especially dangerous if search results include surrounding text that was not part of the search query. This issue can appear in search engines that are not configured (or implemented) to ignore critical files that should remain hidden; even without permissions to download these files directly, the remote user could read them.","likeliehood_of_exploit":"","short_description":"The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information."}},{"_key":"CWE-613","_id":"cwe/CWE-613","_rev":"_jHZO_-y--e","original_id":"613","datatype":"cwe","name":"Insufficient Session Expiration","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\""}},{"_key":"CWE-614","_id":"cwe/CWE-614","_rev":"_jHZO_-y--f","original_id":"614","datatype":"cwe","name":"Sensitive Cookie in HTTPS Session Without 'Secure' Attribute","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session."}},{"_key":"CWE-615","_id":"cwe/CWE-615","_rev":"_jHZO_-y--g","original_id":"615","datatype":"cwe","name":"Inclusion of Sensitive Information in Source Code Comments","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"}],"description":"An attacker who finds these comments can map the application's structure and files, expose hidden parts of the site, and study the fragments of code to reverse engineer the application, which may help develop further attacks against the site.","likeliehood_of_exploit":"","short_description":"While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc."}},{"_key":"CWE-616","_id":"cwe/CWE-616","_rev":"_jHZO_-y--h","original_id":"616","datatype":"cwe","name":"Incomplete Identification of Uploaded File Variables (PHP)","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"These global variables could be overwritten by POST requests, cookies, or other methods of populating or overwriting these variables. This could be used to read or process arbitrary files by providing values such as \"/etc/passwd\".","likeliehood_of_exploit":"","short_description":"The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files."}},{"_key":"CWE-617","_id":"cwe/CWE-617","_rev":"_jHZO_-y--i","original_id":"617","datatype":"cwe","name":"Reachable Assertion","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"An attacker that can trigger an assert statement can still lead to a denial of service if the relevant code can be triggered by an attacker, and if the scope of the assert() extends beyond the attacker's own session.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary."}},{"_key":"CWE-618","_id":"cwe/CWE-618","_rev":"_jHZO_-y--j","original_id":"618","datatype":"cwe","name":"Exposed Unsafe ActiveX Method","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"ActiveX controls can exercise far greater control over the operating system than typical Java or javascript. Exposed methods can be subject to various vulnerabilities, depending on the implemented behaviors of those methods, and whether input validation is performed on the provided arguments. If there is no integrity checking or origin validation, this method could be invoked by attackers.","likeliehood_of_exploit":"","short_description":"An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain)."}},{"_key":"CWE-619","_id":"cwe/CWE-619","_rev":"_jHZO_-y--k","original_id":"619","datatype":"cwe","name":"Dangling Database Cursor ('Cursor Injection')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"For example, an improper dangling cursor could arise from unhandled exceptions. The impact of the issue depends on the cursor's role, but SQL injection attacks are commonly possible.","likeliehood_of_exploit":"","short_description":"If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor \"dangling.\""}},{"_key":"CWE-62","_id":"cwe/CWE-62","_rev":"_jHZO_-y--l","original_id":"62","datatype":"cwe","name":"UNIX Hard Link","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"Failure for a system to check for hard links can result in vulnerability to different types of attacks. For example, an attacker can escalate their privileges if a file used by a privileged program is replaced with a hard link to a sensitive file (e.g. /etc/passwd). When the process opens the file, the attacker can assume the privileges of that process.","likeliehood_of_exploit":"","short_description":"The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files."}},{"_key":"CWE-620","_id":"cwe/CWE-620","_rev":"_jHZO_-y--m","original_id":"620","datatype":"cwe","name":"Unverified Password Change","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"This could be used by an attacker to change passwords for another user, thus gaining the privileges associated with that user.","likeliehood_of_exploit":"","short_description":"When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication."}},{"_key":"CWE-621","_id":"cwe/CWE-621","_rev":"_jHZO_-y--n","original_id":"621","datatype":"cwe","name":"Variable Extraction Error","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could modify sensitive data or program variables.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables."}},{"_key":"CWE-622","_id":"cwe/CWE-622","_rev":"_jHZO_-y--o","original_id":"622","datatype":"cwe","name":"Improper Validation of Function Hook Arguments","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"Such hooks can be used in defensive software that runs with privileges, such as anti-virus or firewall, which hooks kernel calls. When the arguments are not validated, they could be used to bypass the protection scheme or attack the product itself.","likeliehood_of_exploit":"","short_description":"The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities."}},{"_key":"CWE-623","_id":"cwe/CWE-623","_rev":"_jHZO_-y--p","original_id":"623","datatype":"cwe","name":"Unsafe ActiveX Control Marked Safe For Scripting","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"This might allow attackers to use dangerous functionality via a web page that accesses the control, which can lead to different resultant vulnerabilities, depending on the control's behavior.","likeliehood_of_exploit":"","short_description":"An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting."}},{"_key":"CWE-624","_id":"cwe/CWE-624","_rev":"_jHZO_-y--q","original_id":"624","datatype":"cwe","name":"Executable Regular Expression Error","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"Case (2) is possible in the PHP preg_replace() function, and possibly in other languages when a user-controlled input is inserted into a string that is later parsed as a regular expression.","likeliehood_of_exploit":"","short_description":"The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers."}},{"_key":"CWE-625","_id":"cwe/CWE-625","_rev":"_jHZO_-y--r","original_id":"625","datatype":"cwe","name":"Permissive Regular Expression","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a regular expression that does not sufficiently restrict the set of allowed values."}},{"_key":"CWE-626","_id":"cwe/CWE-626","_rev":"_jHZO_-y--s","original_id":"626","datatype":"cwe","name":"Null Byte Interaction Error (Poison Null Byte)","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not properly handle null bytes or NUL characters when passing data between different representations or components."}},{"_key":"CWE-627","_id":"cwe/CWE-627","_rev":"_jHZO_-y--t","original_id":"627","datatype":"cwe","name":"Dynamic Variable Evaluation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could gain unauthorized access to internal program variables and execute arbitrary code.","Scope":"Availability"}],"description":"The resultant vulnerabilities depend on the behavior of the application, both at the crossover point and in any control/data flow that is reachable by the related variables or functions.","likeliehood_of_exploit":"","short_description":"In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions."}},{"_key":"CWE-628","_id":"cwe/CWE-628","_rev":"_jHZO_-y--u","original_id":"628","datatype":"cwe","name":"Function Call with Incorrectly Specified Arguments","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"This weakness can cause unintended behavior and can lead to additional weaknesses such as allowing an attacker to gain unintended access to system resources.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses."}},{"_key":"CWE-636","_id":"cwe/CWE-636","_rev":"_jHZO_-y--v","original_id":"636","datatype":"cwe","name":"Not Failing Securely ('Failing Open')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Intended access restrictions can be bypassed, which is often contradictory to what the product's administrator expects.","Scope":"Access Control"}],"description":"By entering a less secure state, the product inherits the weaknesses associated with that state, making it easier to compromise. At the least, it causes administrators to have a false sense of security. This weakness typically occurs as a result of wanting to \"fail functional\" to minimize administration and support costs, instead of \"failing safe.\"","likeliehood_of_exploit":"","short_description":"When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access control restrictions."}},{"_key":"CWE-637","_id":"cwe/CWE-637","_rev":"_jHZO_-y--w","original_id":"637","datatype":"cwe","name":"Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"Security mechanisms should be as simple as possible. Complex security mechanisms may engender partial implementations and compatibility problems, with resulting mismatches in assumptions and implemented security. A corollary of this principle is that data specifications should be as simple as possible, because complex data specifications result in complex validation code. Complex tasks and systems may also need to be guarded by complex security checks, so simple systems should be preferred.","likeliehood_of_exploit":"","short_description":"The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used."}},{"_key":"CWE-638","_id":"cwe/CWE-638","_rev":"_jHZO_-y--x","original_id":"638","datatype":"cwe","name":"Not Using Complete Mediation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"A user might retain access to a critical resource even after privileges have been revoked, possibly allowing access to privileged functionality or sensitive information, depending on the role of the resource.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time."}},{"_key":"CWE-639","_id":"cwe/CWE-639","_rev":"_jHZO_-y--y","original_id":"639","datatype":"cwe","name":"Authorization Bypass Through User-Controlled Key","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Access control checks for specific user data or functionality can be bypassed.","Scope":"Access Control"},{"Impact":"Gain Privileges or Assume Identity","Note":"Horizontal escalation of privilege is possible (one user can view/modify information of another user).","Scope":"Access Control"},{"Impact":"Gain Privileges or Assume Identity","Note":"Vertical escalation of privilege is possible if the user-controlled key is actually a flag that indicates administrator status, allowing the attacker to gain administrative access.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data."}},{"_key":"CWE-64","_id":"cwe/CWE-64","_rev":"_jHZO_-y--z","original_id":"64","datatype":"cwe","name":"Windows Shortcut Following (.LNK)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"The shortcut (file with the .lnk extension) can permit an attacker to read/write a file that they originally did not have permissions to access.","likeliehood_of_exploit":"Low","short_description":"The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files."}},{"_key":"CWE-640","_id":"cwe/CWE-640","_rev":"_jHZO_-y--0","original_id":"640","datatype":"cwe","name":"Weak Password Recovery Mechanism for Forgotten Password","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could gain unauthorized access to the system by retrieving legitimate user's authentication credentials.","Scope":"Access Control"},{"Impact":"DoS: Resource Consumption (Other)","Note":"An attacker could deny service to legitimate system users by launching a brute force attack on the password recovery mechanism using user ids of legitimate users.","Scope":"Availability"},{"Impact":"Other","Note":"The system's security functionality is turned against the system by the attacker.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak."}},{"_key":"CWE-641","_id":"cwe/CWE-641","_rev":"_jHZO_-y--1","original_id":"641","datatype":"cwe","name":"Improper Restriction of Names for Files and Other Resources","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Execution of arbitrary code in the context of usage of the resources with dangerous names.","Scope":"Availability"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Crash of the consumer code of these resources resulting in information leakage or denial of service.","Scope":"Availability"}],"description":"This may produce resultant weaknesses. For instance, if the names of these resources contain scripting characters, it is possible that a script may get executed in the client's browser if the application ever displays the name of the resource on a dynamically generated web page. Alternately, if the resources are consumed by some application parser, a specially crafted name can exploit some vulnerability internal to the parser, potentially resulting in execution of arbitrary code on the server machine. The problems will vary based on the context of usage of such malformed resource names and whether vulnerabilities are present in or assumptions are made by the targeted technology that would make code execution possible.","likeliehood_of_exploit":"Low","short_description":"The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name."}},{"_key":"CWE-642","_id":"cwe/CWE-642","_rev":"_jHZO_-y--2","original_id":"642","datatype":"cwe","name":"External Control of Critical State Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could potentially modify the state in malicious ways. If the state is related to the privileges or level of authentication that the user has, then state modification might allow the user to bypass authentication or elevate privileges.","Scope":"Access Control"},{"Impact":"Read Application Data","Note":"The state variables may contain sensitive information that should not be known by the client.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"By modifying state variables, the attacker could violate the application's expectations for the contents of the state, leading to a denial of service due to an unexpected error condition.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors."}},{"_key":"CWE-643","_id":"cwe/CWE-643","_rev":"_jHZO_-y--3","original_id":"643","datatype":"cwe","name":"Improper Neutralization of Data within XPath Expressions ('XPath Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Controlling application flow (e.g. bypassing authentication).","Scope":"Access Control"},{"Impact":"Read Application Data","Note":"The attacker could read restricted XML content.","Scope":"Confidentiality"}],"description":"The net effect is that the attacker will have control over the information selected from the XML database and may use that ability to control application flow, modify logic, retrieve unauthorized data, or bypass important checks (e.g. authentication).","likeliehood_of_exploit":"High","short_description":"The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query."}},{"_key":"CWE-644","_id":"cwe/CWE-644","_rev":"_jHZO_-y--4","original_id":"644","datatype":"cwe","name":"Improper Neutralization of HTTP Headers for Scripting Syntax","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Run arbitrary code.","Scope":"Availability"},{"Impact":"Read Application Data","Note":"Attackers may be able to obtain sensitive information.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash."}},{"_key":"CWE-645","_id":"cwe/CWE-645","_rev":"_jHZO_-y--5","original_id":"645","datatype":"cwe","name":"Overly Restrictive Account Lockout Mechanism","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"Users could be locked out of accounts.","Scope":"Availability"}],"description":"Account lockout is a security feature often present in applications as a countermeasure to the brute force attack on the password based authentication mechanism of the system. After a certain number of failed login attempts, the users' account may be disabled for a certain period of time or until it is unlocked by an administrator. Other security events may also possibly trigger account lockout. However, an attacker may use this very security feature to deny service to legitimate system users. It is therefore important to ensure that the account lockout security mechanism is not overly restrictive.","likeliehood_of_exploit":"High","short_description":"The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out."}},{"_key":"CWE-646","_id":"cwe/CWE-646","_rev":"_jHZO_-y--6","original_id":"646","datatype":"cwe","name":"Reliance on File Name or Extension of Externally-Supplied File","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"An attacker may be able to read sensitive data.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"An attacker may be able to cause a denial of service.","Scope":"Availability"},{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker may be able to gain privileges.","Scope":"Access Control"}],"description":"An application might use the file name or extension of a user-supplied file to determine the proper course of action, such as selecting the correct process to which control should be passed, deciding what data should be made available, or what resources should be allocated. If the attacker can cause the code to misclassify the supplied file, then the wrong action could occur. For example, an attacker could supply a file that ends in a \".php.gif\" extension that appears to be a GIF image, but would be processed as PHP code. In extreme cases, code execution is possible, but the attacker could also cause exhaustion of resources, denial of service, exposure of debug or system data (including application source code), or being bound to a particular server side process. This weakness may be due to a vulnerability in any of the technologies used by the web and application servers, due to misconfiguration, or resultant from another flaw in the application itself.","likeliehood_of_exploit":"High","short_description":"The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion."}},{"_key":"CWE-647","_id":"cwe/CWE-647","_rev":"_jHZO_-y--7","original_id":"647","datatype":"cwe","name":"Use of Non-Canonical URL Paths for Authorization Decisions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"An attacker may be able to bypass the authorization mechanism to gain access to the otherwise-protected URL.","Scope":"Access Control"},{"Impact":"Read Files or Directories","Note":"If a non-canonical URL is used, the server may choose to return the contents of the file, instead of pre-processing the file (e.g. as a program).","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization."}},{"_key":"CWE-648","_id":"cwe/CWE-648","_rev":"_jHZO_-y--8","original_id":"648","datatype":"cwe","name":"Incorrect Use of Privileged APIs","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker may be able to elevate privileges.","Scope":"Access Control"},{"Impact":"Read Application Data","Note":"An attacker may be able to obtain sensitive information.","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker may be able to execute code.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"Low","short_description":"The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly."}},{"_key":"CWE-649","_id":"cwe/CWE-649","_rev":"_jHZO_-y--9","original_id":"649","datatype":"cwe","name":"Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Note":"The inputs could be modified without detection, causing the product to have unexpected system state or make incorrect security decisions.","Scope":"Integrity"}],"description":"When an application relies on obfuscation or incorrectly applied / weak encryption to protect client-controllable tokens or parameters, that may have an effect on the user state, system state, or some decision made on the server. Without protecting the tokens/parameters for integrity, the application is vulnerable to an attack where an adversary traverses the space of possible values of the said token/parameter in order to attempt to gain an advantage. The goal of the attacker is to find another admissible value that will somehow elevate their privileges in the system, disclose information or change the behavior of the system in some way beneficial to the attacker. If the application does not protect these critical tokens/parameters for integrity, it will not be able to determine that these values have been tampered with. Measures that are used to protect data for confidentiality should not be relied upon to provide the integrity service.","likeliehood_of_exploit":"High","short_description":"The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified."}},{"_key":"CWE-65","_id":"cwe/CWE-65","_rev":"_jHZO_-y-_-","original_id":"65","datatype":"cwe","name":"Windows Hard Link","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"Failure for a system to check for hard links can result in vulnerability to different types of attacks. For example, an attacker can escalate their privileges if a file used by a privileged program is replaced with a hard link to a sensitive file (e.g. AUTOEXEC.BAT). When the process opens the file, the attacker can assume the privileges of that process, or prevent the program from accurately processing data.","likeliehood_of_exploit":"","short_description":"The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files."}},{"_key":"CWE-650","_id":"cwe/CWE-650","_rev":"_jHZO_-y-__","original_id":"650","datatype":"cwe","name":"Trusting HTTP Permission Methods on the Server Side","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could escalate privileges.","Scope":"Access Control"},{"Impact":"Modify Application Data","Note":"An attacker could modify resources.","Scope":"Integrity"},{"Impact":"Read Application Data","Note":"An attacker could obtain sensitive information.","Scope":"Confidentiality"}],"description":"The HTTP GET method and some other methods are designed to retrieve resources and not to alter the state of the application or resources on the server side. Furthermore, the HTTP specification requires that GET requests (and other requests) should not have side effects. Believing that it will be enough to prevent unintended resource alterations, an application may disallow the HTTP requests to perform DELETE, PUT and POST operations on the resource representation. However, there is nothing in the HTTP protocol itself that actually prevents the HTTP GET method from performing more than just query of the data. Developers can easily code programs that accept a HTTP GET request that do in fact create, update or delete data on the server. For instance, it is a common practice with REST based Web Services to have HTTP GET requests modifying resources on the server side. However, whenever that happens, the access control needs to be properly enforced in the application. No assumptions should be made that only HTTP DELETE, PUT, POST, and other methods have the power to alter the representation of the resource being accessed in the request.","likeliehood_of_exploit":"High","short_description":"The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state."}},{"_key":"CWE-651","_id":"cwe/CWE-651","_rev":"_jHZO_-y-_A","original_id":"651","datatype":"cwe","name":"Exposure of WSDL File Containing Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"The attacker may find sensitive information located in the WSDL file.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect and what types they return)."}},{"_key":"CWE-652","_id":"cwe/CWE-652","_rev":"_jHZO_-y-_B","original_id":"652","datatype":"cwe","name":"Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"An attacker might be able to read sensitive information from the XML database.","Scope":"Confidentiality"}],"description":"The net effect is that the attacker will have control over the information selected from the XML database and may use that ability to control application flow, modify logic, retrieve unauthorized data, or bypass important checks (e.g. authentication).","likeliehood_of_exploit":"High","short_description":"The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query."}},{"_key":"CWE-653","_id":"cwe/CWE-653","_rev":"_jHZO_-y-_C","original_id":"653","datatype":"cwe","name":"Improper Isolation or Compartmentalization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"The exploitation of a weakness in low-privileged areas of the software can be leveraged to reach higher-privileged areas without having to overcome any additional obstacles.","Scope":"Access Control"}],"description":"When a weakness occurs in functionality that is accessible by lower-privileged users, then without strong boundaries, an attack might extend the scope of the damage to higher-privileged users.","likeliehood_of_exploit":"","short_description":"The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions."}},{"_key":"CWE-654","_id":"cwe/CWE-654","_rev":"_jHZO_-y-_D","original_id":"654","datatype":"cwe","name":"Reliance on a Single Factor in a Security Decision","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by that factor.","Scope":"Access Control"},{"Impact":"Hide Activities","Note":"It can become difficult or impossible for the product to be able to distinguish between legitimate activities by the entity who provided the factor, versus illegitimate activities by an attacker.","Scope":"Non-Repudiation"}],"description":"","likeliehood_of_exploit":"","short_description":"A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality."}},{"_key":"CWE-655","_id":"cwe/CWE-655","_rev":"_jHZO_-y-_E","original_id":"655","datatype":"cwe","name":"Insufficient Psychological Acceptability","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"By bypassing the security mechanism, a user might leave the system in a less secure state than intended by the administrator, making it more susceptible to compromise.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose."}},{"_key":"CWE-656","_id":"cwe/CWE-656","_rev":"_jHZO_-y-_F","original_id":"656","datatype":"cwe","name":"Reliance on Security Through Obscurity","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"The security mechanism can be bypassed easily.","Scope":"Other"}],"description":"This reliance on \"security through obscurity\" can produce resultant weaknesses if an attacker is able to reverse engineer the inner workings of the mechanism. Note that obscurity can be one small part of defense in depth, since it can create more work for an attacker; however, it is a significant risk if used as the primary means of protection.","likeliehood_of_exploit":"","short_description":"The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism."}},{"_key":"CWE-657","_id":"cwe/CWE-657","_rev":"_jHZO_-y-_G","original_id":"657","datatype":"cwe","name":"Violation of Secure Design Principles","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"This can introduce resultant weaknesses or make it easier for developers to introduce related weaknesses during implementation. Because code is centered around design, it can be resource-intensive to fix design problems.","likeliehood_of_exploit":"","short_description":"The product violates well-established principles for secure design."}},{"_key":"CWE-66","_id":"cwe/CWE-66","_rev":"_jHZO_-y-_H","original_id":"66","datatype":"cwe","name":"Improper Handling of File Names that Identify Virtual Resources","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"Virtual file names are represented like normal file names, but they are effectively aliases for other resources that do not behave like normal files. Depending on their functionality, they could be alternate entities. They are not necessarily listed in directories.","likeliehood_of_exploit":"","short_description":"The product does not handle or incorrectly handles a file name that identifies a \"virtual\" resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource that is not a file."}},{"_key":"CWE-662","_id":"cwe/CWE-662","_rev":"_jHZO_-y-_I","original_id":"662","datatype":"cwe","name":"Improper Synchronization","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes."}},{"_key":"CWE-663","_id":"cwe/CWE-663","_rev":"_jHZO_-y-_J","original_id":"663","datatype":"cwe","name":"Use of a Non-reentrant Function in a Concurrent Context","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state."}},{"_key":"CWE-664","_id":"cwe/CWE-664","_rev":"_jHZO_-y-_K","original_id":"664","datatype":"cwe","name":"Improper Control of a Resource Through its Lifetime","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release."}},{"_key":"CWE-665","_id":"cwe/CWE-665","_rev":"_jHZO_-y-_L","original_id":"665","datatype":"cwe","name":"Improper Initialization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"When reusing a resource such as memory or a program variable, the original contents of that resource may not be cleared before it is sent to an untrusted party.","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"If security-critical decisions rely on a variable having a \"0\" or equivalent value, and the programming language performs this initialization on behalf of the programmer, then a bypass of security may occur.","Scope":"Access Control"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The uninitialized data may contain values that cause program flow to change in ways that the programmer did not intend. For example, if an uninitialized variable is used as an array index in C, then its previous contents may produce an index that is outside the range of the array, possibly causing a crash or an exit in other environments.","Scope":"Availability"}],"description":"This can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.","likeliehood_of_exploit":"Medium","short_description":"The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used."}},{"_key":"CWE-666","_id":"cwe/CWE-666","_rev":"_jHZO_-y-_M","original_id":"666","datatype":"cwe","name":"Operation on Resource in Wrong Phase of Lifetime","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"A resource's lifecycle includes several phases: initialization, use, and release. For each phase, it is important to follow the specifications outlined for how to operate on the resource and to ensure that the resource is in the expected phase. Otherwise, if a resource is in one phase but the operation is not valid for that phase (i.e., an incorrect phase of the resource's lifetime), then this can produce resultant weaknesses. For example, using a resource before it has been fully initialized could cause corruption or incorrect data to be used.","likeliehood_of_exploit":"","short_description":"The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors."}},{"_key":"CWE-667","_id":"cwe/CWE-667","_rev":"_jHZO_-y-_N","original_id":"667","datatype":"cwe","name":"Improper Locking","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Note":"Inconsistent locking discipline can lead to deadlock.","Scope":"Availability"}],"description":"\n\t   ","likeliehood_of_exploit":"","short_description":"The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors."}},{"_key":"CWE-668","_id":"cwe/CWE-668","_rev":"_jHZO_-y-_O","original_id":"668","datatype":"cwe","name":"Exposure of Resource to Wrong Sphere","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource."}},{"_key":"CWE-669","_id":"cwe/CWE-669","_rev":"_jHZO_-y-_P","original_id":"669","datatype":"cwe","name":"Incorrect Resource Transfer Between Spheres","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource."}},{"_key":"CWE-67","_id":"cwe/CWE-67","_rev":"_jHZO_-y-_Q","original_id":"67","datatype":"cwe","name":"Improper Handling of Windows Device Names","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"Not properly handling virtual filenames (e.g. AUX, CON, PRN, COM1, LPT1) can result in different types of vulnerabilities. In some cases an attacker can request a device via injection of a virtual filename in a URL, which may cause an error that leads to a denial of service or an error page that reveals sensitive information. A product that allows device names to bypass filtering runs the risk of an attacker injecting malicious code in a file with the name of a device.","likeliehood_of_exploit":"High","short_description":"The product constructs pathnames from user input, but it does not handle or incorrectly handles a pathname containing a Windows device name such as AUX or CON. This typically leads to denial of service or an information exposure when the application attempts to process the pathname as a regular file."}},{"_key":"CWE-670","_id":"cwe/CWE-670","_rev":"_jHZO_-y-_R","original_id":"670","datatype":"cwe","name":"Always-Incorrect Control Flow Implementation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"This weakness captures cases in which a particular code segment is always incorrect with respect to the algorithm that it is implementing. For example, if a C programmer intends to include multiple statements in a single block but does not include the enclosing braces (CWE-483), then the logic is always incorrect. This issue is in contrast to most weaknesses in which the code usually behaves correctly, except when it is externally manipulated in malicious ways.","likeliehood_of_exploit":"","short_description":"The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated."}},{"_key":"CWE-671","_id":"cwe/CWE-671","_rev":"_jHZO_-y-_S","original_id":"671","datatype":"cwe","name":"Lack of Administrator Control over Security","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"If the product's administrator does not have the ability to manage security-related decisions at all times, then protecting the product from outside threats - including the product's developer - can become impossible. For example, a hard-coded account name and password cannot be changed by the administrator, thus exposing that product to attacks that the administrator can not prevent.","likeliehood_of_exploit":"","short_description":"The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator."}},{"_key":"CWE-672","_id":"cwe/CWE-672","_rev":"_jHZO_-y-_T","original_id":"672","datatype":"cwe","name":"Operation on a Resource after Expiration or Release","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"If a released resource is subsequently reused or reallocated, then an attempt to use the original resource might allow access to sensitive data that is associated with a different user or entity.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"When a resource is released it might not be in an expected state, later attempts to access the resource may lead to resultant errors that may lead to a crash.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked."}},{"_key":"CWE-673","_id":"cwe/CWE-673","_rev":"_jHZO_-y-_U","original_id":"673","datatype":"cwe","name":"External Influence of Sphere Definition","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"Typically, a product defines its control sphere within the code itself, or through configuration by the product's administrator. In some cases, an external party can change the definition of the control sphere. This is typically a resultant weakness.","likeliehood_of_exploit":"","short_description":"The product does not prevent the definition of control spheres from external actors."}},{"_key":"CWE-674","_id":"cwe/CWE-674","_rev":"_jHZO_-y-_V","original_id":"674","datatype":"cwe","name":"Uncontrolled Recursion","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"Resources including CPU, memory, and stack memory could be rapidly consumed or exhausted, eventually leading to an exit or crash.","Scope":"Availability"},{"Impact":"Read Application Data","Note":"In some cases, an application's interpreter might kill a process or thread that appears to be consuming too much resources, such as with PHP's memory_limit setting. When the interpreter kills the process/thread, it might report an error containing detailed information such as the application's installation path.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack."}},{"_key":"CWE-675","_id":"cwe/CWE-675","_rev":"_jHZO_-y-_W","original_id":"675","datatype":"cwe","name":"Multiple Operations on Resource in Single-Operation Context","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product performs the same operation on a resource two or more times, when the operation should only be applied once."}},{"_key":"CWE-676","_id":"cwe/CWE-676","_rev":"_jHZO_-y-_X","original_id":"676","datatype":"cwe","name":"Use of Potentially Dangerous Function","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Note":"If the function is used incorrectly, then it could result in security problems.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely."}},{"_key":"CWE-680","_id":"cwe/CWE-680","_rev":"_jHZO_-y-_Y","original_id":"680","datatype":"cwe","name":"Integer Overflow to Buffer Overflow","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow."}},{"_key":"CWE-681","_id":"cwe/CWE-681","_rev":"_jHZO_-y-_Z","original_id":"681","datatype":"cwe","name":"Incorrect Conversion between Numeric Types","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Quality Degradation","Note":"The program could wind up using the wrong number and generate incorrect results. If the number is used to allocate resources or make a security decision, then this could introduce a vulnerability.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"High","short_description":"When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur."}},{"_key":"CWE-682","_id":"cwe/CWE-682","_rev":"_jHZO_-y-_a","original_id":"682","datatype":"cwe","name":"Incorrect Calculation","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"If the incorrect calculation causes the program to move into an unexpected state, it may lead to a crash or impairment of service.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"If the incorrect calculation is used in the context of resource allocation, it could lead to an out-of-bounds operation (CWE-119) leading to a crash or even arbitrary code execution. Alternatively, it may result in an integer overflow (CWE-190) and / or a resource consumption problem (CWE-400).","Scope":"Availability"},{"Impact":"Gain Privileges or Assume Identity","Note":"In the context of privilege or permissions assignment, an incorrect calculation can provide an attacker with access to sensitive resources.","Scope":"Access Control"},{"Impact":"Bypass Protection Mechanism","Note":"If the incorrect calculation leads to an insufficient comparison (CWE-697), it may compromise a protection mechanism such as a validation routine and allow an attacker to bypass the security-critical code.","Scope":"Access Control"}],"description":"When product performs a security-critical calculation incorrectly, it might lead to incorrect resource allocations, incorrect privilege assignments, or failed comparisons among other things. Many of the direct results of an incorrect calculation can lead to even larger problems such as failed protection mechanisms or even arbitrary code execution.","likeliehood_of_exploit":"High","short_description":"The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management."}},{"_key":"CWE-683","_id":"cwe/CWE-683","_rev":"_jHZO_-y-_b","original_id":"683","datatype":"cwe","name":"Function Call With Incorrect Order of Arguments","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"While this weakness might be caught by the compiler in some languages, it can occur more frequently in cases in which the called function accepts variable numbers or types of arguments, such as format strings in C. It also can occur in languages or environments that do not enforce strong typing.","likeliehood_of_exploit":"","short_description":"The product calls a function, procedure, or routine, but the caller specifies the arguments in an incorrect order, leading to resultant weaknesses."}},{"_key":"CWE-684","_id":"cwe/CWE-684","_rev":"_jHZO_-y-_c","original_id":"684","datatype":"cwe","name":"Incorrect Provision of Specified Functionality","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"When providing functionality to an external party, it is important that the product behaves in accordance with the details specified. When requirements of nuances are not documented, the functionality may produce unintended behaviors for the caller, possibly leading to an exploitable state.","likeliehood_of_exploit":"","short_description":"The code does not function according to its published specifications, potentially leading to incorrect usage."}},{"_key":"CWE-685","_id":"cwe/CWE-685","_rev":"_jHZO_-y-_d","original_id":"685","datatype":"cwe","name":"Function Call With Incorrect Number of Arguments","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product calls a function, procedure, or routine, but the caller specifies too many arguments, or too few arguments, which may lead to undefined behavior and resultant weaknesses."}},{"_key":"CWE-686","_id":"cwe/CWE-686","_rev":"_jHZO_-y-_e","original_id":"686","datatype":"cwe","name":"Function Call With Incorrect Argument Type","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"This weakness is most likely to occur in loosely typed languages, or in strongly typed languages in which the types of variable arguments cannot be enforced at compilation time, or where there is implicit casting.","likeliehood_of_exploit":"","short_description":"The product calls a function, procedure, or routine, but the caller specifies an argument that is the wrong data type, which may lead to resultant weaknesses."}},{"_key":"CWE-687","_id":"cwe/CWE-687","_rev":"_jHZO_-y-_f","original_id":"687","datatype":"cwe","name":"Function Call With Incorrectly Specified Argument Value","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product calls a function, procedure, or routine, but the caller specifies an argument that contains the wrong value, which may lead to resultant weaknesses."}},{"_key":"CWE-688","_id":"cwe/CWE-688","_rev":"_jHZO_-y-_g","original_id":"688","datatype":"cwe","name":"Function Call With Incorrect Variable or Reference as Argument","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Quality Degradation","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses."}},{"_key":"CWE-689","_id":"cwe/CWE-689","_rev":"_jHZO_-y-_h","original_id":"689","datatype":"cwe","name":"Permission Race Condition During Resource Copy","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product, while copying or cloning a resource, does not set the resource's permissions or access control until the copy is complete, leaving the resource exposed to other spheres while the copy is taking place."}},{"_key":"CWE-69","_id":"cwe/CWE-69","_rev":"_jHZO_-y-_i","original_id":"69","datatype":"cwe","name":"Improper Handling of Windows ::DATA Alternate Data Stream","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"An attacker can use an ADS to hide information about a file (e.g. size, the name of the process) from a system or file browser tools such as Windows Explorer and 'dir' at the command line utility. Alternately, the attacker might be able to bypass intended access restrictions for the associated data fork.","likeliehood_of_exploit":"","short_description":"The product does not properly prevent access to, or detect usage of, alternate data streams (ADS)."}},{"_key":"CWE-690","_id":"cwe/CWE-690","_rev":"_jHZO_-y-_j","original_id":"690","datatype":"cwe","name":"Unchecked Return Value to NULL Pointer Dereference","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"},{"Impact":"Modify Memory","Note":"In rare circumstances, when NULL is equivalent to the 0x0 memory address and privileged code can access it, then writing or reading memory is possible, which may lead to code execution.","Scope":"Availability"}],"description":"While unchecked return value weaknesses are not limited to returns of NULL pointers (see the examples in CWE-252), functions often return NULL to indicate an error status. When this error condition is not checked, a NULL pointer dereference can occur.","likeliehood_of_exploit":"","short_description":"The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference."}},{"_key":"CWE-691","_id":"cwe/CWE-691","_rev":"_jHZO_-y-_k","original_id":"691","datatype":"cwe","name":"Insufficient Control Flow Management","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways."}},{"_key":"CWE-692","_id":"cwe/CWE-692","_rev":"_jHZO_-y-_l","original_id":"692","datatype":"cwe","name":"Incomplete Denylist to Cross-Site Scripting","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"While XSS might seem simple to prevent, web browsers vary so widely in how they parse web pages, that a denylist cannot keep track of all the variations. The \"XSS Cheat Sheet\" [REF-714] contains a large number of attacks that are intended to bypass incomplete denylists.","likeliehood_of_exploit":"","short_description":"The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed."}},{"_key":"CWE-693","_id":"cwe/CWE-693","_rev":"_jHZO_-y-_m","original_id":"693","datatype":"cwe","name":"Protection Mechanism Failure","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"This weakness covers three distinct situations. A \"missing\" protection mechanism occurs when the application does not define any mechanism against a certain class of attack. An \"insufficient\" protection mechanism might provide some defenses - for example, against the most common attacks - but it does not protect against everything that is intended. Finally, an \"ignored\" mechanism occurs when a mechanism is available and in active use within the product, but the developer has not applied it in some code path.","likeliehood_of_exploit":"","short_description":"The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product."}},{"_key":"CWE-694","_id":"cwe/CWE-694","_rev":"_jHZO_-y-_n","original_id":"694","datatype":"cwe","name":"Use of Multiple Resources with Duplicate Identifier","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"If unique identifiers are assumed when protecting sensitive resources, then duplicate identifiers might allow attackers to bypass the protection.","Scope":"Access Control"},{"Impact":"Quality Degradation","Scope":"Other"}],"description":"If the product assumes that each resource has a unique identifier, the product could operate on the wrong resource if attackers can cause multiple resources to be associated with the same identifier.","likeliehood_of_exploit":"","short_description":"The product uses multiple resources that can have the same identifier, in a context in which unique identifiers are required."}},{"_key":"CWE-695","_id":"cwe/CWE-695","_rev":"_jHZO_-y-_o","original_id":"695","datatype":"cwe","name":"Use of Low-Level Functionality","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"The use of low-level functionality can violate the specification in unexpected ways that effectively disable built-in protection mechanisms, introduce exploitable inconsistencies, or otherwise expose the functionality to attack.","likeliehood_of_exploit":"","short_description":"The product uses low-level functionality that is explicitly prohibited by the framework or specification under which the product is supposed to operate."}},{"_key":"CWE-696","_id":"cwe/CWE-696","_rev":"_jHZO_-y-_p","original_id":"696","datatype":"cwe","name":"Incorrect Behavior Order","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses."}},{"_key":"CWE-697","_id":"cwe/CWE-697","_rev":"_jHZO_-y-_q","original_id":"697","datatype":"cwe","name":"Incorrect Comparison","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses."}},{"_key":"CWE-698","_id":"cwe/CWE-698","_rev":"_jHZO_-y-_r","original_id":"698","datatype":"cwe","name":"Execution After Redirect (EAR)","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"This weakness could affect the control flow of the application and allow execution of untrusted code.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The web application sends a redirect to another location, but instead of exiting, it executes additional code."}},{"_key":"CWE-7","_id":"cwe/CWE-7","_rev":"_jHZO_-y-_s","original_id":"7","datatype":"cwe","name":"J2EE Misconfiguration: Missing Custom Error Page","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"A stack trace might show the attacker a malformed SQL query string, the type of database being used, and the version of the application container. This information enables the attacker to target known vulnerabilities in these components.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The default error page of a web application should not display sensitive information about the product."}},{"_key":"CWE-703","_id":"cwe/CWE-703","_rev":"_jHZO_-y-_t","original_id":"703","datatype":"cwe","name":"Improper Check or Handling of Exceptional Conditions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product."}},{"_key":"CWE-704","_id":"cwe/CWE-704","_rev":"_jHZO_-y-_u","original_id":"704","datatype":"cwe","name":"Incorrect Type Conversion or Cast","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not correctly convert an object, resource, or structure from one type to a different type."}},{"_key":"CWE-705","_id":"cwe/CWE-705","_rev":"_jHZO_-y-_v","original_id":"705","datatype":"cwe","name":"Incorrect Control Flow Scoping","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition."}},{"_key":"CWE-706","_id":"cwe/CWE-706","_rev":"_jHZO_-y-_w","original_id":"706","datatype":"cwe","name":"Use of Incorrectly-Resolved Name or Reference","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere."}},{"_key":"CWE-707","_id":"cwe/CWE-707","_rev":"_jHZO_-y-_x","original_id":"707","datatype":"cwe","name":"Improper Neutralization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component."}},{"_key":"CWE-708","_id":"cwe/CWE-708","_rev":"_jHZO_-y-_y","original_id":"708","datatype":"cwe","name":"Incorrect Ownership Assignment","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could read and modify data for which they do not have permissions to access directly.","Scope":"Integrity"}],"description":"This may allow the resource to be manipulated by actors outside of the intended control sphere.","likeliehood_of_exploit":"","short_description":"The product assigns an owner to a resource, but the owner is outside of the intended control sphere."}},{"_key":"CWE-710","_id":"cwe/CWE-710","_rev":"_jHZO_-y-_z","original_id":"710","datatype":"cwe","name":"Improper Adherence to Coding Standards","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities."}},{"_key":"CWE-72","_id":"cwe/CWE-72","_rev":"_jHZO_-y-_0","original_id":"72","datatype":"cwe","name":"Improper Handling of Apple HFS+ Alternate Data Stream Path","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Scope":"Integrity"}],"description":"If the product chooses actions to take based on the file name, then if an attacker provides the data or resource fork, the product may take unexpected actions. Further, if the product intends to restrict access to a file, then an attacker might still be able to bypass intended access restrictions by requesting the data or resource fork for that file.","likeliehood_of_exploit":"","short_description":"The product does not properly handle special paths that may identify the data or resource fork of a file on the HFS+ file system."}},{"_key":"CWE-73","_id":"cwe/CWE-73","_rev":"_jHZO_-y-_1","original_id":"73","datatype":"cwe","name":"External Control of File Name or Path","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Note":"The application can operate on unexpected files. Confidentiality is violated when the targeted filename is not directly readable by the attacker.","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Note":"The application can operate on unexpected files. This may violate integrity if the filename is written to, or if the filename is for a program or other form of executable code.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (Other)","Note":"The application can operate on unexpected files. Availability can be violated if the attacker specifies an unexpected file that the application modifies. Availability can also be affected if the attacker specifies a filename for a large file, or points to a special device or a file that does not have the format that the application expects.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product allows user input to control or influence paths or file names that are used in filesystem operations."}},{"_key":"CWE-732","_id":"cwe/CWE-732","_rev":"_jHZO_-y-_2","original_id":"732","datatype":"cwe","name":"Incorrect Permission Assignment for Critical Resource","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"An attacker may be able to read sensitive information from the associated resource, such as credentials or configuration information stored in a file.","Scope":"Confidentiality"},{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker may be able to modify critical properties of the associated resource to gain privileges, such as replacing a world-writable executable with a Trojan horse.","Scope":"Access Control"},{"Impact":"Other","Note":"An attacker may be able to destroy or corrupt critical data in the associated resource, such as deletion of records from a database.","Scope":"Other"}],"description":"When a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution, or sensitive user data. For example, consider a misconfigured storage account for the cloud that can be read or written by a public or anonymous user.","likeliehood_of_exploit":"High","short_description":"The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors."}},{"_key":"CWE-733","_id":"cwe/CWE-733","_rev":"_jHZO_-y-_3","original_id":"733","datatype":"cwe","name":"Compiler Optimization Removal or Modification of Security-critical Code","metadata":{"applicable_platform":["Compiled"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"","likeliehood_of_exploit":"","short_description":"The developer builds a security-critical protection mechanism into the software, but the compiler optimizes the program such that the mechanism is removed or modified."}},{"_key":"CWE-74","_id":"cwe/CWE-74","_rev":"_jHZO_-y-_4","original_id":"74","datatype":"cwe","name":"Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Many injection attacks involve the disclosure of important information -- in terms of both data sensitivity and usefulness in further exploitation.","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"In some cases, injectable code controls authentication; this may lead to a remote vulnerability.","Scope":"Access Control"},{"Impact":"Alter Execution Logic","Note":"Injection attacks are characterized by the ability to significantly change the flow of a given process, and in some cases, to the execution of arbitrary code.","Scope":"Other"},{"Impact":"Other","Note":"Data injection attacks lead to loss of data integrity in nearly all cases as the control-plane data injected is always incidental to data recall or writing.","Scope":"Other"},{"Impact":"Hide Activities","Note":"Often the actions performed by injected control code are unlogged.","Scope":"Non-Repudiation"}],"description":"Software or other automated logic has certain assumptions about what constitutes data and control respectively. It is the lack of verification of these assumptions for user-controlled input that leads to injection problems. Injection problems encompass a wide variety of issues -- all mitigated in very different ways and usually attempted in order to alter the control flow of the process. For this reason, the most effective way to discuss these weaknesses is to note the distinct features that classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed.","likeliehood_of_exploit":"High","short_description":"The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component."}},{"_key":"CWE-749","_id":"cwe/CWE-749","_rev":"_jHZO_-y-_5","original_id":"749","datatype":"cwe","name":"Exposed Dangerous Method or Function","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"Exposing critical functionality essentially provides an attacker with the privilege level of the exposed functionality. This could result in the modification or exposure of sensitive data or possibly even execution of arbitrary code.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"Low","short_description":"The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted."}},{"_key":"CWE-75","_id":"cwe/CWE-75","_rev":"_jHZO_-y-_6","original_id":"75","datatype":"cwe","name":"Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not adequately filter user-controlled input for special elements with control implications."}},{"_key":"CWE-754","_id":"cwe/CWE-754","_rev":"_jHZO_-y-_7","original_id":"754","datatype":"cwe","name":"Improper Check for Unusual or Exceptional Conditions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Note":"The data which were produced as a result of a function call could be in a bad state upon return. If the return value is not checked, then this bad data may be used in operations, possibly leading to a crash or other unintended behaviors.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product."}},{"_key":"CWE-755","_id":"cwe/CWE-755","_rev":"_jHZO_-y-_8","original_id":"755","datatype":"cwe","name":"Improper Handling of Exceptional Conditions","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"","likeliehood_of_exploit":"Medium","short_description":"The product does not handle or incorrectly handles an exceptional condition."}},{"_key":"CWE-756","_id":"cwe/CWE-756","_rev":"_jHZO_-y-_9","original_id":"756","datatype":"cwe","name":"Missing Custom Error Page","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Note":"Attackers can leverage the additional information provided by a default error page to mount attacks targeted on the framework, database, or other resources used by the application.","Scope":"Confidentiality"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not return custom error pages to the user, possibly exposing sensitive information."}},{"_key":"CWE-757","_id":"cwe/CWE-757","_rev":"_jHZO_-y-A-","original_id":"757","datatype":"cwe","name":"Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"When a security mechanism can be forced to downgrade to use a less secure algorithm, this can make it easier for attackers to compromise the product by exploiting weaker algorithm. The victim might not be aware that the less secure algorithm is being used. For example, if an attacker can force a communications channel to use cleartext instead of strongly-encrypted data, then the attacker could read the channel by sniffing, instead of going through extra effort of trying to decrypt the data using brute force techniques.","likeliehood_of_exploit":"","short_description":"A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties."}},{"_key":"CWE-758","_id":"cwe/CWE-758","_rev":"_jHZO_-y-A_","original_id":"758","datatype":"cwe","name":"Reliance on Undefined, Unspecified, or Implementation-Defined Behavior","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"This can lead to resultant weaknesses when the required properties change, such as when the product is ported to a different platform or if an interaction error (CWE-435) occurs.","likeliehood_of_exploit":"","short_description":"The product uses an API function, data structure, or other entity in a way that relies on properties that are not always guaranteed to hold for that entity."}},{"_key":"CWE-759","_id":"cwe/CWE-759","_rev":"_jHZO_-y-AA","original_id":"759","datatype":"cwe","name":"Use of a One-Way Hash without a Salt","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If an attacker can gain access to the hashes, then the lack of a salt makes it easier to conduct brute force attacks using techniques such as rainbow tables.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input."}},{"_key":"CWE-76","_id":"cwe/CWE-76","_rev":"_jHZO_-y-AB","original_id":"76","datatype":"cwe","name":"Improper Neutralization of Equivalent Special Elements","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"The product may have a fixed list of special characters it believes is complete. However, there may be alternate encodings, or representations that also have the same meaning. For example, the product may filter out a leading slash (/) to prevent absolute path names, but does not account for a tilde (~) followed by a user name, which on some *nix systems could be expanded to an absolute pathname. Alternately, the product might filter a dangerous \"-e\" command-line switch when calling an external program, but it might not account for \"--exec\" or other switches that have the same semantics.","likeliehood_of_exploit":"High","short_description":"The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements."}},{"_key":"CWE-760","_id":"cwe/CWE-760","_rev":"_jHZO_-y-AC","original_id":"760","datatype":"cwe","name":"Use of a One-Way Hash with a Predictable Salt","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input."}},{"_key":"CWE-761","_id":"cwe/CWE-761","_rev":"_jHZO_-y-AD","original_id":"761","datatype":"cwe","name":"Free of Pointer not at Start of Buffer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer."}},{"_key":"CWE-762","_id":"cwe/CWE-762","_rev":"_jHZO_-2---","original_id":"762","datatype":"cwe","name":"Mismatched Memory Management Routines","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"Low","short_description":"The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource."}},{"_key":"CWE-763","_id":"cwe/CWE-763","_rev":"_jHZO_-2--_","original_id":"763","datatype":"cwe","name":"Release of Invalid Pointer or Reference","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"This weakness may result in the corruption of memory, and perhaps instructions, possibly leading to a crash. If the corrupted memory can be effectively controlled, it may be possible to execute arbitrary code.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly."}},{"_key":"CWE-764","_id":"cwe/CWE-764","_rev":"_jHZO_-2--A","original_id":"764","datatype":"cwe","name":"Multiple Locks of a Critical Resource","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"When a product is operating in a concurrent environment and repeatedly locks a critical resource, the consequences will vary based on the type of lock, the lock's implementation, and the resource being protected. In some situations such as with semaphores, the resources are pooled and extra locking calls will reduce the size of the total available pool, possibly leading to degraded performance or a denial of service. If this can be triggered by an attacker, it will be similar to an unrestricted lock (CWE-412). In the context of a binary lock, it is likely that any duplicate locking attempts will never succeed since the lock is already held and progress may not be possible.","likeliehood_of_exploit":"","short_description":"The product locks a critical resource more times than intended, leading to an unexpected state in the system."}},{"_key":"CWE-765","_id":"cwe/CWE-765","_rev":"_jHZO_-2--B","original_id":"765","datatype":"cwe","name":"Multiple Unlocks of a Critical Resource","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"When the product is operating in a concurrent environment and repeatedly unlocks a critical resource, the consequences will vary based on the type of lock, the lock's implementation, and the resource being protected. In some situations such as with semaphores, the resources are pooled and extra calls to unlock will increase the count for the number of available resources, likely resulting in a crash or unpredictable behavior when the system nears capacity.","likeliehood_of_exploit":"","short_description":"The product unlocks a critical resource more times than intended, leading to an unexpected state in the system."}},{"_key":"CWE-766","_id":"cwe/CWE-766","_rev":"_jHZO_-2--C","original_id":"766","datatype":"cwe","name":"Critical Data Element Declared Public","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"Making a critical variable public allows anyone with access to the object in which the variable is contained to alter or read the value.","Scope":"Confidentiality"},{"Impact":"Reduce Maintainability","Scope":"Other"}],"description":null,"likeliehood_of_exploit":"","short_description":"The product declares a critical variable, field, or member to be public when intended security policy requires it to be private."}},{"_key":"CWE-767","_id":"cwe/CWE-767","_rev":"_jHZO_-2--D","original_id":"767","datatype":"cwe","name":"Access to Critical Private Variable via Public Method","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"If an attacker modifies the variable to contain unexpected values, this could violate assumptions from other parts of the code. Additionally, if an attacker can read the private variable, it may expose sensitive information or make it easier to launch further attacks.","likeliehood_of_exploit":"","short_description":"The product defines a public method that reads or modifies a private variable."}},{"_key":"CWE-768","_id":"cwe/CWE-768","_rev":"_jHZO_-2--E","original_id":"768","datatype":"cwe","name":"Incorrect Short Circuit Evaluation","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Note":"Widely varied consequences are possible if an attacker is aware of an unexpected state in the product after a conditional. It may lead to information exposure, a system crash, or even complete attacker control of the system.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"Low","short_description":"The product contains a conditional statement with multiple logical expressions in which one of the non-leading expressions may produce side effects. This may lead to an unexpected state in the program after the execution of the conditional, because short-circuiting logic may prevent the side effects from occurring."}},{"_key":"CWE-77","_id":"cwe/CWE-77","_rev":"_jHZO_-2--F","original_id":"77","datatype":"cwe","name":"Improper Neutralization of Special Elements used in a Command ('Command Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"If a malicious user injects a character (such as a semi-colon) that delimits the end of one command and the beginning of another, it may be possible to then insert an entirely new and unrelated command that was not intended to be executed. This gives an attacker a privilege or capability that they would not otherwise have.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component."}},{"_key":"CWE-770","_id":"cwe/CWE-770","_rev":"_jHZO_-2--G","original_id":"770","datatype":"cwe","name":"Allocation of Resources Without Limits or Throttling","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"When allocating resources without limits, an attacker could prevent other systems, applications, or processes from accessing the same type of resource.","Scope":"Availability"}],"description":null,"likeliehood_of_exploit":"High","short_description":"The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor."}},{"_key":"CWE-771","_id":"cwe/CWE-771","_rev":"_jHZO_-2--H","original_id":"771","datatype":"cwe","name":"Missing Reference to Active Allocated Resource","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"An attacker that can influence the allocation of resources that are not properly maintained could deplete the available resource pool and prevent all other processes from accessing the same type of resource.","Scope":"Availability"}],"description":"This does not necessarily apply in languages or frameworks that automatically perform garbage collection, since the removal of all references may act as a signal that the resource is ready to be reclaimed.","likeliehood_of_exploit":"Medium","short_description":"The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed."}},{"_key":"CWE-772","_id":"cwe/CWE-772","_rev":"_jHZO_-2--I","original_id":"772","datatype":"cwe","name":"Missing Release of Resource after Effective Lifetime","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"An attacker that can influence the allocation of resources that are not properly released could deplete the available resource pool and prevent all other processes from accessing the same type of resource.","Scope":"Availability"}],"description":"When a resource is not released after use, it can allow attackers to cause a denial of service by causing the allocation of resources without triggering their release. Frequently-affected resources include memory, CPU, disk space, power or battery, etc.","likeliehood_of_exploit":"High","short_description":"The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed."}},{"_key":"CWE-773","_id":"cwe/CWE-773","_rev":"_jHZO_-2--J","original_id":"773","datatype":"cwe","name":"Missing Reference to Active File Descriptor or Handle","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"An attacker that can influence the allocation of resources that are not properly maintained could deplete the available resource pool and prevent all other processes from accessing the same type of resource.","Scope":"Availability"}],"description":"This can cause the product to consume all available file descriptors or handles, which can prevent other processes from performing critical file processing operations.","likeliehood_of_exploit":"","short_description":"The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed."}},{"_key":"CWE-774","_id":"cwe/CWE-774","_rev":"_jHZO_-2--K","original_id":"774","datatype":"cwe","name":"Allocation of File Descriptors or Handles Without Limits or Throttling","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"When allocating resources without limits, an attacker could prevent all other processes from accessing the same type of resource.","Scope":"Availability"}],"description":"This can cause the product to consume all available file descriptors or handles, which can prevent other processes from performing critical file processing operations.","likeliehood_of_exploit":"Low","short_description":"The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor."}},{"_key":"CWE-775","_id":"cwe/CWE-775","_rev":"_jHZO_-2--L","original_id":"775","datatype":"cwe","name":"Missing Release of File Descriptor or Handle after Effective Lifetime","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"An attacker that can influence the allocation of resources that are not properly released could deplete the available resource pool and prevent all other processes from accessing the same type of resource.","Scope":"Availability"}],"description":"When a file descriptor or handle is not released after use (typically by explicitly closing it), attackers can cause a denial of service by consuming all available file descriptors/handles, or otherwise preventing other system processes from obtaining their own file descriptors/handles.","likeliehood_of_exploit":"","short_description":"The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed."}},{"_key":"CWE-776","_id":"cwe/CWE-776","_rev":"_jHZO_-2--M","original_id":"776","datatype":"cwe","name":"Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"If parsed, recursive entity references allow the attacker to expand data exponentially, quickly consuming all system resources.","Scope":"Availability"}],"description":"If the DTD contains a large number of nested or recursive entities, this can lead to explosive growth of data when parsed, causing a denial of service.","likeliehood_of_exploit":"Medium","short_description":"The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities."}},{"_key":"CWE-777","_id":"cwe/CWE-777","_rev":"_jHZO_-2--N","original_id":"777","datatype":"cwe","name":"Regular Expression without Anchors","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"An unanchored regular expression in the context of an allowlist will possibly result in a protection mechanism failure, allowing malicious or malformed data to enter trusted regions of the program. The specific consequences will depend on what functionality the allowlist was protecting.","Scope":"Access Control"}],"description":"When performing tasks such as validating against a set of allowed inputs (allowlist), data is examined and possibly modified to ensure that it is well-formed and adheres to a list of safe values. If the regular expression is not anchored, malicious or malformed data may be included before or after any string matching the regular expression. The type of malicious data that is allowed will depend on the context of the application and which anchors are omitted from the regular expression.","likeliehood_of_exploit":"Medium","short_description":"The product uses a regular expression to perform neutralization, but the regular expression is not anchored and may allow malicious or malformed data to slip through."}},{"_key":"CWE-778","_id":"cwe/CWE-778","_rev":"_jHZO_-2--O","original_id":"778","datatype":"cwe","name":"Insufficient Logging","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Note":"If security critical information is not recorded, there will be no trail for forensic analysis and discovering the cause of problems or the source of attacks may become more difficult or impossible.","Scope":"Non-Repudiation"}],"description":"\n\t ","likeliehood_of_exploit":"Medium","short_description":"When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it."}},{"_key":"CWE-779","_id":"cwe/CWE-779","_rev":"_jHZO_-2--P","original_id":"779","datatype":"cwe","name":"Logging of Excessive Data","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Other)","Note":"Log files can become so large that they consume excessive resources, such as disk and CPU, which can hinder the performance of the system.","Scope":"Availability"},{"Impact":"Hide Activities","Note":"Logging too much information can make the log files of less use to forensics analysts and developers when trying to diagnose a problem or recover from an attack.","Scope":"Non-Repudiation"},{"Impact":"Hide Activities","Note":"If system administrators are unable to effectively process log files, attempted attacks may go undetected, possibly leading to eventual system compromise.","Scope":"Non-Repudiation"}],"description":"While logging is a good practice in general, and very high levels of logging are appropriate for debugging stages of development, too much logging in a production environment might hinder a system administrator's ability to detect anomalous conditions. This can provide cover for an attacker while attempting to penetrate a system, clutter the audit trail for forensic analysis, or make it more difficult to debug problems in a production environment.","likeliehood_of_exploit":"Low","short_description":"The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack."}},{"_key":"CWE-78","_id":"cwe/CWE-78","_rev":"_jHZO_-2--Q","original_id":"78","datatype":"cwe","name":"Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Hide Activities","Note":"Attackers could execute unauthorized operating system commands, which could then be used to disable the product, or read and modify data for which the attacker does not have permissions to access directly. Since the targeted application is directly executing the commands instead of the attacker, any malicious activities may appear to come from the application or the application's owner.","Scope":"Non-Repudiation"}],"description":"\n\t\t   ","likeliehood_of_exploit":"High","short_description":"The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component."}},{"_key":"CWE-780","_id":"cwe/CWE-780","_rev":"_jHZO_-2--R","original_id":"780","datatype":"cwe","name":"Use of RSA Algorithm without OAEP","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"Without OAEP in RSA encryption, it will take less work for an attacker to decrypt the data or to infer patterns from the ciphertext.","Scope":"Access Control"}],"description":"Padding schemes are often used with cryptographic algorithms to make the plaintext less predictable and complicate attack efforts. The OAEP scheme is often used with RSA to nullify the impact of predictable common text.","likeliehood_of_exploit":"Medium","short_description":"The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption."}},{"_key":"CWE-781","_id":"cwe/CWE-781","_rev":"_jHZO_-2--S","original_id":"781","datatype":"cwe","name":"Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"An attacker may be able to access memory that belongs to another process or user. If the attacker can control the contents that the IOCTL writes, it may lead to code execution at high privilege levels. At the least, a crash can occur.","Scope":"Confidentiality"}],"description":"When an IOCTL uses the METHOD_NEITHER option for I/O control, it is the responsibility of the IOCTL to validate the addresses that have been supplied to it. If validation is missing or incorrect, attackers can supply arbitrary memory addresses, leading to code execution or a denial of service.","likeliehood_of_exploit":"","short_description":"The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it does not validate or incorrectly validates the addresses that are provided."}},{"_key":"CWE-782","_id":"cwe/CWE-782","_rev":"_jHZO_-6---","original_id":"782","datatype":"cwe","name":"Exposed IOCTL with Insufficient Access Control","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Note":"Attackers can invoke any functionality that the IOCTL offers. Depending on the functionality, the consequences may include code execution, denial-of-service, and theft of data.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL."}},{"_key":"CWE-783","_id":"cwe/CWE-783","_rev":"_jHZO_-6--_","original_id":"783","datatype":"cwe","name":"Operator Precedence Logic Error","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Note":"The consequences will vary based on the context surrounding the incorrect precedence. In a security decision, integrity or confidentiality are the most likely results. Otherwise, a crash may occur due to the software reaching an unexpected state.","Scope":"Availability"}],"description":"While often just a bug, operator precedence logic errors can have serious consequences if they are used in security-critical code, such as making an authentication decision.","likeliehood_of_exploit":"Low","short_description":"The product uses an expression in which operator precedence causes incorrect logic to be used."}},{"_key":"CWE-784","_id":"cwe/CWE-784","_rev":"_jHZO_-6--A","original_id":"784","datatype":"cwe","name":"Reliance on Cookies without Validation and Integrity Checking in a Security Decision","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"It is dangerous to use cookies to set a user's privileges. The cookie can be manipulated to claim a high level of authorization, or to claim that successful authentication has occurred.","Scope":"Access Control"}],"description":"Attackers can easily modify cookies, within the browser or by implementing the client-side code outside of the browser. Attackers can bypass protection mechanisms such as authorization and authentication by modifying the cookie to contain an expected value.","likeliehood_of_exploit":"High","short_description":"The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user."}},{"_key":"CWE-785","_id":"cwe/CWE-785","_rev":"_jHZO_-6--B","original_id":"785","datatype":"cwe","name":"Use of Path Manipulation Function without Maximum-sized Buffer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Scope":"Availability"}],"description":"Passing an inadequately-sized output buffer to a path manipulation function can result in a buffer overflow. Such functions include realpath(), readlink(), PathAppend(), and others.","likeliehood_of_exploit":"","short_description":"The product invokes a function for normalizing paths or file names, but it provides an output buffer that is smaller than the maximum possible size, such as PATH_MAX."}},{"_key":"CWE-786","_id":"cwe/CWE-786","_rev":"_jHZO_-6--C","original_id":"786","datatype":"cwe","name":"Access of Memory Location Before Start of Buffer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"For an out-of-bounds read, the attacker may have access to sensitive information. If the sensitive information contains system details, such as the current buffer's position in memory, this knowledge can be used to craft further attacks, possibly with more severe consequences.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Out of bounds memory access will very likely result in the corruption of relevant memory, and perhaps instructions, possibly leading to a crash.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"If the corrupted memory can be effectively controlled, it may be possible to execute arbitrary code. If the corrupted memory is data rather than instructions, the system will continue to function with improper changes, possibly in violation of an implicit or explicit policy.","Scope":"Integrity"}],"description":"This typically occurs when a pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used.","likeliehood_of_exploit":"","short_description":"The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer."}},{"_key":"CWE-787","_id":"cwe/CWE-787","_rev":"_jHZO_-6--D","original_id":"787","datatype":"cwe","name":"Out-of-bounds Write","metadata":{"applicable_platform":["Assembly"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Write operations could cause memory corruption. In some cases, an adversary can modify control data such as return addresses in order to execute unexpected code.","Scope":"Integrity"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Attempting to access out-of-range, invalid, or unauthorized memory could cause the product to crash.","Scope":"Availability"},{"Impact":"Unexpected State","Note":"Subsequent write operations can produce undefined or unexpected results.","Scope":"Other"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product writes data past the end, or before the beginning, of the intended buffer."}},{"_key":"CWE-788","_id":"cwe/CWE-788","_rev":"_jHZO_-6--E","original_id":"788","datatype":"cwe","name":"Access of Memory Location After End of Buffer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"For an out-of-bounds read, the attacker may have access to sensitive information. If the sensitive information contains system details, such as the current buffer's position in memory, this knowledge can be used to craft further attacks, possibly with more severe consequences.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Out of bounds memory access will very likely result in the corruption of relevant memory, and perhaps instructions, possibly leading to a crash. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"If the memory accessible by the attacker can be effectively controlled, it may be possible to execute arbitrary code, as with a standard buffer overflow. If the attacker can overwrite a pointer's worth of memory (usually 32 or 64 bits), they can redirect a function pointer to their own malicious code. Even when the attacker can only modify a single byte arbitrary code execution can be possible. Sometimes this is because the same problem can be exploited repeatedly to the same effect. Other times it is because the attacker can overwrite security-critical application-specific data -- such as a flag indicating whether the user is an administrator.","Scope":"Integrity"}],"description":"This typically occurs when a pointer or its index is incremented to a position after the buffer; or when pointer arithmetic results in a position after the buffer.","likeliehood_of_exploit":"","short_description":"The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer."}},{"_key":"CWE-789","_id":"cwe/CWE-789","_rev":"_jHZO_-6--F","original_id":"789","datatype":"cwe","name":"Memory Allocation with Excessive Size Value","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Resource Consumption (Memory)","Note":"Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumption of a large amount of memory on the system.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated."}},{"_key":"CWE-79","_id":"cwe/CWE-79","_rev":"_jHZO_-6--G","original_id":"79","datatype":"cwe","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"The most common attack performed with cross-site scripting involves the disclosure of information stored in user cookies. Typically, a malicious user will craft a client-side script, which -- when parsed by a web browser -- performs some activity (such as sending all site cookies to a given E-mail address). This script will be loaded and run by each user visiting the web site. Since the site requesting to run the script has access to the cookies in question, the malicious script does also.","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Note":"In some circumstances it may be possible to run arbitrary code on a victim's computer when cross-site scripting is combined with other flaws.","Scope":"Availability"},{"Impact":"Read Application Data","Note":"The consequence of an XSS attack is the same regardless of whether it is stored or reflected. The difference is in how the payload arrives at the server. XSS can cause a variety of problems for the end user that range in severity from an annoyance to complete account compromise. Some cross-site scripting vulnerabilities can be exploited to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Other damaging attacks include the disclosure of end user files, installation of Trojan horse programs, redirecting the user to some other page or site, running \"Active X\" controls (under Microsoft Internet Explorer) from sites that a user perceives as trustworthy, and modifying presentation of content.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}},{"_key":"CWE-790","_id":"cwe/CWE-790","_rev":"_jHZO_-6--H","original_id":"790","datatype":"cwe","name":"Improper Filtering of Special Elements","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component."}},{"_key":"CWE-791","_id":"cwe/CWE-791","_rev":"_jHZO_-6--I","original_id":"791","datatype":"cwe","name":"Incomplete Filtering of Special Elements","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component."}},{"_key":"CWE-792","_id":"cwe/CWE-792","_rev":"_jHZO_-6--J","original_id":"792","datatype":"cwe","name":"Incomplete Filtering of One or More Instances of Special Elements","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component."}},{"_key":"CWE-793","_id":"cwe/CWE-793","_rev":"_jHZO_-6--K","original_id":"793","datatype":"cwe","name":"Only Filtering One Instance of a Special Element","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"Incomplete filtering of this nature may be location-dependent, as in only the first or last element is filtered.","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component."}},{"_key":"CWE-794","_id":"cwe/CWE-794","_rev":"_jHZO_-6--L","original_id":"794","datatype":"cwe","name":"Incomplete Filtering of Multiple Instances of Special Elements","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component."}},{"_key":"CWE-795","_id":"cwe/CWE-795","_rev":"_jHZO_-6--M","original_id":"795","datatype":"cwe","name":"Only Filtering Special Elements at a Specified Location","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component."}},{"_key":"CWE-796","_id":"cwe/CWE-796","_rev":"_jHZO_-6--N","original_id":"796","datatype":"cwe","name":"Only Filtering Special Elements Relative to a Marker","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. \"at the beginning/end of a string; the second argument\"), thereby missing remaining special elements that may exist before sending it to a downstream component."}},{"_key":"CWE-797","_id":"cwe/CWE-797","_rev":"_jHZO_-6--O","original_id":"797","datatype":"cwe","name":"Only Filtering Special Elements at an Absolute Position","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. \"byte number 10\"), thereby missing remaining special elements that may exist before sending it to a downstream component."}},{"_key":"CWE-798","_id":"cwe/CWE-798","_rev":"_jHZO_-6--P","original_id":"798","datatype":"cwe","name":"Use of Hard-coded Credentials","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":null,"Scope":"Access Control"},{"Impact":"Other","Note":null,"Scope":"Other"}],"description":"\n\t\t   ","likeliehood_of_exploit":"High","short_description":"The product contains hard-coded credentials, such as a password or cryptographic key."}},{"_key":"CWE-799","_id":"cwe/CWE-799","_rev":"_jHZO_-6--Q","original_id":"799","datatype":"cwe","name":"Improper Control of Interaction Frequency","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"This can allow the actor to perform actions more frequently than expected. The actor could be a human or an automated process such as a virus or bot. This could be used to cause a denial of service, compromise program logic (such as limiting humans to a single vote), or other consequences. For example, an authentication routine might not limit the number of times an attacker can guess a password. Or, a web site might conduct a poll but only expect humans to vote a maximum of once a day.","likeliehood_of_exploit":"","short_description":"The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests."}},{"_key":"CWE-8","_id":"cwe/CWE-8","_rev":"_jHZO_-6--R","original_id":"8","datatype":"cwe","name":"J2EE Misconfiguration: Entity Bean Declared Remote","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"When an application exposes a remote interface for an entity bean, it might also expose methods that get or set the bean's data. These methods could be leveraged to read sensitive information, or to change data in ways that violate the application's expectations, potentially leading to other vulnerabilities."}},{"_key":"CWE-80","_id":"cwe/CWE-80","_rev":"_jHZO_-6--S","original_id":"80","datatype":"cwe","name":"Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"This may allow such characters to be treated as control characters, which are executed client-side in the context of the user's session. Although this can be classified as an injection problem, the more pertinent issue is the improper conversion of such special characters to respective context-appropriate entities before displaying them to the user.","likeliehood_of_exploit":"High","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages."}},{"_key":"CWE-804","_id":"cwe/CWE-804","_rev":"_jHZO_-6--T","original_id":"804","datatype":"cwe","name":"Guessable CAPTCHA","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Other","Note":"When authorization, authentication, or another protection mechanism relies on CAPTCHA entities to ensure that only human actors can access certain functionality, then an automated attacker such as a bot may access the restricted functionality by guessing the CAPTCHA.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor."}},{"_key":"CWE-805","_id":"cwe/CWE-805","_rev":"_jHZO_-6--U","original_id":"805","datatype":"cwe","name":"Buffer Access with Incorrect Length Value","metadata":{"applicable_platform":["Assembly"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Buffer overflows often can be used to execute arbitrary code, which is usually outside the scope of a program's implicit security policy. This can often be used to subvert any other security service.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (CPU)","Note":"Buffer overflows generally lead to crashes. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.","Scope":"Availability"}],"description":"When the length value exceeds the size of the destination, a buffer overflow could occur.","likeliehood_of_exploit":"High","short_description":"The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer."}},{"_key":"CWE-806","_id":"cwe/CWE-806","_rev":"_jHZO_-6--V","original_id":"806","datatype":"cwe","name":"Buffer Access Using Size of Source Buffer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Resource Consumption (CPU)","Note":"Buffer overflows generally lead to crashes. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Buffer overflows often can be used to execute arbitrary code, which is usually outside the scope of a program's implicit security policy.","Scope":"Availability"},{"Impact":"Bypass Protection Mechanism","Note":"When the consequence is arbitrary code execution, this can often be used to subvert any other security service.","Scope":"Access Control"}],"description":"When the size of the destination is smaller than the size of the source, a buffer overflow could occur.","likeliehood_of_exploit":"","short_description":"The product uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer."}},{"_key":"CWE-807","_id":"cwe/CWE-807","_rev":"_jHZO_-6--W","original_id":"807","datatype":"cwe","name":"Reliance on Untrusted Inputs in a Security Decision","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"Attackers can bypass the security decision to access whatever is being protected. The consequences will depend on the associated functionality, but they can range from granting additional privileges to untrusted users to bypassing important security checks. Ultimately, this weakness may lead to exposure or modification of sensitive data, system crash, or execution of arbitrary code.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism."}},{"_key":"CWE-81","_id":"cwe/CWE-81","_rev":"_jHZO_-6--X","original_id":"81","datatype":"cwe","name":"Improper Neutralization of Script in an Error Message Web Page","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters that could be interpreted as web-scripting elements when they are sent to an error page."}},{"_key":"CWE-82","_id":"cwe/CWE-82","_rev":"_jHZO_-6--Y","original_id":"82","datatype":"cwe","name":"Improper Neutralization of Script in Attributes of IMG Tags in a Web Page","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"Attackers can embed XSS exploits into the values for IMG attributes (e.g. SRC) that is streamed and then executed in a victim's browser. Note that when the page is loaded into a user's browsers, the exploit will automatically execute.","likeliehood_of_exploit":"","short_description":"The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute."}},{"_key":"CWE-820","_id":"cwe/CWE-820","_rev":"_jHZO_-6--Z","original_id":"820","datatype":"cwe","name":"Missing Synchronization","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"If access to a shared resource is not synchronized, then the resource may not be in a state that is expected by the product. This might lead to unexpected or insecure behaviors, especially if an attacker can influence the shared resource.","likeliehood_of_exploit":"","short_description":"The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource."}},{"_key":"CWE-821","_id":"cwe/CWE-821","_rev":"_jHZO_-6--a","original_id":"821","datatype":"cwe","name":"Incorrect Synchronization","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Other"}],"description":"If access to a shared resource is not correctly synchronized, then the resource may not be in a state that is expected by the product. This might lead to unexpected or insecure behaviors, especially if an attacker can influence the shared resource.","likeliehood_of_exploit":"","short_description":"The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource."}},{"_key":"CWE-822","_id":"cwe/CWE-822","_rev":"_jHZO_-6--b","original_id":"822","datatype":"cwe","name":"Untrusted Pointer Dereference","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"If the untrusted pointer is used in a read operation, an attacker might be able to read sensitive portions of memory.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"If the untrusted pointer references a memory location that is not accessible to the product, or points to a location that is \"malformed\" or larger than expected by a read or write operation, the application may terminate unexpectedly.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If the untrusted pointer is used in a function call, or points to unexpected data in a write operation, then code execution may be possible.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer."}},{"_key":"CWE-823","_id":"cwe/CWE-823","_rev":"_jHZO_-6--c","original_id":"823","datatype":"cwe","name":"Use of Out-of-range Pointer Offset","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"If the untrusted pointer is used in a read operation, an attacker might be able to read sensitive portions of memory.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"If the untrusted pointer references a memory location that is not accessible to the program, or points to a location that is \"malformed\" or larger than expected by a read or write operation, the application may terminate unexpectedly.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"If the untrusted pointer is used in a function call, or points to unexpected data in a write operation, then code execution may be possible.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer."}},{"_key":"CWE-824","_id":"cwe/CWE-824","_rev":"_jHZO_-6--d","original_id":"824","datatype":"cwe","name":"Access of Uninitialized Pointer","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"If the uninitialized pointer is used in a read operation, an attacker might be able to read sensitive portions of memory.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"If the uninitialized pointer references a memory location that is not accessible to the product, or points to a location that is \"malformed\" (such as NULL) or larger than expected by a read or write operation, then a crash may occur.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"If the uninitialized pointer is used in a function call, or points to unexpected data in a write operation, then code execution may be possible.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product accesses or uses a pointer that has not been initialized."}},{"_key":"CWE-825","_id":"cwe/CWE-825","_rev":"_jHZO_-6--e","original_id":"825","datatype":"cwe","name":"Expired Pointer Dereference","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"If the expired pointer is used in a read operation, an attacker might be able to control data read in by the application.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"If the expired pointer references a memory location that is not accessible to the product, or points to a location that is \"malformed\" (such as NULL) or larger than expected by a read or write operation, then a crash may occur.","Scope":"Availability"},{"Impact":"Execute Unauthorized Code or Commands","Note":"If the expired pointer is used in a function call, or points to unexpected data in a write operation, then code execution may be possible.","Scope":"Availability"}],"description":"When a product releases memory, but it maintains a pointer to that memory, then the memory might be re-allocated at a later time. If the original pointer is accessed to read or write data, then this could cause the product to read or modify data that is in use by a different function or process. Depending on how the newly-allocated memory is used, this could lead to a denial of service, information exposure, or code execution.","likeliehood_of_exploit":"","short_description":"The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid."}},{"_key":"CWE-826","_id":"cwe/CWE-826","_rev":"_jHZO_-6--f","original_id":"826","datatype":"cwe","name":"Premature Release of Resource During Expected Lifetime","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Memory","Note":"If the released resource is subsequently reused or reallocated, then a read operation on the original resource might access sensitive data that is associated with a different user or entity.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"When the resource is released, the software might modify some of its structure, or close associated channels (such as a file descriptor). When the software later accesses the resource as if it is valid, the resource might not be in an expected state, leading to resultant errors that may lead to a crash.","Scope":"Availability"},{"Impact":"Modify Memory","Note":"When the resource is released, the software might modify some of its structure. This might affect logic in the sections of code that still assume the resource is active. If the released resource is related to memory and is used in a function call, or points to unexpected data in a write operation, then code execution may be possible upon subsequent accesses.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product releases a resource that is still intended to be used by itself or another actor."}},{"_key":"CWE-827","_id":"cwe/CWE-827","_rev":"_jHZO_-6--g","original_id":"827","datatype":"cwe","name":"Improper Control of Document Type Definition","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Files or Directories","Note":"If the attacker is able to include a crafted DTD and a default entity resolver is enabled, the attacker may be able to access arbitrary files on the system.","Scope":"Confidentiality"},{"Impact":"DoS: Resource Consumption (Memory)","Note":"The DTD may cause the parser to consume excessive CPU cycles or memory using techniques such as nested or recursive entity references (CWE-776).","Scope":"Availability"},{"Impact":"Gain Privileges or Assume Identity","Note":"The DTD may include arbitrary HTTP requests that the server may execute. This could lead to other attacks leveraging the server's trust relationship with other entities.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker."}},{"_key":"CWE-828","_id":"cwe/CWE-828","_rev":"_jHZO_-6--h","original_id":"828","datatype":"cwe","name":"Signal Handler with Functionality that is not Asynchronous-Safe","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"The most common consequence will be a corruption of the state of the product, possibly leading to a crash or exit. However, if the signal handler is operating on state variables for security relevant libraries or protection mechanisms, the consequences can be far more severe, including protection mechanism bypass, privilege escalation, or information exposure.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted."}},{"_key":"CWE-829","_id":"cwe/CWE-829","_rev":"_jHZO_-6--i","original_id":"829","datatype":"cwe","name":"Inclusion of Functionality from Untrusted Control Sphere","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could insert malicious functionality into the program by causing the program to download code that the attacker has placed into the untrusted control sphere, such as a malicious web site.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere."}},{"_key":"CWE-83","_id":"cwe/CWE-83","_rev":"_jHZO_-6--j","original_id":"83","datatype":"cwe","name":"Improper Neutralization of Script in Attributes in a Web Page","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not neutralize or incorrectly neutralizes \"javascript:\" or other URIs from dangerous attributes within tags, such as onmouseover, onload, onerror, or style."}},{"_key":"CWE-830","_id":"cwe/CWE-830","_rev":"_jHZO_-6--k","original_id":"830","datatype":"cwe","name":"Inclusion of Web Functionality from an Untrusted Source","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source."}},{"_key":"CWE-831","_id":"cwe/CWE-831","_rev":"_jHZO_-6--l","original_id":"831","datatype":"cwe","name":"Signal Handler Function Associated with Multiple Signals","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Varies by Context","Note":"The most common consequence will be a corruption of the state of the product, possibly leading to a crash or exit. However, if the signal handler is operating on state variables for security relevant libraries or protection mechanisms, the consequences can be far more severe, including protection mechanism bypass, privilege escalation, or information exposure.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product defines a function that is used as a handler for more than one signal."}},{"_key":"CWE-832","_id":"cwe/CWE-832","_rev":"_jHZO_-6--m","original_id":"832","datatype":"cwe","name":"Unlock of a Resource that is not Locked","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Note":"Depending on the locking being used, an unlock operation might not have any adverse effects. When effects exist, the most common consequence will be a corruption of the state of the product, possibly leading to a crash or exit; depending on the implementation of the unlocking, memory corruption or code execution could occur.","Scope":"Other"}],"description":"Depending on the locking functionality, an unlock of a non-locked resource might cause memory corruption or other modification to the resource (or its associated metadata that is used for tracking locks).","likeliehood_of_exploit":"","short_description":"The product attempts to unlock a resource that is not locked."}},{"_key":"CWE-833","_id":"cwe/CWE-833","_rev":"_jHZO_-6--n","original_id":"833","datatype":"cwe","name":"Deadlock","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"Each thread of execution will \"hang\" and prevent tasks from completing. In some cases, CPU consumption may occur if a lock check occurs in a tight loop.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock."}},{"_key":"CWE-834","_id":"cwe/CWE-834","_rev":"_jHZO_-6--o","original_id":"834","datatype":"cwe","name":"Excessive Iteration","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"Excessive looping will cause unexpected consumption of resources, such as CPU cycles or memory. The product's operation may slow down, or cause a long time to respond. If limited resources such as memory are consumed for each iteration, the loop may eventually cause a crash or program exit due to exhaustion of resources, such as an out-of-memory error.","Scope":"Availability"}],"description":"If the iteration can be influenced by an attacker, this weakness could allow attackers to consume excessive resources such as CPU or memory. In many cases, a loop does not need to be infinite in order to cause enough resource consumption to adversely affect the product or its host system; it depends on the amount of resources consumed per iteration.","likeliehood_of_exploit":"","short_description":"The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed."}},{"_key":"CWE-835","_id":"cwe/CWE-835","_rev":"_jHZO_-6--p","original_id":"835","datatype":"cwe","name":"Loop with Unreachable Exit Condition ('Infinite Loop')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Amplification","Note":"An infinite loop will cause unexpected consumption of resources, such as CPU cycles or memory. The software's operation may slow down, or cause a long time to respond.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop."}},{"_key":"CWE-836","_id":"cwe/CWE-836","_rev":"_jHZO_-6--q","original_id":"836","datatype":"cwe","name":"Use of Password Hash Instead of Password for Authentication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"An attacker could bypass the authentication routine without knowing the original password.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store."}},{"_key":"CWE-837","_id":"cwe/CWE-837","_rev":"_jHZO_-6--r","original_id":"837","datatype":"cwe","name":"Improper Enforcement of a Single, Unique Action","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"An attacker might be able to gain advantage over other users by performing the action multiple times, or affect the correctness of the product.","Scope":"Other"}],"description":"In various applications, a user is only expected to perform a certain action once, such as voting, requesting a refund, or making a purchase. When this restriction is not enforced, sometimes this can have security implications. For example, in a voting application, an attacker could attempt to \"stuff the ballot box\" by voting multiple times. If these votes are counted separately, then the attacker could directly affect who wins the vote. This could have significant business impact depending on the purpose of the product.","likeliehood_of_exploit":"","short_description":"The product requires that an actor should only be able to perform an action once, or to have only one unique action, but the product does not enforce or improperly enforces this restriction."}},{"_key":"CWE-838","_id":"cwe/CWE-838","_rev":"_jHZO_-6--s","original_id":"838","datatype":"cwe","name":"Inappropriate Encoding for Output Context","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could modify the structure of the message or data being sent to the downstream component, possibly injecting commands.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component."}},{"_key":"CWE-839","_id":"cwe/CWE-839","_rev":"_jHZO_-6--t","original_id":"839","datatype":"cwe","name":"Numeric Range Comparison Without Minimum Check","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could modify the structure of the message or data being sent to the downstream component, possibly injecting commands.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (Other)","Note":"in some contexts, a negative value could lead to resource consumption.","Scope":"Availability"},{"Impact":"Read Memory","Note":"If a negative value is used to access memory, buffers, or other indexable structures, it could access memory outside the bounds of the buffer.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum."}},{"_key":"CWE-84","_id":"cwe/CWE-84","_rev":"_jHZO__----","original_id":"84","datatype":"cwe","name":"Improper Neutralization of Encoded URI Schemes in a Web Page","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Unexpected State","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The web application improperly neutralizes user-controlled input for executable script disguised with URI encodings."}},{"_key":"CWE-841","_id":"cwe/CWE-841","_rev":"_jHZO__---_","original_id":"841","datatype":"cwe","name":"Improper Enforcement of Behavioral Workflow","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Note":"An attacker could cause the product to skip critical steps or perform them in the wrong order, bypassing its intended business logic. This can sometimes have security implications.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence."}},{"_key":"CWE-842","_id":"cwe/CWE-842","_rev":"_jHZO__---A","original_id":"842","datatype":"cwe","name":"Placement of User into Incorrect Group","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Scope":"Access Control"}],"description":"If the incorrect group has more access or privileges than the intended group, the user might be able to bypass intended security policy to access unexpected resources or perform unexpected actions. The access-control system might not be able to detect malicious usage of this group membership.","likeliehood_of_exploit":"","short_description":"The product or the administrator places a user into an incorrect group."}},{"_key":"CWE-843","_id":"cwe/CWE-843","_rev":"_jHZO__---B","original_id":"843","datatype":"cwe","name":"Access of Resource Using Incompatible Type ('Type Confusion')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"When a memory buffer is accessed using the wrong type, it could read or write memory out of the bounds of the buffer, if the allocated buffer is smaller than the type that the code is attempting to access, leading to a crash and possibly code execution.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type."}},{"_key":"CWE-85","_id":"cwe/CWE-85","_rev":"_jHZO__---C","original_id":"85","datatype":"cwe","name":"Doubled Character XSS Manipulations","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The web application does not filter user-controlled input for executable script disguised using doubling of the involved characters."}},{"_key":"CWE-86","_id":"cwe/CWE-86","_rev":"_jHZO__---D","original_id":"86","datatype":"cwe","name":"Improper Neutralization of Invalid Characters in Identifiers in Web Pages","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"Some web browsers may remove these sequences, resulting in output that may have unintended control implications. For example, the product may attempt to remove a \"javascript:\" URI scheme, but a \"java%00script:\" URI may bypass this check and still be rendered as active javascript by some browsers, allowing XSS or other attacks.","likeliehood_of_exploit":"","short_description":"The product does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers."}},{"_key":"CWE-862","_id":"cwe/CWE-862","_rev":"_jHZO__---E","original_id":"862","datatype":"cwe","name":"Missing Authorization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"An attacker could read sensitive data, either by reading the data directly from a data store that is not restricted, or by accessing insufficiently-protected, privileged functionality to read the data.","Scope":"Confidentiality"},{"Impact":"Modify Files or Directories","Note":"An attacker could modify sensitive data, either by writing the data directly to a data store that is not restricted, or by accessing insufficiently-protected, privileged functionality to write the data.","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"An attacker could gain privileges by modifying or reading critical data directly, or by accessing privileged functionality.","Scope":"Access Control"},{"Impact":"DoS: Resource Consumption (Other)","Note":"An attacker could gain unauthorized access to resources on the system and excessively consume those resources, leading to a denial of service.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product does not perform an authorization check when an actor attempts to access a resource or perform an action."}},{"_key":"CWE-863","_id":"cwe/CWE-863","_rev":"_jHZO__---F","original_id":"863","datatype":"cwe","name":"Incorrect Authorization","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"An attacker could bypass intended access restrictions to read sensitive data, either by reading the data directly from a data store that is not correctly restricted, or by accessing insufficiently-protected, privileged functionality to read the data.","Scope":"Confidentiality"},{"Impact":"Modify Files or Directories","Note":"An attacker could bypass intended access restrictions to modify sensitive data, either by writing the data directly to a data store that is not correctly restricted, or by accessing insufficiently-protected, privileged functionality to write the data.","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"An attacker could bypass intended access restrictions to gain privileges by modifying or reading critical data directly, or by accessing privileged functionality.","Scope":"Access Control"},{"Impact":"Execute Unauthorized Code or Commands","Note":"An attacker could use elevated privileges to execute unauthorized commands or code.","Scope":"Availability"},{"Impact":"DoS: Resource Consumption (Other)","Note":"An attacker could gain unauthorized access to resources on the system and excessively consume those resources, leading to a denial of service.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check."}},{"_key":"CWE-87","_id":"cwe/CWE-87","_rev":"_jHZO__---G","original_id":"87","datatype":"cwe","name":"Improper Neutralization of Alternate XSS Syntax","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product does not neutralize or incorrectly neutralizes user-controlled input for alternate script syntax."}},{"_key":"CWE-88","_id":"cwe/CWE-88","_rev":"_jHZO__---H","original_id":"88","datatype":"cwe","name":"Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could include arguments that allow unintended commands or code to be executed, allow sensitive data to be read or modified or could cause other unintended behavior.","Scope":"Other"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string."}},{"_key":"CWE-89","_id":"cwe/CWE-89","_rev":"_jHZO__---I","original_id":"89","datatype":"cwe","name":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"Adversaries could execute system commands, typically by changing the SQL statement to redirect output to a file that can then be executed.","Scope":"Availability"},{"Impact":"Read Application Data","Note":"Since SQL databases generally hold sensitive data, loss of confidentiality is a frequent problem with SQL injection vulnerabilities.","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"If poor SQL commands are used to check user names and passwords or perform other kinds of authentication, it may be possible to connect to the product as another user with no previous knowledge of the password.","Scope":"Authentication"},{"Impact":"Bypass Protection Mechanism","Note":"If authorization information is held in a SQL database, it may be possible to change this information through the successful exploitation of a SQL injection vulnerability.","Scope":"Access Control"},{"Impact":"Modify Application Data","Note":"Just as it may be possible to read sensitive information, it is also possible to modify or even delete this information with a SQL injection attack.","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"High","short_description":"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."}},{"_key":"CWE-9","_id":"cwe/CWE-9","_rev":"_jHZO__---J","original_id":"9","datatype":"cwe","name":"J2EE Misconfiguration: Weak Access Permissions for EJB Methods","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Other","Scope":"Other"}],"description":"If the EJB deployment descriptor contains one or more method permissions that grant access to the special ANYONE role, it indicates that access control for the application has not been fully thought through or that the application is structured in such a way that reasonable access control restrictions are impossible.","likeliehood_of_exploit":"","short_description":"If elevated access rights are assigned to EJB methods, then an attacker can take advantage of the permissions to exploit the product."}},{"_key":"CWE-90","_id":"cwe/CWE-90","_rev":"_jHZO__---K","original_id":"90","datatype":"cwe","name":"Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could include input that changes the LDAP query which allows unintended commands or code to be executed, allows sensitive data to be read or modified or causes other unintended behavior.","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."}},{"_key":"CWE-908","_id":"cwe/CWE-908","_rev":"_jHZO__---L","original_id":"908","datatype":"cwe","name":"Use of Uninitialized Resource","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"When reusing a resource such as memory or a program variable, the original contents of that resource may not be cleared before it is sent to an untrusted party.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The uninitialized resource may contain values that cause program flow to change in ways that the programmer did not intend.","Scope":"Availability"}],"description":"When a resource has not been properly initialized, the product may behave unexpectedly. This may lead to a crash or invalid memory access, but the consequences vary depending on the type of resource and how it is used within the product.","likeliehood_of_exploit":"Medium","short_description":"The product uses or accesses a resource that has not been initialized."}},{"_key":"CWE-909","_id":"cwe/CWE-909","_rev":"_jHZO__---M","original_id":"909","datatype":"cwe","name":"Missing Initialization of Resource","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"When reusing a resource such as memory or a program variable, the original contents of that resource may not be cleared before it is sent to an untrusted party.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"The uninitialized resource may contain values that cause program flow to change in ways that the programmer did not intend.","Scope":"Availability"}],"description":"Many resources require initialization before they can be properly used. If a resource is not initialized, it could contain unpredictable or expired data, or it could be initialized to defaults that are invalid. This can have security implications when the resource is expected to have certain properties or values.","likeliehood_of_exploit":"Medium","short_description":"The product does not initialize a critical resource."}},{"_key":"CWE-91","_id":"cwe/CWE-91","_rev":"_jHZO__---N","original_id":"91","datatype":"cwe","name":"XML Injection (aka Blind XPath Injection)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Availability"}],"description":"Within XML, special elements could include reserved words or characters such as \"<\", \">\", \"\"\", and \"&\", which could then be used to add new data or modify XML syntax.","likeliehood_of_exploit":"","short_description":"The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system."}},{"_key":"CWE-910","_id":"cwe/CWE-910","_rev":"_jHZO__---O","original_id":"910","datatype":"cwe","name":"Use of Expired File Descriptor","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"The program could read data from the wrong file.","Scope":"Confidentiality"},{"Impact":"DoS: Crash, Exit, or Restart","Note":"Accessing a file descriptor that has been closed can cause a crash.","Scope":"Availability"}],"description":"After a file descriptor for a particular file or device has been released, it can be reused. The code might not write to the original file, since the reused file descriptor might reference a different file or device.","likeliehood_of_exploit":"Medium","short_description":"The product uses or accesses a file descriptor after it has been closed."}},{"_key":"CWE-911","_id":"cwe/CWE-911","_rev":"_jHZO__---P","original_id":"911","datatype":"cwe","name":"Improper Update of Reference Count","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[],"description":"Reference counts can be used when tracking how many objects contain a reference to a particular resource, such as in memory management or garbage collection. When the reference count reaches zero, the resource can be de-allocated or reused because there are no more objects that use it. If the reference count accidentally reaches zero, then the resource might be released too soon, even though it is still in use. If all objects no longer use the resource, but the reference count is not zero, then the resource might not ever be released.","likeliehood_of_exploit":"Medium","short_description":"The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count."}},{"_key":"CWE-912","_id":"cwe/CWE-912","_rev":"_jHZO__---Q","original_id":"912","datatype":"cwe","name":"Hidden Functionality","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Alter Execution Logic","Scope":"Integrity"}],"description":"Hidden functionality can take many forms, such as intentionally malicious code, \"Easter Eggs\" that contain extraneous functionality such as games, developer-friendly shortcuts that reduce maintenance or support costs such as hard-coded accounts, etc. From a security perspective, even when the functionality is not intentionally malicious or damaging, it can increase the product's attack surface and expose additional weaknesses beyond what is already exposed by the intended functionality. Even if it is not easily accessible, the hidden functionality could be useful for attacks that modify the control flow of the application.","likeliehood_of_exploit":"","short_description":"The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators."}},{"_key":"CWE-913","_id":"cwe/CWE-913","_rev":"_jHZO__---R","original_id":"913","datatype":"cwe","name":"Improper Control of Dynamically-Managed Code Resources","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"},{"Impact":"Alter Execution Logic","Scope":"Integrity"}],"description":"Many languages offer powerful features that allow the programmer to dynamically create or modify existing code, or resources used by code such as variables and objects. While these features can offer significant flexibility and reduce development time, they can be extremely dangerous if attackers can directly influence these code resources in unexpected ways.","likeliehood_of_exploit":"","short_description":"The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements."}},{"_key":"CWE-914","_id":"cwe/CWE-914","_rev":"_jHZO__---S","original_id":"914","datatype":"cwe","name":"Improper Control of Dynamically-Identified Variables","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could modify sensitive data or program variables.","Scope":"Integrity"},{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"},{"Impact":"Alter Execution Logic","Scope":"Integrity"}],"description":"Many languages offer powerful features that allow the programmer to access arbitrary variables that are specified by an input string. While these features can offer significant flexibility and reduce development time, they can be extremely dangerous if attackers can modify unintended variables that have security implications.","likeliehood_of_exploit":"","short_description":"The product does not properly restrict reading from or writing to dynamically-identified variables."}},{"_key":"CWE-915","_id":"cwe/CWE-915","_rev":"_jHZO__---T","original_id":"915","datatype":"cwe","name":"Improperly Controlled Modification of Dynamically-Determined Object Attributes","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Note":"An attacker could modify sensitive data or program variables.","Scope":"Integrity"},{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"},{"Impact":"Alter Execution Logic","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified."}},{"_key":"CWE-916","_id":"cwe/CWE-916","_rev":"_jHZO__---U","original_id":"916","datatype":"cwe","name":"Use of Password Hash With Insufficient Computational Effort","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If an attacker can gain access to the hashes, then the lack of sufficient computational effort will make it easier to conduct brute force attacks using techniques such as rainbow tables, or specialized hardware such as GPUs, which can be much faster than general-purpose CPUs for computing hashes.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive."}},{"_key":"CWE-917","_id":"cwe/CWE-917","_rev":"_jHZO__---V","original_id":"917","datatype":"cwe","name":"Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"}],"description":"Frameworks such as Java Server Page (JSP) allow a developer to insert executable expressions within otherwise-static content. When the developer is not aware of the executable nature of these expressions and/or does not disable them, then if an attacker can inject expressions, this could lead to code execution or other unexpected behaviors.","likeliehood_of_exploit":"","short_description":"The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed."}},{"_key":"CWE-918","_id":"cwe/CWE-918","_rev":"_jHZO__---W","original_id":"918","datatype":"cwe","name":"Server-Side Request Forgery (SSRF)","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Scope":"Confidentiality"},{"Impact":"Execute Unauthorized Code or Commands","Scope":"Integrity"},{"Impact":"Bypass Protection Mechanism","Note":"By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used as a proxy to conduct port scanning of hosts in internal networks, use other URLs such as that can access documents on the system (using file://), or use other protocols such as gopher:// or tftp://, which may provide greater control over the contents of requests.","Scope":"Access Control"}],"description":"","likeliehood_of_exploit":"","short_description":"The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination."}},{"_key":"CWE-920","_id":"cwe/CWE-920","_rev":"_jHZO__---X","original_id":"920","datatype":"cwe","name":"Improper Restriction of Power Consumption","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"DoS: Crash, Exit, or Restart","Note":"The power source could be drained, causing the application - and the entire device - to cease functioning.","Scope":"Availability"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes."}},{"_key":"CWE-921","_id":"cwe/CWE-921","_rev":"_jHZO__---Y","original_id":"921","datatype":"cwe","name":"Storage of Sensitive Data in a Mechanism without Access Control","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"Attackers can read sensitive information by accessing the unrestricted storage mechanism.","Scope":"Confidentiality"},{"Impact":"Modify Files or Directories","Note":"Attackers can modify or delete sensitive information by accessing the unrestricted storage mechanism.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product stores sensitive information in a file system or device that does not have built-in access control."}},{"_key":"CWE-922","_id":"cwe/CWE-922","_rev":"_jHZO__---Z","original_id":"922","datatype":"cwe","name":"Insecure Storage of Sensitive Information","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Files or Directories","Note":"Attackers can read sensitive information by accessing the unrestricted storage mechanism.","Scope":"Confidentiality"},{"Impact":"Modify Files or Directories","Note":"Attackers can overwrite sensitive information by accessing the unrestricted storage mechanism.","Scope":"Integrity"}],"description":"If read access is not properly restricted, then attackers can steal the sensitive information. If write access is not properly restricted, then attackers can modify and possibly delete the data, causing incorrect results and possibly a denial of service.","likeliehood_of_exploit":"","short_description":"The product stores sensitive information without properly limiting read or write access by unauthorized actors."}},{"_key":"CWE-923","_id":"cwe/CWE-923","_rev":"_jHZO__---a","original_id":"923","datatype":"cwe","name":"Improper Restriction of Communication Channel to Intended Endpoints","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If an attacker can spoof the endpoint, the attacker gains all the privileges that were intended for the original endpoint.","Scope":"Confidentiality"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint."}},{"_key":"CWE-924","_id":"cwe/CWE-924","_rev":"_jHZO__---b","original_id":"924","datatype":"cwe","name":"Improper Enforcement of Message Integrity During Transmission in a Communication Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"If an attackers can spoof the endpoint, the attacker gains all the privileges that were intended for the original endpoint.","Scope":"Confidentiality"}],"description":"Attackers might be able to modify the message and spoof the endpoint by interfering with the data as it crosses the network or by redirecting the connection to a system under their control.","likeliehood_of_exploit":"","short_description":"The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission."}},{"_key":"CWE-925","_id":"cwe/CWE-925","_rev":"_jHZO__---c","original_id":"925","datatype":"cwe","name":"Improper Verification of Intent by Broadcast Receiver","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Gain Privileges or Assume Identity","Note":"Another application can impersonate the operating system and cause the software to perform an unintended action.","Scope":"Integrity"}],"description":"Certain types of Intents, identified by action string, can only be broadcast by the operating system itself, not by third-party applications. However, when an application registers to receive these implicit system intents, it is also registered to receive any explicit intents. While a malicious application cannot send an implicit system intent, it can send an explicit intent to the target application, which may assume that any received intent is a valid implicit system intent and not an explicit intent from another application. This may lead to unintended behavior.","likeliehood_of_exploit":"","short_description":"The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source."}},{"_key":"CWE-926","_id":"cwe/CWE-926","_rev":"_jHZO__---d","original_id":"926","datatype":"cwe","name":"Improper Export of Android Application Components","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"Other applications, possibly untrusted, can launch the Activity.","Scope":"Integrity"},{"Impact":"Varies by Context","Note":"Other applications, possibly untrusted, can bind to the Service.","Scope":"Integrity"},{"Impact":"Modify Application Data","Note":"Other applications, possibly untrusted, can read or modify the data that is offered by the Content Provider.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains."}},{"_key":"CWE-927","_id":"cwe/CWE-927","_rev":"_jHZO__---e","original_id":"927","datatype":"cwe","name":"Use of Implicit Intent for Sensitive Communication","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Read Application Data","Note":"Other applications, possibly untrusted, can read the data that is offered through the Intent.","Scope":"Confidentiality"},{"Impact":"Varies by Context","Note":"The application may handle responses from untrusted applications on the device, which could cause it to perform unexpected or unauthorized actions.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The Android application uses an implicit intent for transmitting sensitive data to other applications."}},{"_key":"CWE-93","_id":"cwe/CWE-93","_rev":"_jHZO__---f","original_id":"93","datatype":"cwe","name":"Improper Neutralization of CRLF Sequences ('CRLF Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Application Data","Scope":"Integrity"}],"description":"","likeliehood_of_exploit":"","short_description":"The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs."}},{"_key":"CWE-939","_id":"cwe/CWE-939","_rev":"_jHZO__---g","original_id":"939","datatype":"cwe","name":"Improper Authorization in Handler for Custom URL Scheme","metadata":{"applicable_platform":[],"common_consequences":[],"description":"Mobile platforms and other architectures allow the use of custom URL schemes to facilitate communication between applications. In the case of iOS, this is the only method to do inter-application communication. The implementation is at the developer's discretion which may open security flaws in the application. An example could be potentially dangerous functionality such as modifying files through a custom URL scheme.","likeliehood_of_exploit":"","short_description":"The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme."}},{"_key":"CWE-94","_id":"cwe/CWE-94","_rev":"_jHZO__---h","original_id":"94","datatype":"cwe","name":"Improper Control of Generation of Code ('Code Injection')","metadata":{"applicable_platform":["Interpreted"],"common_consequences":[{"Impact":"Bypass Protection Mechanism","Note":"In some cases, injectable code controls authentication; this may lead to a remote vulnerability.","Scope":"Access Control"},{"Impact":"Gain Privileges or Assume Identity","Note":"Injected code can access resources that the attacker is directly prevented from accessing.","Scope":"Access Control"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Code injection attacks can lead to loss of data integrity in nearly all cases as the control-plane data injected is always incidental to data recall or writing. Additionally, code injection can often result in the execution of arbitrary code.","Scope":"Availability"},{"Impact":"Hide Activities","Note":"Often the actions performed by injected control code are unlogged.","Scope":"Non-Repudiation"}],"description":"\n            ","likeliehood_of_exploit":"Medium","short_description":"The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment."}},{"_key":"CWE-940","_id":"cwe/CWE-940","_rev":"_jHZO__---i","original_id":"940","datatype":"cwe","name":"Improper Verification of Source of a Communication Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"An attacker can access any functionality that is inadvertently accessible to the source.","Scope":"Other"}],"description":"When an attacker can successfully establish a communication channel from an untrusted origin, the attacker may be able to gain privileges and access unexpected functionality.","likeliehood_of_exploit":"","short_description":"The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin."}},{"_key":"CWE-941","_id":"cwe/CWE-941","_rev":"_jHZO__---j","original_id":"941","datatype":"cwe","name":"Incorrectly Specified Destination in a Communication Channel","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor."}},{"_key":"CWE-942","_id":"cwe/CWE-942","_rev":"_jHZO__---k","original_id":"942","datatype":"cwe","name":"Permissive Cross-domain Policy with Untrusted Domains","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Note":"An attacker may be able to bypass the web browser's same-origin policy. An attacker can exploit the weakness to manipulate or steal cookies, create requests that can be mistaken for those of a valid user, compromise confidential information, or execute malicious code on the end user systems for a variety of nefarious purposes. Other damaging attacks include the disclosure of end user files, installation of Trojan horse programs, redirecting the user to some other page or site, running ActiveX controls (under Microsoft Internet Explorer) from sites that a user perceives as trustworthy, and modifying presentation of content.","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product uses a cross-domain policy file that includes domains that should not be trusted."}},{"_key":"CWE-943","_id":"cwe/CWE-943","_rev":"_jHZO__---l","original_id":"943","datatype":"cwe","name":"Improper Neutralization of Special Elements in Data Query Logic","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Varies by Context","Scope":"Access Control"}],"description":"\n            ","likeliehood_of_exploit":"","short_description":"The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query."}},{"_key":"CWE-95","_id":"cwe/CWE-95","_rev":"_jHZO__---m","original_id":"95","datatype":"cwe","name":"Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')","metadata":{"applicable_platform":["Interpreted"],"common_consequences":[{"Impact":"Read Application Data","Note":"The injected code could access restricted data / files.","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"In some cases, injectable code controls authentication; this may lead to a remote vulnerability.","Scope":"Access Control"},{"Impact":"Gain Privileges or Assume Identity","Note":"Injected code can access resources that the attacker is directly prevented from accessing.","Scope":"Access Control"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Code injection attacks can lead to loss of data integrity in nearly all cases as the control-plane data injected is always incidental to data recall or writing. Additionally, code injection can often result in the execution of arbitrary code.","Scope":"Other"},{"Impact":"Hide Activities","Note":"Often the actions performed by injected control code are unlogged.","Scope":"Non-Repudiation"}],"description":"This may allow an attacker to execute arbitrary code, or at least modify what code can be executed.","likeliehood_of_exploit":"Medium","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\")."}},{"_key":"CWE-96","_id":"cwe/CWE-96","_rev":"_jHZO__---n","original_id":"96","datatype":"cwe","name":"Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')","metadata":{"applicable_platform":["Interpreted"],"common_consequences":[{"Impact":"Read Application Data","Note":"The injected code could access restricted data / files.","Scope":"Confidentiality"},{"Impact":"Bypass Protection Mechanism","Note":"In some cases, injectable code controls authentication; this may lead to a remote vulnerability.","Scope":"Access Control"},{"Impact":"Gain Privileges or Assume Identity","Note":"Injected code can access resources that the attacker is directly prevented from accessing.","Scope":"Access Control"},{"Impact":"Execute Unauthorized Code or Commands","Note":"Code injection attacks can lead to loss of data integrity in nearly all cases as the control-plane data injected is always incidental to data recall or writing. Additionally, code injection can often result in the execution of arbitrary code.","Scope":"Other"},{"Impact":"Hide Activities","Note":"Often the actions performed by injected control code are unlogged.","Scope":"Non-Repudiation"}],"description":"","likeliehood_of_exploit":"","short_description":"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template."}},{"_key":"CWE-97","_id":"cwe/CWE-97","_rev":"_jHZO__---o","original_id":"97","datatype":"cwe","name":"Improper Neutralization of Server-Side Includes (SSI) Within a Web Page","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Scope":"Availability"}],"description":"","likeliehood_of_exploit":"","short_description":"The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive."}},{"_key":"CWE-98","_id":"cwe/CWE-98","_rev":"_jHZO__---p","original_id":"98","datatype":"cwe","name":"Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')","metadata":{"applicable_platform":[],"common_consequences":[{"Impact":"Execute Unauthorized Code or Commands","Note":"The attacker may be able to specify arbitrary code to be executed from a remote location. Alternatively, it may be possible to use normal program behavior to insert php code into files on the local machine which can then be included and force the code to execute since php ignores everything in the file except for the content between php specifiers.","Scope":"Availability"}],"description":"In certain versions and configurations of PHP, this can allow an attacker to specify a URL to a remote location from which the product will obtain the code to execute. In other cases in association with path traversal, the attacker can specify a local file that may contain executable statements that can be parsed by PHP.","likeliehood_of_exploit":"High","short_description":"The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in \"require,\" \"include,\" or similar functions."}},{"_key":"CWE-99","_id":"cwe/CWE-99","_rev":"_jHZO__---q","original_id":"99","datatype":"cwe","name":"Improper Control of Resource Identifiers ('Resource Injection')","metadata":{"applicable_platform":["Not Language-Specific"],"common_consequences":[{"Impact":"Modify Files or Directories","Note":"An attacker could gain access to or modify sensitive data or system resources. This could allow access to protected files or directories including configuration files and files containing sensitive information.","Scope":"Integrity"}],"description":"\n            ","likeliehood_of_exploit":"High","short_description":"The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control."}}]