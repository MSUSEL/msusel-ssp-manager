{
  "metadata": {
    "timestamp": "2025-05-02T21:11:49.907519",
    "generated_at": "2025-05-02 21:11:49"
  },
  "results": [
    {
      "control_id": "ac-2",
      "status": "passed",
      "test_results": [
        {
          "test_name": "Account Management - Role-based access control",
          "status": "passed",
          "message": "Sample test that always passes"
        }
      ]
    },
    {
      "control_id": "ac-3",
      "status": "failed",
      "test_results": [
        {
          "test_name": "Regular user accessing user profile should allow access to user profile",
          "status": "failed"
        },
        {
          "test_name": "Regular user accessing admin panel should deny access to admin panel",
          "status": "failed"
        },
        {
          "test_name": "Admin user accessing admin panel should allow admin access to admin panel",
          "status": "failed"
        },
        {
          "test_name": "Regular user accessing resources outside business hours should deny access outside business hours for regular users",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"access_control\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"allow_access\"",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"deny_access\"",
          "status": "failed"
        }
      ]
    },
    {
      "control_id": "au-2",
      "status": "failed",
      "test_results": [
        {
          "test_name": "Login event auditing should include \"login\" and \"test_user\" in the audit log",
          "status": "passed"
        },
        {
          "test_name": "Login event auditing should include required audit fields",
          "status": "failed"
        },
        {
          "test_name": "Resource access auditing should log data access in the audit log",
          "status": "passed"
        },
        {
          "test_name": "Resource access auditing should include required fields",
          "status": "failed"
        },
        {
          "test_name": "Configuration change auditing should log configuration change in the audit log",
          "status": "passed"
        },
        {
          "test_name": "Configuration change auditing should include all change tracking fields",
          "status": "failed"
        },
        {
          "test_name": "Failed login auditing should record failed login in the audit log",
          "status": "passed"
        },
        {
          "test_name": "Failed login auditing should include outcome: failure in audit entry",
          "status": "failed"
        },
        {
          "test_name": "Failed login auditing should include required fields for failed login",
          "status": "failed"
        },
        {
          "test_name": "OPA interaction log should include audit keywords should contain 'audit'",
          "status": "failed"
        },
        {
          "test_name": "OPA interaction log should include audit keywords should contain 'should_audit'",
          "status": "failed"
        },
        {
          "test_name": "OPA interaction log should include audit keywords should contain 'audit_record_valid'",
          "status": "failed"
        },
        {
          "test_name": "OPA interaction log should include audit keywords should contain 'flag_for_review'",
          "status": "failed"
        }
      ]
    },
    {
      "control_id": "ia-2",
      "status": "failed",
      "test_results": [
        {
          "test_name": "Regular user authentication should authenticate regular user with password",
          "status": "failed"
        },
        {
          "test_name": "Staff user authentication without MFA should reject staff authentication without MFA",
          "status": "failed"
        },
        {
          "test_name": "Staff user authentication with MFA should authenticate staff user with MFA",
          "status": "failed"
        },
        {
          "test_name": "Admin user authentication with MFA should authenticate admin user with MFA",
          "status": "failed"
        },
        {
          "test_name": "Brute force detection should detect brute force attempts",
          "status": "failed"
        },
        {
          "test_name": "Expired token validation should reject expired tokens",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"authentication\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"authentication_valid\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"token_is_valid\"",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"mfa_used\"",
          "status": "failed"
        }
      ]
    },
    {
      "control_id": "sc-7",
      "status": "passed",
      "test_results": [
        {
          "test_name": "Firewall configuration should have firewall enabled",
          "status": "passed"
        },
        {
          "test_name": "Default deny policy should have default deny policy configured",
          "status": "passed"
        },
        {
          "test_name": "Firewall rules should not have overly permissive rules",
          "status": "passed"
        },
        {
          "test_name": "Network segmentation should have proper network segmentation",
          "status": "passed"
        },
        {
          "test_name": "Zone access controls should have access controls between zones",
          "status": "passed"
        },
        {
          "test_name": "Intrusion detection should have intrusion detection enabled",
          "status": "passed"
        },
        {
          "test_name": "Boundary monitoring should have boundary monitoring enabled",
          "status": "passed"
        },
        {
          "test_name": "Unauthorized access attempt should block unauthorized access attempts",
          "status": "passed"
        },
        {
          "test_name": "Authorized access attempt should allow authorized access attempts",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"security.boundary_protection\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"allow_network_traffic\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"firewall_rules_valid\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"network_segmentation_valid\"",
          "status": "passed"
        }
      ]
    },
    {
      "control_id": "cm-2",
      "status": "failed",
      "test_results": [
        {
          "test_name": "Authorized configuration change should allow authorized configuration change",
          "status": "failed"
        },
        {
          "test_name": "Unauthorized configuration change (non-admin user) should deny configuration change by non-admin user",
          "status": "failed"
        },
        {
          "test_name": "Unauthorized configuration change (outside allowed hours) should deny configuration change outside allowed hours",
          "status": "failed"
        },
        {
          "test_name": "Configuration compliance check should validate compliant configuration",
          "status": "passed"
        },
        {
          "test_name": "Configuration non-compliance check should identify non-compliant configuration",
          "status": "passed"
        },
        {
          "test_name": "Component inventory check should validate component in inventory",
          "status": "passed"
        },
        {
          "test_name": "Component not in inventory should identify component not in inventory",
          "status": "passed"
        },
        {
          "test_name": "Dependency check should validate approved dependencies",
          "status": "passed"
        },
        {
          "test_name": "Unapproved dependency check should identify unapproved dependencies",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"configuration_management\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"config_change_authorized\"",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"config_compliant_with_baseline\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"component_in_inventory\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"dependencies_approved\"",
          "status": "passed"
        }
      ]
    },
    {
      "control_id": "sc-28",
      "status": "passed",
      "test_results": [
        {
          "test_name": "Storage encryption configuration should return storage encryption information",
          "status": "passed"
        },
        {
          "test_name": "Data protection with valid configuration should validate proper data protection configuration",
          "status": "passed"
        },
        {
          "test_name": "Data protection with weak encryption should reject weak encryption algorithms",
          "status": "passed"
        },
        {
          "test_name": "Data protection with poor key management should reject poor key management practices",
          "status": "passed"
        },
        {
          "test_name": "Data protection with shared credentials should reject configurations with shared credentials",
          "status": "passed"
        },
        {
          "test_name": "OPA logs for data protection decisions should have data protection logs",
          "status": "passed"
        }
      ]
    },
    {
      "control_id": "si-10",
      "status": "passed",
      "test_results": [
        {
          "test_name": "Valid input submission should accept valid input",
          "status": "passed"
        },
        {
          "test_name": "SQL injection attempt should reject SQL injection attempt",
          "status": "passed"
        },
        {
          "test_name": "XSS attempt should reject XSS attempt",
          "status": "passed"
        },
        {
          "test_name": "Input length validation should reject input exceeding maximum length",
          "status": "passed"
        },
        {
          "test_name": "Email format validation should reject invalid email format",
          "status": "passed"
        },
        {
          "test_name": "Date format validation should reject invalid date format",
          "status": "passed"
        },
        {
          "test_name": "File integrity validation should validate file with correct hash",
          "status": "passed"
        },
        {
          "test_name": "File integrity validation with invalid hash should reject file with incorrect hash",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"input_validation\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"sql_injection_detected\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"xss_detected\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"input_length_valid\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"input_format_valid\"",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"file_integrity_valid\"",
          "status": "passed"
        }
      ]
    },
    {
      "control_id": "si-3",
      "status": "failed",
      "test_results": [
        {
          "test_name": "Safe file upload should allow safe file",
          "status": "passed"
        },
        {
          "test_name": "Malicious file extension should detect malicious file extension",
          "status": "passed"
        },
        {
          "test_name": "Malicious content pattern should detect malicious content pattern",
          "status": "passed"
        },
        {
          "test_name": "Suspicious file size should detect suspicious file size",
          "status": "passed"
        },
        {
          "test_name": "Approved executable should allow approved executable",
          "status": "passed"
        },
        {
          "test_name": "Override for quarantine should quarantine file with override",
          "status": "passed"
        },
        {
          "test_name": "File ../logs/opa_interactions.log content is expected to include \"malicious_code_protection\"",
          "status": "failed"
        },
        {
          "test_name": "File ../logs/opa_interactions.log content is expected to include \"malicious_code_detected\"",
          "status": "failed"
        }
      ]
    },
    {
      "control_id": "sc-8",
      "status": "failed",
      "test_results": [
        {
          "test_name": "Valid session token should validate active session",
          "status": "failed"
        },
        {
          "test_name": "Inactive session timeout should invalidate inactive session",
          "status": "failed"
        },
        {
          "test_name": "Revoked session token should reject revoked token",
          "status": "failed"
        },
        {
          "test_name": "TLS version validation should use TLS 1.2 or higher",
          "status": "passed"
        },
        {
          "test_name": "Cipher suite validation should use approved cipher suites",
          "status": "passed"
        },
        {
          "test_name": "Encryption at rest should use AES-256 for encryption at rest",
          "status": "passed"
        },
        {
          "test_name": "Encryption at rest should use enterprise key management",
          "status": "passed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"session_crypto\"",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"session_token_valid\"",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"tls_version_acceptable\"",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"cipher_suite_acceptable\"",
          "status": "failed"
        },
        {
          "test_name": "File ./logs/opa_interactions.log content is expected to include \"encryption_at_rest_valid\"",
          "status": "failed"
        }
      ]
    }
  ]
}